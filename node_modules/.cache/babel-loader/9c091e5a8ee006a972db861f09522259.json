{"ast":null,"code":"import * as primitives from '@react-pdf/primitives';\nexport * from '@react-pdf/primitives';\nimport queue from 'queue';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport FontStore from '@react-pdf/font';\nimport renderPDF from '@react-pdf/render';\nimport PDFDocument from '@react-pdf/pdfkit';\nimport layoutDocument from '@react-pdf/layout';\nimport { upperFirst } from '@react-pdf/fns';\nimport Reconciler from '@react-pdf/reconciler';\nimport { jsx } from 'react/jsx-runtime';\n\nconst omitNils = object => Object.fromEntries(Object.entries(object).filter(_ref => {\n  let [, value] = _ref;\n  return value !== undefined;\n}));\n\nconst createInstance = (type, _ref) => {\n  let {\n    style,\n    children,\n    ...props\n  } = _ref;\n  return {\n    type,\n    box: {},\n    style: style || {},\n    props: props || {},\n    children: []\n  };\n};\n\nconst createTextInstance = text => ({\n  type: 'TEXT_INSTANCE',\n  value: text\n});\n\nconst appendChild = (parent, child) => {\n  const isParentText = parent.type === 'TEXT' || parent.type === 'LINK' || parent.type === 'TSPAN' || parent.type === 'NOTE';\n  const isChildTextInstance = child.type === 'TEXT_INSTANCE';\n  const isOrphanTextInstance = isChildTextInstance && !isParentText; // Ignore orphan text instances.\n  // Caused by cases such as <>{name && <Text>{name}</Text>}</>\n\n  if (isOrphanTextInstance) {\n    console.warn(`Invalid '${child.value}' string child outside <Text> component`);\n    return;\n  }\n\n  parent.children.push(child);\n};\n\nconst appendChildToContainer = (parentInstance, child) => {\n  if (parentInstance.type === 'ROOT') {\n    parentInstance.document = child;\n  } else {\n    appendChild(parentInstance, child);\n  }\n};\n\nconst insertBefore = (parentInstance, child, beforeChild) => {\n  var _parentInstance$child;\n\n  const index = (_parentInstance$child = parentInstance.children) === null || _parentInstance$child === void 0 ? void 0 : _parentInstance$child.indexOf(beforeChild);\n  if (index === undefined) return;\n  if (index !== -1 && child) parentInstance.children.splice(index, 0, child);\n};\n\nconst removeChild = (parentInstance, child) => {\n  var _parentInstance$child2;\n\n  const index = (_parentInstance$child2 = parentInstance.children) === null || _parentInstance$child2 === void 0 ? void 0 : _parentInstance$child2.indexOf(child);\n  if (index === undefined) return;\n  if (index !== -1) parentInstance.children.splice(index, 1);\n};\n\nconst removeChildFromContainer = (parentInstance, child) => {\n  var _parentInstance$child3;\n\n  const index = (_parentInstance$child3 = parentInstance.children) === null || _parentInstance$child3 === void 0 ? void 0 : _parentInstance$child3.indexOf(child);\n  if (index === undefined) return;\n  if (index !== -1) parentInstance.children.splice(index, 1);\n};\n\nconst commitTextUpdate = (textInstance, oldText, newText) => {\n  textInstance.value = newText;\n};\n\nconst commitUpdate = (instance, updatePayload, type, oldProps, newProps) => {\n  const {\n    style,\n    ...props\n  } = newProps;\n  instance.props = props;\n  instance.style = style;\n};\n\nconst createRenderer = _ref2 => {\n  let {\n    onChange = () => {}\n  } = _ref2;\n  return Reconciler({\n    appendChild,\n    appendChildToContainer,\n    commitTextUpdate,\n    commitUpdate,\n    createInstance,\n    createTextInstance,\n    insertBefore,\n    removeChild,\n    removeChildFromContainer,\n    resetAfterCommit: onChange\n  });\n};\n\nvar version$1 = \"4.3.0\";\nvar packageJson = {\n  version: version$1\n};\nconst {\n  version\n} = packageJson;\nconst fontStore = new FontStore(); // We must keep a single renderer instance, otherwise React will complain\n\nlet renderer; // The pdf instance acts as an event emitter for DOM usage.\n// We only want to trigger an update when PDF content changes\n\nconst events = {};\n\nconst pdf = initialValue => {\n  const onChange = () => {\n    var _events$change;\n\n    const listeners = ((_events$change = events.change) === null || _events$change === void 0 ? void 0 : _events$change.slice()) || [];\n\n    for (let i = 0; i < listeners.length; i += 1) listeners[i]();\n  };\n\n  const container = {\n    type: 'ROOT',\n    document: null\n  };\n  renderer = renderer || createRenderer({\n    onChange\n  });\n  const mountNode = renderer.createContainer(container);\n\n  const updateContainer = (doc, callback) => {\n    renderer.updateContainer(doc, mountNode, null, callback);\n  };\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async function (compress) {\n    if (compress === void 0) {\n      compress = true;\n    }\n\n    const props = container.document.props || {};\n    const {\n      pdfVersion,\n      language,\n      pageLayout,\n      pageMode,\n      title,\n      author,\n      subject,\n      keyboards,\n      creator = 'react-pdf',\n      producer = 'react-pdf',\n      creationDate = new Date(),\n      modificationDate\n    } = props;\n    const ctx = new PDFDocument({\n      compress,\n      pdfVersion,\n      lang: language,\n      displayTitle: true,\n      autoFirstPage: false,\n      info: omitNils({\n        Title: title,\n        Author: author,\n        Subject: subject,\n        Keywords: keyboards,\n        Creator: creator,\n        Producer: producer,\n        CreationDate: creationDate,\n        ModificationDate: modificationDate\n      })\n    });\n\n    if (pageLayout) {\n      ctx._root.data.PageLayout = upperFirst(pageLayout);\n    }\n\n    if (pageMode) {\n      ctx._root.data.PageMode = upperFirst(pageMode);\n    }\n\n    const layout = await layoutDocument(container.document, fontStore);\n    const fileStream = renderPDF(ctx, layout);\n    return {\n      layout,\n      fileStream\n    };\n  };\n\n  const callOnRender = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  };\n\n  const toBlob = async () => {\n    const chunks = [];\n    const {\n      layout: _INTERNAL__LAYOUT__DATA_,\n      fileStream: instance\n    } = await render();\n    return new Promise((resolve, reject) => {\n      instance.on('data', chunk => {\n        chunks.push(chunk instanceof Uint8Array ? chunk : new Uint8Array(chunk));\n      });\n      instance.on('end', () => {\n        try {\n          const blob = new Blob(chunks, {\n            type: 'application/pdf'\n          });\n          callOnRender({\n            blob,\n            _INTERNAL__LAYOUT__DATA_\n          });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  }; // TODO: rename this method to `toStream` in next major release, because it return stream not a buffer\n\n\n  const toBuffer = async () => {\n    const {\n      layout: _INTERNAL__LAYOUT__DATA_,\n      fileStream\n    } = await render();\n    callOnRender({\n      _INTERNAL__LAYOUT__DATA_\n    });\n    return fileStream;\n  };\n  /*\n   * TODO: remove this method in next major release. it is buggy\n   * see\n   * - https://github.com/diegomura/react-pdf/issues/2112\n   * - https://github.com/diegomura/react-pdf/issues/2095\n   */\n\n\n  const toString = async () => {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('`toString` is deprecated and will be removed in next major release');\n    }\n\n    let result = '';\n    const {\n      fileStream: instance\n    } = await render(false); // For some reason, when rendering to string if compress=true the document is blank\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', buffer => {\n          result += buffer;\n        });\n        instance.on('end', () => {\n          callOnRender();\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const on = (event, listener) => {\n    if (!events[event]) events[event] = [];\n    events[event].push(listener);\n  };\n\n  const removeListener = (event, listener) => {\n    if (!events[event]) return;\n    const idx = events[event].indexOf(listener);\n    if (idx > -1) events[event].splice(idx, 1);\n  };\n\n  return {\n    on,\n    container,\n    toBlob,\n    toBuffer,\n    toString,\n    removeListener,\n    updateContainer\n  };\n};\n\nconst Font = fontStore;\nconst StyleSheet = {\n  create: s => s\n};\n/**\n * PDF hook\n *\n * @param {Object} [options] hook options\n * @returns {[Object, Function]} pdf state and update function\n */\n\nconst usePDF = function (_temp) {\n  let {\n    document\n  } = _temp === void 0 ? {} : _temp;\n  const pdfInstance = useRef(null);\n  const [state, setState] = useState({\n    url: null,\n    blob: null,\n    error: null,\n    loading: !!document\n  }); // Setup rendering queue\n\n  useEffect(() => {\n    const renderQueue = queue({\n      autostart: true,\n      concurrency: 1\n    });\n\n    const queueDocumentRender = () => {\n      setState(prev => ({ ...prev,\n        loading: true\n      }));\n      renderQueue.splice(0, renderQueue.length, () => state.error ? Promise.resolve() : pdfInstance.current.toBlob());\n    };\n\n    const onRenderFailed = error => {\n      console.error(error);\n      setState(prev => ({ ...prev,\n        loading: false,\n        error\n      }));\n    };\n\n    const onRenderSuccessful = blob => {\n      setState({\n        blob,\n        error: null,\n        loading: false,\n        url: URL.createObjectURL(blob)\n      });\n    };\n\n    pdfInstance.current = pdf();\n    pdfInstance.current.on('change', queueDocumentRender);\n\n    if (document) {\n      pdfInstance.current.updateContainer(document);\n    }\n\n    renderQueue.on('error', onRenderFailed);\n    renderQueue.on('success', onRenderSuccessful);\n    return () => {\n      renderQueue.end();\n      pdfInstance.current.removeListener('change', queueDocumentRender);\n    };\n  }, []); // Revoke old unused url instances\n\n  useEffect(() => {\n    return () => {\n      if (state.url) {\n        URL.revokeObjectURL(state.url);\n      }\n    };\n  }, [state.url]);\n  const update = useCallback(newDoc => {\n    pdfInstance.current.updateContainer(newDoc);\n  }, []);\n  return [state, update];\n};\n\nconst PDFViewer = _ref => {\n  let {\n    title,\n    style,\n    className,\n    children,\n    innerRef,\n    showToolbar = true,\n    ...props\n  } = _ref;\n  const [instance, updateInstance] = usePDF();\n  useEffect(() => updateInstance(children), [children]);\n  const src = instance.url ? `${instance.url}#toolbar=${showToolbar ? 1 : 0}` : null;\n  return /*#__PURE__*/jsx(\"iframe\", {\n    src: src,\n    title: title,\n    ref: innerRef,\n    style: style,\n    className: className,\n    ...props\n  });\n};\n\nconst BlobProvider = _ref => {\n  let {\n    document: doc,\n    children\n  } = _ref;\n  const [instance, updateInstance] = usePDF();\n  useEffect(() => updateInstance(doc), [doc]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return children(instance);\n};\n\nconst PDFDownloadLink = _ref => {\n  let {\n    fileName = 'document.pdf',\n    document: doc,\n    children,\n    onClick,\n    href,\n    ...rest\n  } = _ref;\n  const [instance, updateInstance] = usePDF();\n  useEffect(() => updateInstance(doc), [doc]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const handleDownloadIE = () => {\n    if (instance && window.navigator.msSaveBlob) {\n      // IE\n      window.navigator.msSaveBlob(instance.blob, fileName);\n    }\n  };\n\n  const handleClick = event => {\n    handleDownloadIE();\n    if (typeof onClick === 'function') onClick(event, instance);\n  };\n\n  return /*#__PURE__*/jsx(\"a\", {\n    href: instance.url,\n    download: fileName,\n    onClick: handleClick,\n    ...rest,\n    children: typeof children === 'function' ? children(instance) : children\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(`${name} is a Node specific API. You're either using this method in a browser, or your bundler is not loading react-pdf from the appropriate web build.`);\n};\n\nconst renderToStream = () => {\n  throwEnvironmentError('renderToStream');\n};\n\nconst renderToBuffer = () => {\n  throwEnvironmentError('renderToBuffer');\n};\n\nconst renderToString = () => {\n  throwEnvironmentError('renderToString');\n};\n\nconst renderToFile = () => {\n  throwEnvironmentError('renderToFile');\n};\n\nconst render = () => {\n  throwEnvironmentError('render');\n}; // TODO: remove this default export in next major release because it breaks tree-shacking\n\n\nvar index = {\n  pdf,\n  usePDF,\n  Font,\n  version,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToString,\n  renderToFile,\n  render,\n  ...primitives\n};\nexport { BlobProvider, Font, PDFDownloadLink, PDFViewer, StyleSheet, createRenderer, index as default, pdf, render, renderToBuffer, renderToFile, renderToStream, renderToString, usePDF, version };","map":{"version":3,"mappings":"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","names":["omitNils","object","Object","fromEntries","entries","filter","_ref","value","undefined","createInstance","type","style","children","props","box","createTextInstance","text","appendChild","parent","child","isParentText","isChildTextInstance","isOrphanTextInstance","console","warn","push","appendChildToContainer","parentInstance","document","insertBefore","beforeChild","index","_parentInstance$child","indexOf","splice","removeChild","_parentInstance$child2","removeChildFromContainer","_parentInstance$child3","commitTextUpdate","textInstance","oldText","newText","commitUpdate","instance","updatePayload","oldProps","newProps","createRenderer","_ref2","onChange","Reconciler","resetAfterCommit","version","packageJson","fontStore","FontStore","renderer","events","pdf","initialValue","listeners","change","_events$change","slice","i","length","container","mountNode","createContainer","updateContainer","doc","callback","render","compress","pdfVersion","language","pageLayout","pageMode","title","author","subject","keyboards","creator","producer","creationDate","Date","modificationDate","ctx","PDFDocument","lang","displayTitle","autoFirstPage","info","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModificationDate","_root","data","PageLayout","upperFirst","PageMode","layout","layoutDocument","fileStream","renderPDF","callOnRender","params","onRender","toBlob","chunks","_INTERNAL__LAYOUT__DATA_","Promise","resolve","reject","on","chunk","Uint8Array","blob","Blob","error","toBuffer","toString","process","env","NODE_ENV","result","buffer","event","listener","removeListener","idx","Font","StyleSheet","create","s","usePDF","_temp","pdfInstance","useRef","state","setState","useState","url","loading","useEffect","renderQueue","queue","autostart","concurrency","queueDocumentRender","prev","current","onRenderFailed","onRenderSuccessful","URL","createObjectURL","end","revokeObjectURL","update","useCallback","newDoc","PDFViewer","className","innerRef","showToolbar","updateInstance","src","_jsx","ref","BlobProvider","PDFDownloadLink","fileName","onClick","href","rest","handleDownloadIE","window","navigator","msSaveBlob","handleClick","download","throwEnvironmentError","name","Error","renderToStream","renderToBuffer","renderToString","renderToFile","primitives"],"sources":["C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\utils.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\renderer.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\index.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\dom\\usePDF.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\dom\\PDFViewer.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\dom\\BlobProvider.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\dom\\PDFDownloadLink.js","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\node_modules\\@react-pdf\\renderer\\src\\dom\\index.js"],"sourcesContent":["export const omitNils = (object) =>\n  Object.fromEntries(\n    Object.entries(object).filter(([, value]) => value !== undefined),\n  );\n","import Reconciler from '@react-pdf/reconciler';\n\nconst createInstance = (type, { style, children, ...props }) => ({\n  type,\n  box: {},\n  style: style || {},\n  props: props || {},\n  children: [],\n});\n\nconst createTextInstance = (text) => ({ type: 'TEXT_INSTANCE', value: text });\n\nconst appendChild = (parent, child) => {\n  const isParentText =\n    parent.type === 'TEXT' ||\n    parent.type === 'LINK' ||\n    parent.type === 'TSPAN' ||\n    parent.type === 'NOTE';\n\n  const isChildTextInstance = child.type === 'TEXT_INSTANCE';\n  const isOrphanTextInstance = isChildTextInstance && !isParentText;\n\n  // Ignore orphan text instances.\n  // Caused by cases such as <>{name && <Text>{name}</Text>}</>\n  if (isOrphanTextInstance) {\n    console.warn(\n      `Invalid '${child.value}' string child outside <Text> component`,\n    );\n    return;\n  }\n\n  parent.children.push(child);\n};\n\nconst appendChildToContainer = (parentInstance, child) => {\n  if (parentInstance.type === 'ROOT') {\n    parentInstance.document = child;\n  } else {\n    appendChild(parentInstance, child);\n  }\n};\n\nconst insertBefore = (parentInstance, child, beforeChild) => {\n  const index = parentInstance.children?.indexOf(beforeChild);\n\n  if (index === undefined) return;\n\n  if (index !== -1 && child) parentInstance.children.splice(index, 0, child);\n};\n\nconst removeChild = (parentInstance, child) => {\n  const index = parentInstance.children?.indexOf(child);\n\n  if (index === undefined) return;\n\n  if (index !== -1) parentInstance.children.splice(index, 1);\n};\n\nconst removeChildFromContainer = (parentInstance, child) => {\n  const index = parentInstance.children?.indexOf(child);\n\n  if (index === undefined) return;\n\n  if (index !== -1) parentInstance.children.splice(index, 1);\n};\n\nconst commitTextUpdate = (textInstance, oldText, newText) => {\n  textInstance.value = newText;\n};\n\nconst commitUpdate = (instance, updatePayload, type, oldProps, newProps) => {\n  const { style, ...props } = newProps;\n  instance.props = props;\n  instance.style = style;\n};\n\nconst createRenderer = ({ onChange = () => {} }) =>\n  Reconciler({\n    appendChild,\n    appendChildToContainer,\n    commitTextUpdate,\n    commitUpdate,\n    createInstance,\n    createTextInstance,\n    insertBefore,\n    removeChild,\n    removeChildFromContainer,\n    resetAfterCommit: onChange,\n  });\n\nexport default createRenderer;\n","import FontStore from '@react-pdf/font';\nimport renderPDF from '@react-pdf/render';\nimport PDFDocument from '@react-pdf/pdfkit';\nimport layoutDocument from '@react-pdf/layout';\nimport { upperFirst } from '@react-pdf/fns';\n\nimport { omitNils } from './utils';\nimport createRenderer from './renderer';\nimport packageJson from '../package.json';\n\nconst { version } = packageJson;\n\nconst fontStore = new FontStore();\n\n// We must keep a single renderer instance, otherwise React will complain\nlet renderer;\n\n// The pdf instance acts as an event emitter for DOM usage.\n// We only want to trigger an update when PDF content changes\nconst events = {};\n\nconst pdf = (initialValue) => {\n  const onChange = () => {\n    const listeners = events.change?.slice() || [];\n    for (let i = 0; i < listeners.length; i += 1) listeners[i]();\n  };\n\n  const container = { type: 'ROOT', document: null };\n  renderer = renderer || createRenderer({ onChange });\n  const mountNode = renderer.createContainer(container);\n\n  const updateContainer = (doc, callback) => {\n    renderer.updateContainer(doc, mountNode, null, callback);\n  };\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async (compress = true) => {\n    const props = container.document.props || {};\n    const {\n      pdfVersion,\n      language,\n      pageLayout,\n      pageMode,\n      title,\n      author,\n      subject,\n      keyboards,\n      creator = 'react-pdf',\n      producer = 'react-pdf',\n      creationDate = new Date(),\n      modificationDate,\n    } = props;\n\n    const ctx = new PDFDocument({\n      compress,\n      pdfVersion,\n      lang: language,\n      displayTitle: true,\n      autoFirstPage: false,\n      info: omitNils({\n        Title: title,\n        Author: author,\n        Subject: subject,\n        Keywords: keyboards,\n        Creator: creator,\n        Producer: producer,\n        CreationDate: creationDate,\n        ModificationDate: modificationDate,\n      }),\n    });\n\n    if (pageLayout) {\n      ctx._root.data.PageLayout = upperFirst(pageLayout);\n    }\n\n    if (pageMode) {\n      ctx._root.data.PageMode = upperFirst(pageMode);\n    }\n\n    const layout = await layoutDocument(container.document, fontStore);\n    const fileStream = renderPDF(ctx, layout);\n    return { layout, fileStream };\n  };\n\n  const callOnRender = (params = {}) => {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  };\n\n  const toBlob = async () => {\n    const chunks = [];\n    const { layout: _INTERNAL__LAYOUT__DATA_, fileStream: instance } =\n      await render();\n\n    return new Promise((resolve, reject) => {\n      instance.on('data', (chunk) => {\n        chunks.push(\n          chunk instanceof Uint8Array ? chunk : new Uint8Array(chunk),\n        );\n      });\n\n      instance.on('end', () => {\n        try {\n          const blob = new Blob(chunks, { type: 'application/pdf' });\n          callOnRender({ blob, _INTERNAL__LAYOUT__DATA_ });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  };\n\n  // TODO: rename this method to `toStream` in next major release, because it return stream not a buffer\n  const toBuffer = async () => {\n    const { layout: _INTERNAL__LAYOUT__DATA_, fileStream } = await render();\n    callOnRender({ _INTERNAL__LAYOUT__DATA_ });\n\n    return fileStream;\n  };\n\n  /*\n   * TODO: remove this method in next major release. it is buggy\n   * see\n   * - https://github.com/diegomura/react-pdf/issues/2112\n   * - https://github.com/diegomura/react-pdf/issues/2095\n   */\n  const toString = async () => {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        '`toString` is deprecated and will be removed in next major release',\n      );\n    }\n\n    let result = '';\n    const { fileStream: instance } = await render(false); // For some reason, when rendering to string if compress=true the document is blank\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', (buffer) => {\n          result += buffer;\n        });\n\n        instance.on('end', () => {\n          callOnRender();\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const on = (event, listener) => {\n    if (!events[event]) events[event] = [];\n    events[event].push(listener);\n  };\n\n  const removeListener = (event, listener) => {\n    if (!events[event]) return;\n    const idx = events[event].indexOf(listener);\n    if (idx > -1) events[event].splice(idx, 1);\n  };\n\n  return {\n    on,\n    container,\n    toBlob,\n    toBuffer,\n    toString,\n    removeListener,\n    updateContainer,\n  };\n};\n\nconst Font = fontStore;\n\nconst StyleSheet = {\n  create: (s) => s,\n};\n\nexport { version, Font, StyleSheet, pdf, createRenderer };\n","import queue from 'queue';\nimport { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { pdf } from '../index';\n\n/**\n * PDF hook\n *\n * @param {Object} [options] hook options\n * @returns {[Object, Function]} pdf state and update function\n */\nexport const usePDF = ({ document } = {}) => {\n  const pdfInstance = useRef(null);\n\n  const [state, setState] = useState({\n    url: null,\n    blob: null,\n    error: null,\n    loading: !!document,\n  });\n\n  // Setup rendering queue\n  useEffect(() => {\n    const renderQueue = queue({ autostart: true, concurrency: 1 });\n\n    const queueDocumentRender = () => {\n      setState((prev) => ({ ...prev, loading: true }));\n\n      renderQueue.splice(0, renderQueue.length, () =>\n        state.error ? Promise.resolve() : pdfInstance.current.toBlob(),\n      );\n    };\n\n    const onRenderFailed = (error) => {\n      console.error(error);\n      setState((prev) => ({ ...prev, loading: false, error }));\n    };\n\n    const onRenderSuccessful = (blob) => {\n      setState({\n        blob,\n        error: null,\n        loading: false,\n        url: URL.createObjectURL(blob),\n      });\n    };\n\n    pdfInstance.current = pdf();\n    pdfInstance.current.on('change', queueDocumentRender);\n    if (document) {\n      pdfInstance.current.updateContainer(document);\n    }\n\n    renderQueue.on('error', onRenderFailed);\n    renderQueue.on('success', onRenderSuccessful);\n\n    return () => {\n      renderQueue.end();\n      pdfInstance.current.removeListener('change', queueDocumentRender);\n    };\n  }, []);\n\n  // Revoke old unused url instances\n  useEffect(() => {\n    return () => {\n      if (state.url) {\n        URL.revokeObjectURL(state.url);\n      }\n    };\n  }, [state.url]);\n\n  const update = useCallback((newDoc) => {\n    pdfInstance.current.updateContainer(newDoc);\n  }, []);\n\n  return [state, update];\n};\n\nexport default usePDF;\n","import { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const PDFViewer = ({\n  title,\n  style,\n  className,\n  children,\n  innerRef,\n  showToolbar = true,\n  ...props\n}) => {\n  const [instance, updateInstance] = usePDF();\n\n  useEffect(() => updateInstance(children), [children]);\n\n  const src = instance.url\n    ? `${instance.url}#toolbar=${showToolbar ? 1 : 0}`\n    : null;\n\n  return (\n    <iframe\n      src={src}\n      title={title}\n      ref={innerRef}\n      style={style}\n      className={className}\n      {...props}\n    />\n  );\n};\n\nexport default PDFViewer;\n","import { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  const [instance, updateInstance] = usePDF();\n\n  useEffect(() => updateInstance(doc), [doc]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return children(instance);\n};\n\nexport default BlobProvider;\n","import { useEffect } from 'react';\n\nimport usePDF from './usePDF';\n\nexport const PDFDownloadLink = ({\n  fileName = 'document.pdf',\n  document: doc,\n  children,\n  onClick,\n  href,\n  ...rest\n}) => {\n  const [instance, updateInstance] = usePDF();\n\n  useEffect(() => updateInstance(doc), [doc]);\n\n  if (!doc) {\n    console.warn('You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const handleDownloadIE = () => {\n    if (instance && window.navigator.msSaveBlob) {\n      // IE\n      window.navigator.msSaveBlob(instance.blob, fileName);\n    }\n  };\n\n  const handleClick = (event) => {\n    handleDownloadIE();\n    if (typeof onClick === 'function') onClick(event, instance);\n  };\n\n  return (\n    <a href={instance.url} download={fileName} onClick={handleClick} {...rest}>\n      {typeof children === 'function' ? children(instance) : children}\n    </a>\n  );\n};\n\nexport default PDFDownloadLink;\n","import * as primitives from '@react-pdf/primitives';\n\nimport usePDF from './usePDF';\nimport PDFViewer from './PDFViewer';\nimport BlobProvider from './BlobProvider';\nimport PDFDownloadLink from './PDFDownloadLink';\nimport { pdf, version, Font, StyleSheet } from '../index';\n\nconst throwEnvironmentError = (name) => {\n  throw new Error(\n    `${name} is a Node specific API. You're either using this method in a browser, or your bundler is not loading react-pdf from the appropriate web build.`,\n  );\n};\n\nexport const renderToStream = () => {\n  throwEnvironmentError('renderToStream');\n};\n\nexport const renderToBuffer = () => {\n  throwEnvironmentError('renderToBuffer');\n};\n\nexport const renderToString = () => {\n  throwEnvironmentError('renderToString');\n};\n\nexport const renderToFile = () => {\n  throwEnvironmentError('renderToFile');\n};\n\nexport const render = () => {\n  throwEnvironmentError('render');\n};\n\nexport * from '../index';\n\nexport * from './usePDF';\n\nexport * from './PDFViewer';\n\nexport * from './BlobProvider';\n\nexport * from './PDFDownloadLink';\n\nexport * from '@react-pdf/primitives';\n\n// TODO: remove this default export in next major release because it breaks tree-shacking\nexport default {\n  pdf,\n  usePDF,\n  Font,\n  version,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToString,\n  renderToFile,\n  render,\n  ...primitives,\n};\n"]},"metadata":{},"sourceType":"module"}