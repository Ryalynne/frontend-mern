{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const navigate = useNavigate(); // Department & Position State\n\n  const [departments, setDepartments] = useState([]);\n  const [dep_id, setDepId] = useState(\"\"); // Department ID\n\n  const [positions, setPositions] = useState([]);\n  const [position_id, setPositionId] = useState(\"\"); // Selected position\n\n  const [salary, setSalary] = useState(\"\"); // Fetch Departments on Mount\n\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/users/dept\");\n        setDepartments(response.data);\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    };\n\n    fetchDepartments();\n  }, []); // Fetch Positions when Department Changes\n\n  useEffect(() => {\n    if (!dep_id) {\n      setPositions([]);\n      return;\n    }\n\n    const fetchPositions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/salary/${dep_id}`);\n        setPositions(response.data); // Ensure this returns an array\n      } catch (error) {\n        console.error(\"Error fetching positions:\", error);\n      }\n    };\n\n    fetchPositions();\n  }, [dep_id]); // Fetch Salary when Position Changes\n\n  useEffect(() => {\n    if (!position_id) {\n      setSalary(\"\");\n      return;\n    }\n\n    const fetchSalary = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/salary/${position_id}`);\n        setSalary(response.data.salary);\n      } catch (error) {\n        console.error(\"Error fetching salary:\", error);\n      }\n    };\n\n    fetchSalary();\n  }, [position_id]); // Save User\n\n  const saveUser = async e => {\n    e.preventDefault();\n\n    if (!name || !email || !dep_id || !position_id) {\n      alert(\"Please fill in all required fields!\");\n      return;\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/users\", {\n        name,\n        email,\n        gender,\n        dep_id,\n        position_id,\n        salary\n      });\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns mt-5 is-centered\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"input\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dep_id,\n                onChange: e => setDepId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.id,\n                  children: dep.Department_Name\n                }, dep.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), dep_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: position_id,\n                onChange: e => setPositionId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos.id,\n                  children: pos.position\n                }, pos.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: salary,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gender,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"Y+T8ETSFCh0kAoT7pSV/PsZjAcQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/AddUser.js"],"names":["React","useState","useEffect","axios","useNavigate","AddUser","name","setName","email","setEmail","gender","setGender","navigate","departments","setDepartments","dep_id","setDepId","positions","setPositions","position_id","setPositionId","salary","setSalary","fetchDepartments","response","get","data","error","console","fetchPositions","fetchSalary","saveUser","e","preventDefault","alert","post","target","value","map","dep","id","Department_Name","pos","position"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,MAAD,CAApC;AACA,QAAMW,QAAQ,GAAGR,WAAW,EAA5B,CAJoB,CAMpB;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,MAAD,EAASC,QAAT,IAAqBf,QAAQ,CAAC,EAAD,CAAnC,CARoB,CAQqB;;AACzC,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,WAAD,EAAcC,aAAd,IAA+BnB,QAAQ,CAAC,EAAD,CAA7C,CAVoB,CAU+B;;AACnD,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC,CAXoB,CAapB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,kCAAV,CAAvB;AACAX,QAAAA,cAAc,CAACU,QAAQ,CAACE,IAAV,CAAd;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACD;AACF,KAPD;;AAQAJ,IAAAA,gBAAgB;AACjB,GAVQ,EAUN,EAVM,CAAT,CAdoB,CA0BpB;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,MAAL,EAAa;AACXG,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AACD;;AAED,UAAMW,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAML,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACpB,sCAAqCV,MAAO,EADxB,CAAvB;AAGAG,QAAAA,YAAY,CAACM,QAAQ,CAACE,IAAV,CAAZ,CAJE,CAI2B;AAC9B,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,KATD;;AAUAE,IAAAA,cAAc;AACf,GAjBQ,EAiBN,CAACd,MAAD,CAjBM,CAAT,CA3BoB,CA8CpB;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiB,WAAL,EAAkB;AAChBG,MAAAA,SAAS,CAAC,EAAD,CAAT;AACA;AACD;;AAED,UAAMQ,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACpB,sCAAqCN,WAAY,EAD7B,CAAvB;AAGAG,QAAAA,SAAS,CAACE,QAAQ,CAACE,IAAT,CAAcL,MAAf,CAAT;AACD,OALD,CAKE,OAAOM,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD;AACF,KATD;;AAUAG,IAAAA,WAAW;AACZ,GAjBQ,EAiBN,CAACX,WAAD,CAjBM,CAAT,CA/CoB,CAkEpB;;AACA,QAAMY,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAAC3B,IAAD,IAAS,CAACE,KAAV,IAAmB,CAACO,MAApB,IAA8B,CAACI,WAAnC,EAAgD;AAC9Ce,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACD;;AAED,QAAI;AACF,YAAM/B,KAAK,CAACgC,IAAN,CAAW,6BAAX,EAA0C;AAC9C7B,QAAAA,IAD8C;AAE9CE,QAAAA,KAF8C;AAG9CE,QAAAA,MAH8C;AAI9CK,QAAAA,MAJ8C;AAK9CI,QAAAA,WAL8C;AAM9CE,QAAAA;AAN8C,OAA1C,CAAN;AAQAT,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAVD,CAUE,OAAOe,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD;AACF,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEI,QAAhB;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,cAAA,KAAK,EAAEzB,IAHT;AAIE,cAAA,QAAQ,EAAG0B,CAAD,IAAOzB,OAAO,CAACyB,CAAC,CAACI,MAAF,CAASC,KAAV,CAJ1B;AAKE,cAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAgBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,cAAA,KAAK,EAAE7B,KAHT;AAIE,cAAA,QAAQ,EAAGwB,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACI,MAAF,CAASC,KAAV,CAJ3B;AAKE,cAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA8BE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACE;AACE,gBAAA,KAAK,EAAEtB,MADT;AAEE,gBAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACI,MAAF,CAASC,KAAV,CAF3B;AAAA,wCAIE;AAAQ,kBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKGxB,WAAW,CAACyB,GAAZ,CAAiBC,GAAD,iBACf;AAAqB,kBAAA,KAAK,EAAEA,GAAG,CAACC,EAAhC;AAAA,4BACGD,GAAG,CAACE;AADP,mBAAaF,GAAG,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,wBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,EAkDGzB,MAAM,iBACL;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACE;AACE,gBAAA,KAAK,EAAEI,WADT;AAEE,gBAAA,QAAQ,EAAGa,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACI,MAAF,CAASC,KAAV,CAFhC;AAAA,wCAIE;AAAQ,kBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKGpB,SAAS,CAACqB,GAAV,CAAeI,GAAD,iBACb;AAAqB,kBAAA,KAAK,EAAEA,GAAG,CAACF,EAAhC;AAAA,4BACGE,GAAG,CAACC;AADP,mBAAaD,GAAG,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA,wBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDJ,eAwEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,OAA7B;AAAqC,cAAA,KAAK,EAAEnB,MAA5C;AAAoD,cAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxEF,eAgFE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACE;AACE,gBAAA,KAAK,EAAEX,MADT;AAEE,gBAAA,QAAQ,EAAGsB,CAAD,IAAOrB,SAAS,CAACqB,CAAC,CAACI,MAAF,CAASC,KAAV,CAF5B;AAAA,wCAIE;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAQ,kBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhFF,eAgGE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhGF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4GD,CAtMD;;GAAMhC,O;UAIaD,W;;;KAJbC,O;AAwMN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AddUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"Male\");\r\n  const navigate = useNavigate();\r\n\r\n  // Department & Position State\r\n  const [departments, setDepartments] = useState([]);\r\n  const [dep_id, setDepId] = useState(\"\"); // Department ID\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\"); // Selected position\r\n  const [salary, setSalary] = useState(\"\");\r\n\r\n  // Fetch Departments on Mount\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/users/dept\");\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n      }\r\n    };\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  // Fetch Positions when Department Changes\r\n  useEffect(() => {\r\n    if (!dep_id) {\r\n      setPositions([]);\r\n      return;\r\n    }\r\n\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/users/salary/${dep_id}`\r\n        );\r\n        setPositions(response.data); // Ensure this returns an array\r\n      } catch (error) {\r\n        console.error(\"Error fetching positions:\", error);\r\n      }\r\n    };\r\n    fetchPositions();\r\n  }, [dep_id]);\r\n\r\n  // Fetch Salary when Position Changes\r\n  useEffect(() => {\r\n    if (!position_id) {\r\n      setSalary(\"\");\r\n      return;\r\n    }\r\n\r\n    const fetchSalary = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/users/salary/${position_id}`\r\n        );\r\n        setSalary(response.data.salary);\r\n      } catch (error) {\r\n        console.error(\"Error fetching salary:\", error);\r\n      }\r\n    };\r\n    fetchSalary();\r\n  }, [position_id]);\r\n\r\n  // Save User\r\n  const saveUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !dep_id || !position_id) {\r\n      alert(\"Please fill in all required fields!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/users\", {\r\n        name,\r\n        email,\r\n        gender,\r\n        dep_id,\r\n        position_id,\r\n        salary,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Error saving user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"columns mt-5 is-centered\">\r\n      <div className=\"column is-half\">\r\n        <form onSubmit={saveUser}>\r\n          {/* Full Name */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Full Name</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Full Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Department */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Department</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={dep_id}\r\n                  onChange={(e) => setDepId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select a department</option>\r\n                  {departments.map((dep) => (\r\n                    <option key={dep.id} value={dep.id}>\r\n                      {dep.Department_Name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Position - Show only when department is selected */}\r\n          {dep_id && (\r\n            <div className=\"field\">\r\n              <label className=\"label\">Position</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    value={position_id}\r\n                    onChange={(e) => setPositionId(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select a position</option>\r\n                    {positions.map((pos) => (\r\n                      <option key={pos.id} value={pos.id}>\r\n                        {pos.position}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Salary Display */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Salary</label>\r\n            <div className=\"control\">\r\n              <input type=\"text\" className=\"input\" value={salary} disabled />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Gender */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Gender</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                >\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}