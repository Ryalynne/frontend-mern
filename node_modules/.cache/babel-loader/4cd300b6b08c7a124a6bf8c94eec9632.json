{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\EditJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditSalary = () => {\n  _s();\n\n  const [job_title, setJob] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getJob();\n  }, []);\n\n  const getJob = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/job/getJobTitle/${id}`);\n      setJob(response.data.Job_Title);\n    } catch (error) {\n      console.error(\"Error fetching Job Title:\", error);\n    }\n  }; //save/update\n\n\n  const saveJob = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.patch(`http://localhost:5000/job/${id}`, {\n        job_title\n      });\n      navigate(\"/JobTitleList\");\n    } catch (error) {\n      console.error(\"Error updating salary:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveJob,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: job_title,\n              onChange: e => setJob(e.target.value),\n              placeholder: \"Job Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditSalary, \"BZOO4COfSdgtgySXdq5CrreuR24=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditSalary;\nexport default EditSalary;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSalary\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/EditJob.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","EditSalary","job_title","setJob","navigate","id","getJob","response","get","data","Job_Title","error","console","saveJob","e","preventDefault","patch","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CACpB,yCAAwCH,EAAG,EADvB,CAAvB;AAGAF,MAAAA,MAAM,CAACI,QAAQ,CAACE,IAAT,CAAcC,SAAf,CAAN;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,GATD,CATuB,CAoBvB;;;AACA,QAAME,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMjB,KAAK,CAACkB,KAAN,CAAa,6BAA4BX,EAAG,EAA5C,EAA+C;AACnDH,QAAAA;AADmD,OAA/C,CAAN;AAGAE,MAAAA,QAAQ,CAAC,eAAD,CAAR;AACD,KALD,CAKE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD;AACF,GAVD;;AAYA,sBAEE;AAAA,4BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADL,eAEE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEE,OAAhB;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,cAAA,KAAK,EAAEX,SAHT;AAIE,cAAA,QAAQ,EAAGY,CAAD,IAAOX,MAAM,CAACW,CAAC,CAACG,MAAF,CAASC,KAAV,CAJzB;AAKE,cAAA,WAAW,EAAC,WALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAiBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA+BD,CAhED;;GAAMjB,U;UAEaF,W,EACFC,S;;;KAHXC,U;AAkEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditSalary = () => {\r\n  const [job_title, setJob] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getJob();\r\n  }, []);\r\n\r\n  const getJob = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/job/getJobTitle/${id}`\r\n      );\r\n      setJob(response.data.Job_Title);\r\n    } catch (error) {\r\n      console.error(\"Error fetching Job Title:\", error);\r\n    }\r\n  };\r\n\r\n  //save/update\r\n  const saveJob = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/job/${id}`, {\r\n        job_title,\r\n      });\r\n      navigate(\"/JobTitleList\");\r\n    } catch (error) {\r\n      console.error(\"Error updating salary:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n \r\n    <div>\r\n         <Navbar />\r\n      <div className=\"column is-half container\">\r\n        <form onSubmit={saveJob}>\r\n          {/* Job Title */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Job Title</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={job_title}\r\n                onChange={(e) => setJob(e.target.value)}\r\n                placeholder=\"Job Title\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditSalary;\r\n"]},"metadata":{},"sourceType":"module"}