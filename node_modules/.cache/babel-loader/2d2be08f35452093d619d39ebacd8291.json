{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Printing\\\\SalaryPDF.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\"; // Styles for PDF\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    padding: 20\n  },\n  header: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginBottom: 15,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\"\n  },\n  table: {\n    display: \"table\",\n    width: \"100%\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: \"#000\",\n    marginBottom: 10\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f2f2f2\" // Light gray header background\n\n  },\n  tableCell: {\n    flex: 1,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    padding: 8,\n    fontSize: 11,\n    textAlign: \"center\",\n    fontWeight: \"bold\"\n  },\n  tableData: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"#ddd\"\n  },\n  dataCell: {\n    flex: 1,\n    padding: 8,\n    fontSize: 10,\n    textAlign: \"center\"\n  },\n  salaryCell: {\n    flex: 1,\n    padding: 8,\n    fontSize: 10,\n    textAlign: \"right\",\n    // Align salary values to the right\n    fontWeight: \"bold\"\n  }\n}); // Salary PDF Document Component\n\nconst SalaryPDF = _ref => {\n  let {\n    salaries\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.header,\n        children: \"Salary Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Salary ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Position / Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), salaries.map(user => /*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableData,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.dataCell,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.dataCell,\n            children: user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.dataCell,\n            children: user.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.salaryCell,\n            children: user.salary ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            })}` : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}; // ✅ Make sure to use **export default**\n\n\n_c = SalaryPDF;\nexport default SalaryPDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryPDF\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Printing/SalaryPDF.js"],"names":["React","Page","Text","View","Document","StyleSheet","styles","create","page","padding","header","fontSize","textAlign","marginBottom","fontWeight","textTransform","table","display","width","borderStyle","borderWidth","borderColor","tableRow","flexDirection","backgroundColor","tableCell","flex","tableData","borderBottomWidth","dataCell","salaryCell","SalaryPDF","salaries","map","user","id","Job_Title","position","salary","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Styles for PDF\r\nconst styles = StyleSheet.create({\r\n  page: { padding: 20 },\r\n  header: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    marginBottom: 15,\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  table: {\r\n    display: \"table\",\r\n    width: \"100%\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n    marginBottom: 10,\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#f2f2f2\", // Light gray header background\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    padding: 8,\r\n    fontSize: 11,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  tableData: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ddd\",\r\n  },\r\n  dataCell: {\r\n    flex: 1,\r\n    padding: 8,\r\n    fontSize: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  salaryCell: {\r\n    flex: 1,\r\n    padding: 8,\r\n    fontSize: 10,\r\n    textAlign: \"right\", // Align salary values to the right\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\n// Salary PDF Document Component\r\nconst SalaryPDF = ({ salaries }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <Text style={styles.header}>Salary Report</Text>\r\n      <View style={styles.table}>\r\n        {/* Table Header */}\r\n        <View style={styles.tableRow}>\r\n          <Text style={styles.tableCell}>Salary ID</Text>\r\n          <Text style={styles.tableCell}>Job Title</Text>\r\n          <Text style={styles.tableCell}>Position / Level</Text>\r\n          <Text style={styles.tableCell}>Salary</Text>\r\n        </View>\r\n        {/* Table Data */}\r\n        {salaries.map((user) => (\r\n          <View style={styles.tableData} key={user.id}>\r\n            <Text style={styles.dataCell}>{user.id}</Text>\r\n            <Text style={styles.dataCell}>{user.Job_Title}</Text>\r\n            <Text style={styles.dataCell}>{user.position}</Text>\r\n            <Text style={styles.salaryCell}>\r\n              {user.salary\r\n                ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                    minimumFractionDigits: 2,\r\n                  })}`\r\n                : \"\"}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\n// ✅ Make sure to use **export default**\r\nexport default SalaryPDF;\r\n"]},"metadata":{},"sourceType":"module"}