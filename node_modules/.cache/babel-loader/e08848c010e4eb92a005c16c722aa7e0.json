{"ast":null,"code":"import { Base } from './Base.js';\nexport class Bitfield extends Base {\n  constructor(type) {\n    let flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n    const res = {};\n\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n\n      if (flag != null) {\n        res[flag] = !!(val & 1 << i);\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n\n      if (flag != null) {\n        if (keys[flag]) {\n          val |= 1 << i;\n        }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/restructure/src/Bitfield.js"],"names":["Base","Bitfield","constructor","type","flags","decode","stream","val","res","i","length","flag","size","encode","keys"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;AAEA,OAAO,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;AACjCE,EAAAA,WAAW,CAACC,IAAD,EAAmB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAC5B;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACb,UAAMC,GAAG,GAAG,KAAKJ,IAAL,CAAUE,MAAV,CAAiBC,MAAjB,CAAZ;AAEA,UAAME,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAME,IAAI,GAAG,KAAKP,KAAL,CAAWK,CAAX,CAAb;;AACA,UAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChBH,QAAAA,GAAG,CAACG,IAAD,CAAH,GAAY,CAAC,EAAEJ,GAAG,GAAI,KAAKE,CAAd,CAAb;AACD;AACF;;AAED,WAAOD,GAAP;AACD;;AAEDI,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKT,IAAL,CAAUS,IAAV,EAAP;AACD;;AAEDC,EAAAA,MAAM,CAACP,MAAD,EAASQ,IAAT,EAAe;AACnB,QAAIP,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAME,IAAI,GAAG,KAAKP,KAAL,CAAWK,CAAX,CAAb;;AACA,UAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChB,YAAIG,IAAI,CAACH,IAAD,CAAR,EAAgB;AAAEJ,UAAAA,GAAG,IAAK,KAAKE,CAAb;AAAkB;AACrC;AACF;;AAED,WAAO,KAAKN,IAAL,CAAUU,MAAV,CAAiBP,MAAjB,EAAyBC,GAAzB,CAAP;AACD;;AAnCgC","sourcesContent":["import {Base} from './Base.js';\n\nexport class Bitfield extends Base {\n  constructor(type, flags = []) {\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & (1 << i));\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) { val |= (1 << i); }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}