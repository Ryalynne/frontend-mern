{"ast":null,"code":"import _objectSpread from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _boundingBoxFns, _renderFns$, _renderFns;\n\nimport * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\n\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\n\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props2, _node$props3, _node$props4, _node$props5, _node$props6, _node$props7;\n\n  var x = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.x) || 0;\n  var y = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.y) || 0;\n  var rx = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.rx) || 0;\n  var ry = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.ry) || 0;\n  var width = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.width) || 0;\n  var height = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.height) || 0;\n  if (!width || !height) return;\n\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n};\n\nvar renderLine$1 = function renderLine$1(ctx, node) {\n  var _ref = node.props || {},\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\n\nvar renderGroup = function renderGroup() {// noop\n};\n\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar drawEllipse = function drawEllipse(ctx, rx, ry) {\n  var cx = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var cy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref2 = node.props || {},\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry;\n\n  drawEllipse(ctx, rx, ry, cx, cy);\n};\n\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props8, _node$props9, _node$props10;\n\n  var cx = (_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.cx;\n  var cy = (_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.cy;\n  var r = (_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.r;\n  drawEllipse(ctx, r, r, cx, cy);\n};\n/* eslint-disable no-return-assign */\n\n\nvar number = function number(n) {\n  if (n > -1e21 && n < 1e21) {\n    return Math.round(n * 1e6) / 1e6;\n  }\n\n  throw new Error(\"unsupported number: \".concat(n));\n};\n\nvar _renderGlyphs = function _renderGlyphs(ctx, encoded, positions, x, y) {\n  var commands = [];\n  var scale = ctx._fontSize / 1000;\n  var i;\n  var last = 0;\n  var hadOffset = false;\n  ctx.save(); // flip coordinate system\n\n  ctx.transform(1, 0, 0, -1, 0, ctx.page.height);\n  y = ctx.page.height - y; // add current font to page if necessary\n\n  if (ctx.page.fonts[ctx._font.id] == null) {\n    ctx.page.fonts[ctx._font.id] = ctx._font.ref();\n  } // begin the text object\n\n\n  ctx.addContent('BT'); // text position\n\n  ctx.addContent(\"1 0 0 1 \".concat(number(x), \" \").concat(number(y), \" Tm\")); // font and font size\n\n  ctx.addContent(\"/\".concat(ctx._font.id, \" \").concat(number(ctx._fontSize), \" Tf\")); // Adds a segment of text to the TJ command buffer\n\n  var addSegment = function addSegment(cur) {\n    if (last < cur) {\n      var hex = encoded.slice(last, cur).join('');\n      var advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n      commands.push(\"<\".concat(hex, \"> \").concat(number(-advance)));\n    }\n\n    return last = cur;\n  }; // Flushes the current TJ commands to the output stream\n\n\n  var flush = function flush(s) {\n    addSegment(s);\n\n    if (commands.length > 0) {\n      ctx.addContent(\"[\".concat(commands.join(' '), \"] TJ\"));\n      return commands.length = 0;\n    }\n  };\n\n  for (i = 0; i < positions.length; i += 1) {\n    // If we have an x or y offset, we have to break out of the current TJ command\n    // so we can move the text position.\n    var pos = positions[i];\n\n    if (pos.xOffset || pos.yOffset) {\n      // Flush the current buffer\n      flush(i); // Move the text position and flush just the current character\n\n      ctx.addContent(\"1 0 0 1 \".concat(number(x + pos.xOffset * scale), \" \").concat(number(y + pos.yOffset * scale), \" Tm\"));\n      flush(i + 1);\n      hadOffset = true;\n    } else {\n      // If the last character had an offset, reset the text position\n      if (hadOffset) {\n        ctx.addContent(\"1 0 0 1 \".concat(number(x), \" \").concat(number(y), \" Tm\"));\n        hadOffset = false;\n      } // Group segments that don't have any advance adjustments\n\n\n      if (pos.xAdvance - pos.advanceWidth !== 0) {\n        addSegment(i + 1);\n      }\n    }\n\n    x += pos.xAdvance * scale;\n  } // Flush any remaining commands\n\n\n  flush(i); // end the text object\n\n  ctx.addContent('ET'); // restore flipped coordinate system\n\n  return ctx.restore();\n};\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y) {\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return _renderGlyphs(ctx, encodedGlyphs, encodedPositions, x, y);\n};\n\nvar renderRun$1 = function renderRun$1(ctx, run) {\n  var _run$attributes$font;\n\n  if (!run.glyphs) return;\n  if (!run.positions) return;\n  var runAdvanceWidth = run.xAdvance;\n  var font = (_run$attributes$font = run.attributes.font) === null || _run$attributes$font === void 0 ? void 0 : _run$attributes$font[0];\n  var _run$attributes = run.attributes,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  if (color) ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font) {\n    ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n  }\n\n  try {\n    renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n  } catch (error) {\n    console.log(error);\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$$attribute, _line$runs$2, _line$runs$2$attribut;\n\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : (_line$runs$$attribute = _line$runs$.attributes.font) === null || _line$runs$$attribute === void 0 ? void 0 : _line$runs$$attribute[0];\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  if (!font) return;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx, node) {\n  var children = node.children;\n  children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\nvar pairs = function pairs(values) {\n  var result = [];\n\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n\n  return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param points string ex. \"20,30 50,60\"\n * @returns points array ex. [[20, 30], [50, 60]]\n */\n\n\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n\n  var mappedValues = values.map(parseFloat);\n  return pairs(mappedValues);\n};\n\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\n\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\n\nvar renderPolygon = function renderPolygon(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n  ctx.closePath();\n};\n\nvar renderImage$1 = function renderImage$1(ctx, node) {\n  var _node$image;\n\n  if (!node.box) return;\n  if (!((_node$image = node.image) !== null && _node$image !== void 0 && _node$image.data)) return;\n  var _node$props11 = node.props,\n      _node$props11$x = _node$props11.x,\n      x = _node$props11$x === void 0 ? 0 : _node$props11$x,\n      _node$props11$y = _node$props11.y,\n      y = _node$props11$y === void 0 ? 0 : _node$props11$y;\n  var _node$style = node.style,\n      width = _node$style.width,\n      height = _node$style.height,\n      opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\".concat(node.props.href, \"' skipped due to invalid dimensions\"));\n    return;\n  }\n\n  if (typeof width === 'string' || typeof height === 'string') {\n    console.warn(\"Image with src '\".concat(node.props.href, \"' skipped due to percentage width or height\"));\n    return;\n  }\n\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n}; // This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\n\n\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.box) return;\n  if (!node.style) return;\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$style2 = node.style,\n      _node$style2$borderTo = _node$style2.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style2$borderTo === void 0 ? 0 : _node$style2$borderTo,\n      _node$style2$borderTo2 = _node$style2.borderTopRightRadius,\n      borderTopRightRadius = _node$style2$borderTo2 === void 0 ? 0 : _node$style2$borderTo2,\n      _node$style2$borderBo = _node$style2.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style2$borderBo === void 0 ? 0 : _node$style2$borderBo,\n      _node$style2$borderBo2 = _node$style2.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style2$borderBo2 === void 0 ? 0 : _node$style2$borderBo2; // Border top\n  // @ts-expect-error this is always a number due to resolve border radius step\n\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n  // @ts-expect-error this is always a number due to resolve border radius step\n\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n  // @ts-expect-error this is always a number due to resolve border radius step\n\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n  // @ts-expect-error this is always a number due to resolve border radius step\n\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var _value = _slicedToArray(value, 2),\n            scaleX = _value[0],\n            scaleY = _value[1];\n\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var _value2 = _slicedToArray(value, 1),\n            angle = _value2[0];\n\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var _value3 = _slicedToArray(value, 2),\n            x = _value3[0],\n            _value3$ = _value3[1],\n            y = _value3$ === void 0 ? 0 : _value3$;\n\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'skew':\n      {\n        var _value4 = _slicedToArray(value, 2),\n            _value4$ = _value4[0],\n            xAngle = _value4$ === void 0 ? 0 : _value4$,\n            _value4$2 = _value4[1],\n            yAngle = _value4$2 === void 0 ? 0 : _value4$2;\n\n        var radx = xAngle * Math.PI / 180;\n        var rady = yAngle * Math.PI / 180;\n        var tanx = Math.tan(radx);\n        var tany = Math.tan(rady);\n        var _x = 0;\n        var _y = 0;\n\n        if (origin != null) {\n          var _Array$from = Array.from(origin);\n\n          var _Array$from2 = _slicedToArray(_Array$from, 2);\n\n          _x = _Array$from2[0];\n          _y = _Array$from2[1];\n          var x1 = _x + tanx * _y;\n          var y1 = _y + tany * _x;\n          _x -= x1;\n          _y -= y1;\n        }\n\n        ctx.transform(1, tany, tanx, 1, _x, _y);\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, _toConsumableArray(value));\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\".concat(operation, \"' doesn't supported\"));\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  if (!node.origin) return;\n  var props = node.props,\n      style = node.style;\n  var origin = [node.origin.left, node.origin.top];\n  var propsTransform = 'transform' in props ? props.transform : undefined;\n  var operations = (style === null || style === void 0 ? void 0 : style.transform) || propsTransform || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n}; // From https://github.com/dy/svg-path-bounds/blob/master/index.js\n\n\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props12;\n\n  var path = normalizePath(absPath(parsePath(((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15;\n\n  var r = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.r) || 0;\n  var cx = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.cx) || 0;\n  var cy = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props16, _node$props17, _node$props18, _node$props19;\n\n  var cx = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.cx) || 0;\n  var cy = ((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.cy) || 0;\n  var rx = ((_node$props18 = node.props) === null || _node$props18 === void 0 ? void 0 : _node$props18.rx) || 0;\n  var ry = ((_node$props19 = node.props) === null || _node$props19 === void 0 ? void 0 : _node$props19.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props20, _node$props21, _node$props22, _node$props23;\n\n  var x1 = ((_node$props20 = node.props) === null || _node$props20 === void 0 ? void 0 : _node$props20.x1) || 0;\n  var y1 = ((_node$props21 = node.props) === null || _node$props21 === void 0 ? void 0 : _node$props21.y1) || 0;\n  var x2 = ((_node$props22 = node.props) === null || _node$props22 === void 0 ? void 0 : _node$props22.x2) || 0;\n  var y2 = ((_node$props23 = node.props) === null || _node$props23 === void 0 ? void 0 : _node$props23.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props24, _node$props25, _node$props26, _node$props27;\n\n  var x = ((_node$props24 = node.props) === null || _node$props24 === void 0 ? void 0 : _node$props24.x) || 0;\n  var y = ((_node$props25 = node.props) === null || _node$props25 === void 0 ? void 0 : _node$props25.y) || 0;\n  var width = ((_node$props26 = node.props) === null || _node$props26 === void 0 ? void 0 : _node$props26.width) || 0;\n  var height = ((_node$props27 = node.props) === null || _node$props27 === void 0 ? void 0 : _node$props27.height) || 0;\n  return [x, y, x + width, y + height];\n};\n\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(_toConsumableArray(values)));\n};\n\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(_toConsumableArray(values)));\n};\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props28;\n\n  var points = parsePoints((_node$props28 = node.props) === null || _node$props28 === void 0 ? void 0 : _node$props28.points);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar boundingBoxFns = (_boundingBoxFns = {}, _defineProperty(_boundingBoxFns, P.Rect, getRectBoundingBox), _defineProperty(_boundingBoxFns, P.Line, getLineBoundingBox), _defineProperty(_boundingBoxFns, P.Path, getPathBoundingBox), _defineProperty(_boundingBoxFns, P.Circle, getCircleBoundingBox), _defineProperty(_boundingBoxFns, P.Ellipse, getEllipseBoundingBox), _defineProperty(_boundingBoxFns, P.Polygon, getPolylineBoundingBox), _defineProperty(_boundingBoxFns, P.Polyline, getPolylineBoundingBox), _boundingBoxFns);\n\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  if (!node.props) return;\n  if (!('strokeWidth' in node.props)) return;\n  var lineWidth = node.props.strokeWidth;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\n\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  if (!node.props) return;\n  if (!('stroke' in node.props)) return;\n  var strokeColor = node.props.stroke;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\n\nvar setOpacity = function setOpacity(ctx, node) {\n  if (!node.props) return;\n  if (!('opacity' in node.props)) return;\n  var opacity = node.props.opacity;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\n\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  if (!node.props) return;\n  if (!('fillOpacity' in node.props)) return;\n  var fillOpacity = node.props.fillOpacity || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\n\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props29;\n\n  if (!node.props) return;\n  if (!('strokeOpacity' in node.props)) return;\n  var strokeOpacity = (_node$props29 = node.props) === null || _node$props29 === void 0 ? void 0 : _node$props29.strokeOpacity;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\n\nvar setLineJoin = function setLineJoin(ctx, node) {\n  if (!node.props) return;\n  if (!('strokeLinejoin' in node.props)) return;\n  var lineJoin = node.props.strokeLinejoin;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\n\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props30;\n\n  if (!node.props) return;\n  if (!('strokeLinecap' in node.props)) return;\n  var lineCap = (_node$props30 = node.props) === null || _node$props30 === void 0 ? void 0 : _node$props30.strokeLinecap;\n  if (lineCap) ctx.lineCap(lineCap);\n};\n\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props31;\n\n  if (!node.props) return;\n  if (!('strokeDasharray' in node.props)) return;\n  var value = ((_node$props31 = node.props) === null || _node$props31 === void 0 ? void 0 : _node$props31.strokeDasharray) || null; // @ts-expect-error check this works as expected\n\n  if (value) ctx.dash(value.split(/[\\s,]+/).map(Number));\n};\n\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props$fill;\n\n  if (!node.props) return false;\n  if (!('fill' in node.props)) return false;\n  if (typeof node.props.fill === 'string') return false;\n  return ((_node$props$fill = node.props.fill) === null || _node$props$fill === void 0 ? void 0 : _node$props$fill.type) === P.LinearGradient;\n};\n\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props$fill2;\n\n  if (!node.props) return false;\n  if (!('fill' in node.props)) return false;\n  if (typeof node.props.fill === 'string') return false;\n  return ((_node$props$fill2 = node.props.fill) === null || _node$props$fill2 === void 0 ? void 0 : _node$props$fill2.type) === P.RadialGradient;\n};\n\nfunction multiplyMatrices(m1, m2) {\n  var a = m1[0] * m2[0] + m1[2] * m2[1];\n  var b = m1[1] * m2[0] + m1[3] * m2[1];\n  var c = m1[0] * m2[2] + m1[2] * m2[3];\n  var d = m1[1] * m2[2] + m1[3] * m2[3];\n  var e = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var f = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  return [a, b, c, d, e, f];\n}\n\nvar transformGradient = function transformGradient(grad, transforms, bbox, units) {\n  var matrices = transforms.map(function (transform) {\n    switch (transform.operation) {\n      case 'scale':\n        {\n          var value = transform.value;\n          return [value[0], 0, 0, value[1], 0, 0];\n        }\n\n      case 'translate':\n        {\n          var _value5 = transform.value;\n          var x = _value5[0] || 0;\n          var y = _value5[1] || 0;\n\n          if (units === 'objectBoundingBox') {\n            x = (bbox[2] - bbox[0]) * x;\n            y = (bbox[3] - bbox[1]) * y;\n          }\n\n          return [1, 0, 0, 1, x, y];\n        }\n\n      case 'rotate':\n        {\n          var _value6 = transform.value;\n          var cos = Math.cos(_value6[0]);\n          var sin = Math.sin(_value6[0]);\n          return [cos, sin, -sin, cos, 0, 0];\n        }\n\n      case 'skew':\n        {\n          var _value7 = transform.value;\n          return [1, Math.tan(_value7[0]), Math.tan(_value7[1]), 1, 0, 0];\n        }\n\n      case 'matrix':\n        {\n          var _value8 = transform.value;\n\n          var _x2 = _value8[4] || 0;\n\n          var _y2 = _value8[5] || 0;\n\n          if (units === 'objectBoundingBox') {\n            _x2 = (bbox[2] - bbox[0]) * _x2;\n            _y2 = (bbox[3] - bbox[1]) * _y2;\n          }\n\n          return [_value8[0], _value8[1], _value8[2], _value8[3], _x2, _y2];\n        }\n\n      default:\n        return [1, 0, 0, 1, 0, 0];\n    }\n  });\n  var matrix = matrices.reduce(multiplyMatrices, [1, 0, 0, 1, 0, 0]);\n  grad.setTransform.apply(grad, _toConsumableArray(matrix));\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\n\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props32, _gradient$children;\n\n  if (!node.props) return;\n  if (!('fill' in node.props)) return;\n  var bbox = getBoundingBox(node);\n  var gradient = (_node$props32 = node.props) === null || _node$props32 === void 0 ? void 0 : _node$props32.fill;\n  if (!gradient) return;\n  var units = gradient.props.gradientUnits || 'objectBoundingBox';\n  var transforms = gradient.props.gradientTransform || [];\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n\n  if (units === 'objectBoundingBox') {\n    var m0 = bbox[2] - bbox[0];\n    var m3 = bbox[3] - bbox[1];\n    var m4 = bbox[0];\n    var m5 = bbox[1];\n    x1 = m0 * x1 + m4;\n    y1 = m3 * y1 + m5;\n    x2 = m0 * x2 + m4;\n    y2 = m3 * y2 + m5;\n  }\n\n  var grad = ctx.linearGradient(x1, y1, x2, y2);\n  transformGradient(grad, transforms, bbox, units);\n  (_gradient$children = gradient.children) === null || _gradient$children === void 0 ? void 0 : _gradient$children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props33, _gradient$children2;\n\n  if (!node.props) return;\n  if (!('fill' in node.props)) return;\n  var bbox = getBoundingBox(node);\n  var gradient = (_node$props33 = node.props) === null || _node$props33 === void 0 ? void 0 : _node$props33.fill;\n  if (!gradient) return;\n  var units = gradient.props.gradientUnits || 'objectBoundingBox';\n  var transforms = gradient.props.gradientTransform || [];\n  var r = gradient.props.r || 0.5;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n\n  if (units === 'objectBoundingBox') {\n    var m0 = bbox[2] - bbox[0];\n    var m3 = bbox[3] - bbox[1];\n    var m4 = bbox[0];\n    var m5 = bbox[1];\n    r = r * m0;\n    cx = m0 * cx + m4;\n    cy = m3 * cy + m5;\n    fx = m0 * fx + m4;\n    fy = m3 * fy + m5;\n  }\n\n  var grad = ctx.radialGradient(cx, cy, 0, fx, fy, r);\n  transformGradient(grad, transforms, bbox, units);\n  (_gradient$children2 = gradient.children) === null || _gradient$children2 === void 0 ? void 0 : _gradient$children2.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props34;\n\n  if (!node.props) return;\n  if (!('fill' in node.props)) return;\n  var fillColor = (_node$props34 = node.props) === null || _node$props34 === void 0 ? void 0 : _node$props34.fill;\n  if (fillColor) ctx.fillColor(fillColor);\n};\n\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\n\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n\n  if ('fill' in props && 'stroke' in props && props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if ('fill' in props && props.fill) {\n    ctx.fill(props.fillRule);\n  } else if ('stroke' in props && props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\n\nvar noop = function noop() {};\n\nvar renderFns$1 = (_renderFns$ = {}, _defineProperty(_renderFns$, P.Tspan, noop), _defineProperty(_renderFns$, P.TextInstance, noop), _defineProperty(_renderFns$, P.Path, renderPath), _defineProperty(_renderFns$, P.Rect, renderRect), _defineProperty(_renderFns$, P.Line, renderLine$1), _defineProperty(_renderFns$, P.G, renderGroup), _defineProperty(_renderFns$, P.Text, renderSvgText), _defineProperty(_renderFns$, P.Circle, renderCircle), _defineProperty(_renderFns$, P.Image, renderImage$1), _defineProperty(_renderFns$, P.Ellipse, renderEllipse), _defineProperty(_renderFns$, P.Polygon, renderPolygon), _defineProperty(_renderFns$, P.Polyline, renderPolyline), _renderFns$);\n\nvar renderNode$1 = function renderNode$1(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n\n  if (renderFn) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \".concat(node.type, \" is not currently supported\"));\n  }\n};\n\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\n\nvar clipPath = function clipPath(ctx, node) {\n  if (!node.props) return;\n  if (!('clipPath' in node.props)) return;\n  var value = node.props.clipPath;\n\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\n\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\n\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  if (!node.box) return;\n  var _node$box2 = node.box,\n      width = _node$box2.width,\n      height = _node$box2.height;\n  var _node$props35 = node.props,\n      viewBox = _node$props35.viewBox,\n      preserveAspectRatio = _node$props35.preserveAspectRatio;\n\n  var _ref3 = preserveAspectRatio || {},\n      _ref3$meetOrSlice = _ref3.meetOrSlice,\n      meetOrSlice = _ref3$meetOrSlice === void 0 ? 'meet' : _ref3$meetOrSlice,\n      _ref3$align = _ref3.align,\n      align = _ref3$align === void 0 ? 'xMidYMid' : _ref3$align;\n\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\n\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  if (!node.box) return;\n  var _node$box3 = node.box,\n      top = _node$box3.top,\n      left = _node$box3.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\n\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\n\nvar black = {\n  value: '#000',\n  opacity: 1\n}; // TODO: parse to number[] in layout to avoid this step\n\nvar parseColor = function parseColor(hex) {\n  if (!hex) return black;\n  var parsed = colorString.get(hex);\n  if (!parsed) return black;\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\nvar DEST_REGEXP = /^#.+/;\n\nvar isSrcId$1 = function isSrcId$1(src) {\n  return src.match(DEST_REGEXP);\n};\n\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n      xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n      _attachment$yOffset = attachment.yOffset,\n      yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n      width = attachment.width,\n      height = attachment.height,\n      image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\n\nvar renderAttachments = function renderAttachments(ctx, run) {\n  var _run$attributes$font2;\n\n  if (!run.glyphs) return;\n  if (!run.positions) return;\n  var font = (_run$attributes$font2 = run.attributes.font) === null || _run$attributes$font2 === void 0 ? void 0 : _run$attributes$font2[0];\n  if (!font) return;\n  ctx.save();\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n\n  ctx.restore();\n};\n\nvar renderRun = function renderRun(ctx, run) {\n  var _run$attributes$font3;\n\n  if (!run.glyphs) return;\n  if (!run.positions) return;\n  var font = (_run$attributes$font3 = run.attributes.font) === null || _run$attributes$font3 === void 0 ? void 0 : _run$attributes$font3[0];\n  if (!font) return;\n  var _run$attributes2 = run.attributes,\n      fontSize = _run$attributes2.fontSize,\n      link = _run$attributes2.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var _run$height = run.height,\n      height = _run$height === void 0 ? 0 : _run$height,\n      _run$descent = run.descent,\n      descent = _run$descent === void 0 ? 0 : _run$descent,\n      _run$xAdvance = run.xAdvance,\n      xAdvance = _run$xAdvance === void 0 ? 0 : _run$xAdvance;\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n\n  renderAttachments(ctx, run);\n  ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n\n  try {\n    renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n  } catch (error) {\n    console.log(error);\n  }\n\n  ctx.translate(xAdvance, 0);\n};\n\nvar renderBackground$1 = function renderBackground$1(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\n\nvar renderDecorationLine = function renderDecorationLine(ctx, decorationLine) {\n  ctx.save();\n  ctx.lineWidth(decorationLine.rect.height);\n  ctx.strokeOpacity(decorationLine.opacity);\n\n  if (/dashed/.test(decorationLine.style)) {\n    ctx.dash(3 * decorationLine.rect.height, {});\n  } else if (/dotted/.test(decorationLine.style)) {\n    ctx.dash(decorationLine.rect.height, {});\n  }\n\n  if (/wavy/.test(decorationLine.style)) {\n    var dist = Math.max(2, decorationLine.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(decorationLine.rect.width / (2 * step)); // Adjust step to fill entire width\n\n    var remainingWidth = decorationLine.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = decorationLine.rect.y + dist;\n    var cp2y = decorationLine.rect.y - dist;\n    var x = decorationLine.rect.x;\n    ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, decorationLine.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n    ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y);\n\n    if (/double/.test(decorationLine.style)) {\n      ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y + decorationLine.rect.height * 2);\n      ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y + decorationLine.rect.height * 2);\n    }\n  }\n\n  ctx.stroke(decorationLine.color);\n  ctx.restore();\n};\n\nvar renderLine = function renderLine(ctx, line) {\n  if (!line.box) return;\n  var lineAscent = line.ascent || 0;\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n\n    if (run.attributes.backgroundColor) {\n      var _run$xAdvance2, _line$overflowRight;\n\n      var xAdvance = (_run$xAdvance2 = run.xAdvance) !== null && _run$xAdvance2 !== void 0 ? _run$xAdvance2 : 0;\n      var overflowRight = isLastRun ? (_line$overflowRight = line.overflowRight) !== null && _line$overflowRight !== void 0 ? _line$overflowRight : 0 : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n\n    renderRun(ctx, run);\n  }\n\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n\n  if (line.decorationLines) {\n    for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n      var decorationLine = line.decorationLines[_i];\n      renderDecorationLine(ctx, decorationLine);\n    }\n  }\n\n  ctx.restore();\n};\n\nvar renderBlock = function renderBlock(ctx, block) {\n  block.forEach(function (line) {\n    renderLine(ctx, line);\n  });\n};\n\nvar renderText = function renderText(ctx, node) {\n  var _node$box5, _node$box6;\n\n  if (!node.box) return;\n  if (!node.lines) return;\n  var _node$box4 = node.box,\n      top = _node$box4.top,\n      left = _node$box4.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box5 = node.box) === null || _node$box5 === void 0 ? void 0 : _node$box5.paddingTop) || 0;\n  var paddingLeft = ((_node$box6 = node.box) === null || _node$box6 === void 0 ? void 0 : _node$box6.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block);\n  });\n  ctx.restore();\n};\n\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props36;\n\n  if (!node.box) return;\n  var _node$box7 = node.box,\n      width = _node$box7.width,\n      height = _node$box7.height;\n  var dpi = ((_node$props36 = node.props) === null || _node$props36 === void 0 ? void 0 : _node$props36.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\n\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style3;\n\n  if (!node.box) return;\n  var _node$box8 = node.box,\n      top = _node$box8.top,\n      left = _node$box8.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.backgroundColor;\n  ctx.note(left, top, 0, 0, value, {\n    color: color\n  });\n};\n\nvar embedImage = function embedImage(ctx, node) {\n  var src = node.image.data;\n  var image;\n\n  if (typeof src === 'string') {\n    image = ctx._imageRegistry[src];\n  }\n\n  if (!image) {\n    image = ctx.openImage(src);\n  }\n\n  if (!image.obj) {\n    image.embed(ctx);\n  }\n\n  return image;\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\n\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px !== null && px !== void 0 ? px : null);\n  var pyp = matchPercent(py !== null && py !== void 0 ? py : null);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _height = ch;\n\n    var _width = _height * ir;\n\n    var _yOffset = isNumeric(py) ? py : 0;\n\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\n\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px !== null && px !== void 0 ? px : null);\n  var pyp = matchPercent(py !== null && py !== void 0 ? py : null);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px !== null && px !== void 0 ? px : null);\n  var pyp = matchPercent(py !== null && py !== void 0 ? py : null);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _width2 = cw;\n\n    var _height2 = _width2 / ir;\n\n    var _xOffset2 = isNumeric(px) ? px : 0;\n\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\n\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px !== null && px !== void 0 ? px : null) ? 0 : px || 0,\n    yOffset: matchPercent(py !== null && py !== void 0 ? py : null) ? 0 : py || 0\n  };\n};\n\nvar resolveObjectFit = function resolveObjectFit() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'fill';\n  var cw = arguments.length > 1 ? arguments[1] : undefined;\n  var ch = arguments.length > 2 ? arguments[2] : undefined;\n  var iw = arguments.length > 3 ? arguments[3] : undefined;\n  var ih = arguments.length > 4 ? arguments[4] : undefined;\n  var px = arguments.length > 5 ? arguments[5] : undefined;\n  var py = arguments.length > 6 ? arguments[6] : undefined;\n\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style4, _node$style5, _node$style6, _node$style7;\n\n  if (!node.box) return;\n  if (!node.image) return;\n  var _node$box9 = node.box,\n      left = _node$box9.left,\n      top = _node$box9.top;\n  var opacity = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.opacity;\n  var objectFit = (_node$style5 = node.style) === null || _node$style5 === void 0 ? void 0 : _node$style5.objectFit;\n  var objectPositionX = (_node$style6 = node.style) === null || _node$style6 === void 0 ? void 0 : _node$style6.objectPositionX;\n  var objectPositionY = (_node$style7 = node.style) === null || _node$style7 === void 0 ? void 0 : _node$style7.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n      width = _resolveObjectFit.width,\n      height = _resolveObjectFit.height,\n      xOffset = _resolveObjectFit.xOffset,\n      yOffset = _resolveObjectFit.yOffset;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || embedImage(ctx, node);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\".concat(JSON.stringify(node.props.src || node.props.source), \"' skipped due to invalid dimensions\"));\n    }\n  }\n};\n\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1'; // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  if (!node.box) return;\n  var _node$box10 = node.box,\n      left = _node$box10.left,\n      top = _node$box10.top,\n      width = _node$box10.width,\n      height = _node$box10.height,\n      _node$box10$paddingLe = _node$box10.paddingLeft,\n      paddingLeft = _node$box10$paddingLe === void 0 ? 0 : _node$box10$paddingLe,\n      _node$box10$paddingTo = _node$box10.paddingTop,\n      paddingTop = _node$box10$paddingTo === void 0 ? 0 : _node$box10$paddingTo,\n      _node$box10$paddingRi = _node$box10.paddingRight,\n      paddingRight = _node$box10$paddingRi === void 0 ? 0 : _node$box10$paddingRi,\n      _node$box10$paddingBo = _node$box10.paddingBottom,\n      paddingBottom = _node$box10$paddingBo === void 0 ? 0 : _node$box10$paddingBo,\n      _node$box10$borderLef = _node$box10.borderLeftWidth,\n      borderLeftWidth = _node$box10$borderLef === void 0 ? 0 : _node$box10$borderLef,\n      _node$box10$borderTop = _node$box10.borderTopWidth,\n      borderTopWidth = _node$box10$borderTop === void 0 ? 0 : _node$box10$borderTop,\n      _node$box10$borderRig = _node$box10.borderRightWidth,\n      borderRightWidth = _node$box10$borderRig === void 0 ? 0 : _node$box10$borderRig,\n      _node$box10$borderBot = _node$box10.borderBottomWidth,\n      borderBottomWidth = _node$box10$borderBot === void 0 ? 0 : _node$box10$borderBot;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\n\nvar debugPadding = function debugPadding(ctx, node) {\n  if (!node.box) return;\n  var _node$box11 = node.box,\n      left = _node$box11.left,\n      top = _node$box11.top,\n      width = _node$box11.width,\n      height = _node$box11.height,\n      _node$box11$paddingLe = _node$box11.paddingLeft,\n      paddingLeft = _node$box11$paddingLe === void 0 ? 0 : _node$box11$paddingLe,\n      _node$box11$paddingTo = _node$box11.paddingTop,\n      paddingTop = _node$box11$paddingTo === void 0 ? 0 : _node$box11$paddingTo,\n      _node$box11$paddingRi = _node$box11.paddingRight,\n      paddingRight = _node$box11$paddingRi === void 0 ? 0 : _node$box11$paddingRi,\n      _node$box11$paddingBo = _node$box11.paddingBottom,\n      paddingBottom = _node$box11$paddingBo === void 0 ? 0 : _node$box11$paddingBo,\n      _node$box11$borderLef = _node$box11.borderLeftWidth,\n      borderLeftWidth = _node$box11$borderLef === void 0 ? 0 : _node$box11$borderLef,\n      _node$box11$borderTop = _node$box11.borderTopWidth,\n      borderTopWidth = _node$box11$borderTop === void 0 ? 0 : _node$box11$borderTop,\n      _node$box11$borderRig = _node$box11.borderRightWidth,\n      borderRightWidth = _node$box11$borderRig === void 0 ? 0 : _node$box11$borderRig,\n      _node$box11$borderBot = _node$box11.borderBottomWidth,\n      borderBottomWidth = _node$box11$borderBot === void 0 ? 0 : _node$box11$borderBot;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\n\nvar debugMargin = function debugMargin(ctx, node) {\n  if (!node.box) return;\n  var _node$box12 = node.box,\n      left = _node$box12.left,\n      top = _node$box12.top,\n      width = _node$box12.width,\n      height = _node$box12.height;\n  var _node$box13 = node.box,\n      _node$box13$marginLef = _node$box13.marginLeft,\n      marginLeft = _node$box13$marginLef === void 0 ? 0 : _node$box13$marginLef,\n      _node$box13$marginTop = _node$box13.marginTop,\n      marginTop = _node$box13$marginTop === void 0 ? 0 : _node$box13$marginTop,\n      _node$box13$marginRig = _node$box13.marginRight,\n      marginRight = _node$box13$marginRig === void 0 ? 0 : _node$box13$marginRig,\n      _node$box13$marginBot = _node$box13.marginBottom,\n      marginBottom = _node$box13$marginBot === void 0 ? 0 : _node$box13$marginBot;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n  ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nvar debugText = function debugText(ctx, node) {\n  if (!node.box) return;\n  var _node$box14 = node.box,\n      left = _node$box14.left,\n      top = _node$box14.top,\n      width = _node$box14.width,\n      height = _node$box14.height;\n  var _node$box15 = node.box,\n      _node$box15$marginLef = _node$box15.marginLeft,\n      marginLeft = _node$box15$marginLef === void 0 ? 0 : _node$box15$marginLef,\n      _node$box15$marginTop = _node$box15.marginTop,\n      marginTop = _node$box15$marginTop === void 0 ? 0 : _node$box15$marginTop,\n      _node$box15$marginRig = _node$box15.marginRight,\n      marginRight = _node$box15$marginRig === void 0 ? 0 : _node$box15$marginRig,\n      _node$box15$marginBot = _node$box15.marginBottom,\n      marginBottom = _node$box15$marginBot === void 0 ? 0 : _node$box15$marginBot;\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(\"\".concat(roundedWidth, \" x \").concat(roundedHeight), left - marginLeft, Math.max(top - marginTop - 4, 1), {\n    width: Infinity\n  });\n};\n\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\n\nvar renderDebug = function renderDebug(ctx, node) {\n  if (!node.props) return;\n  if (!('debug' in node.props) || !node.props.debug) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\n\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, prop, function () {\n      // @ts-expect-error ctx[prop] is a function\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }));\n  }, {});\n  return p;\n};\n\nvar renderCanvas = function renderCanvas(ctx, node) {\n  if (!node.box) return;\n  var _node$box16 = node.box,\n      top = _node$box16.top,\n      left = _node$box16.left,\n      width = _node$box16.width,\n      height = _node$box16.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n}; // Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\n\n\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width;\n  var borderTopColor = style.borderTopColor,\n      borderTopWidth = style.borderTopWidth,\n      borderTopStyle = style.borderTopStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderRightColor = style.borderRightColor,\n      borderRightStyle = style.borderRightStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n      borderBottomStyle = style.borderBottomStyle,\n      borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderLeftWidth = style.borderLeftWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n      borderLeftStyle = style.borderLeftStyle,\n      borderLeftWidth = style.borderLeftWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\n\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!node.box) return;\n  if (!shouldRenderBorders(node)) return;\n  var _node$box17 = node.box,\n      width = _node$box17.width,\n      height = _node$box17.height,\n      _node$box17$borderTop = _node$box17.borderTopWidth,\n      borderTopWidth = _node$box17$borderTop === void 0 ? 0 : _node$box17$borderTop,\n      _node$box17$borderLef = _node$box17.borderLeftWidth,\n      borderLeftWidth = _node$box17$borderLef === void 0 ? 0 : _node$box17$borderLef,\n      _node$box17$borderRig = _node$box17.borderRightWidth,\n      borderRightWidth = _node$box17$borderRig === void 0 ? 0 : _node$box17$borderRig,\n      _node$box17$borderBot = _node$box17.borderBottomWidth,\n      borderBottomWidth = _node$box17$borderBot === void 0 ? 0 : _node$box17$borderBot;\n  var _node$style8 = node.style,\n      _node$style8$opacity = _node$style8.opacity,\n      opacity = _node$style8$opacity === void 0 ? 1 : _node$style8$opacity,\n      _node$style8$borderTo = _node$style8.borderTopColor,\n      borderTopColor = _node$style8$borderTo === void 0 ? 'black' : _node$style8$borderTo,\n      _node$style8$borderTo2 = _node$style8.borderTopStyle,\n      borderTopStyle = _node$style8$borderTo2 === void 0 ? 'solid' : _node$style8$borderTo2,\n      _node$style8$borderLe = _node$style8.borderLeftColor,\n      borderLeftColor = _node$style8$borderLe === void 0 ? 'black' : _node$style8$borderLe,\n      _node$style8$borderLe2 = _node$style8.borderLeftStyle,\n      borderLeftStyle = _node$style8$borderLe2 === void 0 ? 'solid' : _node$style8$borderLe2,\n      _node$style8$borderRi = _node$style8.borderRightColor,\n      borderRightColor = _node$style8$borderRi === void 0 ? 'black' : _node$style8$borderRi,\n      _node$style8$borderRi2 = _node$style8.borderRightStyle,\n      borderRightStyle = _node$style8$borderRi2 === void 0 ? 'solid' : _node$style8$borderRi2,\n      _node$style8$borderBo = _node$style8.borderBottomColor,\n      borderBottomColor = _node$style8$borderBo === void 0 ? 'black' : _node$style8$borderBo,\n      _node$style8$borderBo2 = _node$style8.borderBottomStyle,\n      borderBottomStyle = _node$style8$borderBo2 === void 0 ? 'solid' : _node$style8$borderBo2; // @ts-expect-error this is always a number due to resolve border radius step\n\n  var borderTopLeftRadius = node.style.borderTopLeftRadius || 0; // @ts-expect-error this is always a number due to resolve border radius step\n\n  var borderTopRightRadius = node.style.borderTopRightRadius || 0; // @ts-expect-error this is always a number due to resolve border radius step\n\n  var borderBottomLeftRadius = node.style.borderBottomLeftRadius || 0; // @ts-expect-error this is always a number due to resolve border radius step\n\n  var borderBottomRightRadius = node.style.borderBottomRightRadius || 0;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style9;\n\n  if (!node.box) return;\n  var _node$box18 = node.box,\n      top = _node$box18.top,\n      left = _node$box18.left,\n      width = _node$box18.width,\n      height = _node$box18.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style9 = node.style) === null || _node$style9 === void 0 ? void 0 : _node$style9.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style10;\n\n  var hasBackground = !!node.box && !!((_node$style10 = node.style) !== null && _node$style10 !== void 0 && _node$style10.backgroundColor);\n\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\n\nvar renderLink = function renderLink(ctx, node, src) {\n  if (!src || !node.box) return;\n  var isId = isSrcId(src);\n  var method = isId ? 'goTo' : 'link';\n  var value = isId ? src.slice(1) : src;\n  var _node$box19 = node.box,\n      top = _node$box19.top,\n      left = _node$box19.left,\n      width = _node$box19.width,\n      height = _node$box19.height;\n  ctx[method](left, top, width, height, value);\n};\n\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  if ('src' in props && isString(props.src)) return renderLink(ctx, node, props.src);\n  if ('href' in props && isString(props.href)) return renderLink(ctx, node, props.href);\n};\n\nvar setDestination = function setDestination(ctx, node) {\n  if (!node.box) return;\n  if (!node.props) return;\n\n  if ('id' in node.props) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\n\nvar clean = function clean(options) {\n  var opt = _objectSpread({}, options); // We need to ensure the elements are no present if not true\n\n\n  Object.entries(opt).forEach(function (pair) {\n    if (!pair[1]) {\n      delete opt[pair[0]];\n    }\n  });\n  return opt;\n};\n\nvar parseCommonFormOptions = function parseCommonFormOptions(node) {\n  var _node$props37, _node$props38, _node$props39, _node$props40, _node$props41;\n\n  // Common Options\n  return {\n    required: ((_node$props37 = node.props) === null || _node$props37 === void 0 ? void 0 : _node$props37.required) || false,\n    noExport: ((_node$props38 = node.props) === null || _node$props38 === void 0 ? void 0 : _node$props38.noExport) || false,\n    readOnly: ((_node$props39 = node.props) === null || _node$props39 === void 0 ? void 0 : _node$props39.readOnly) || false,\n    value: ((_node$props40 = node.props) === null || _node$props40 === void 0 ? void 0 : _node$props40.value) || undefined,\n    defaultValue: ((_node$props41 = node.props) === null || _node$props41 === void 0 ? void 0 : _node$props41.defaultValue) || undefined\n  };\n};\n\nvar parseTextInputOptions = function parseTextInputOptions(node, fieldSet) {\n  var _node$props42, _node$props43, _node$props44, _node$props45, _node$props46, _node$props47, _node$props48;\n\n  return clean(_objectSpread(_objectSpread({}, parseCommonFormOptions(node)), {}, {\n    parent: fieldSet || undefined,\n    align: ((_node$props42 = node.props) === null || _node$props42 === void 0 ? void 0 : _node$props42.align) || 'left',\n    multiline: ((_node$props43 = node.props) === null || _node$props43 === void 0 ? void 0 : _node$props43.multiline) || undefined,\n    password: ((_node$props44 = node.props) === null || _node$props44 === void 0 ? void 0 : _node$props44.password) || false,\n    noSpell: ((_node$props45 = node.props) === null || _node$props45 === void 0 ? void 0 : _node$props45.noSpell) || false,\n    format: ((_node$props46 = node.props) === null || _node$props46 === void 0 ? void 0 : _node$props46.format) || undefined,\n    fontSize: ((_node$props47 = node.props) === null || _node$props47 === void 0 ? void 0 : _node$props47.fontSize) || undefined,\n    MaxLen: ((_node$props48 = node.props) === null || _node$props48 === void 0 ? void 0 : _node$props48.maxLength) || undefined\n  }));\n};\n\nvar parseSelectAndListFieldOptions = function parseSelectAndListFieldOptions(node) {\n  var _node$props49, _node$props50, _node$props51, _node$props52, _node$props53;\n\n  return clean(_objectSpread(_objectSpread({}, parseCommonFormOptions(node)), {}, {\n    sort: ((_node$props49 = node.props) === null || _node$props49 === void 0 ? void 0 : _node$props49.sort) || false,\n    edit: ((_node$props50 = node.props) === null || _node$props50 === void 0 ? void 0 : _node$props50.edit) || false,\n    multiSelect: ((_node$props51 = node.props) === null || _node$props51 === void 0 ? void 0 : _node$props51.multiSelect) || false,\n    noSpell: ((_node$props52 = node.props) === null || _node$props52 === void 0 ? void 0 : _node$props52.noSpell) || false,\n    select: ((_node$props53 = node.props) === null || _node$props53 === void 0 ? void 0 : _node$props53.select) || ['']\n  }));\n};\n\nvar getAppearance = function getAppearance(ctx, codepoint, width, height) {\n  var appearance = ctx.ref({\n    Type: 'XObject',\n    Subtype: 'Form',\n    BBox: [0, 0, width, height],\n    Resources: {\n      ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n      Font: {\n        ZaDi: ctx._acroform.fonts.ZaDi\n      }\n    }\n  });\n  appearance.initDeflate();\n  appearance.write(\"/Tx BMC\\nq\\n/ZaDi \".concat(height * 0.8, \" Tf\\nBT\\n\").concat(width * 0.45, \" \").concat(height / 4, \" Td (\").concat(codepoint, \") Tj\\nET\\nQ\\nEMC\"));\n  appearance.end(null);\n  return appearance;\n};\n\nvar parseCheckboxOptions = function parseCheckboxOptions(ctx, node, fieldSet) {\n  var _node$props54, _node$props55, _node$props56, _normalAppearance, _node$props57, _node$props58, _node$props59, _node$props60, _node$props61;\n\n  var _ref4 = node.box || {},\n      width = _ref4.width,\n      height = _ref4.height;\n\n  var onOption = ((_node$props54 = node.props) === null || _node$props54 === void 0 ? void 0 : _node$props54.onState) || 'Yes';\n  var offOption = ((_node$props55 = node.props) === null || _node$props55 === void 0 ? void 0 : _node$props55.offState) || 'Off';\n  var xMark = ((_node$props56 = node.props) === null || _node$props56 === void 0 ? void 0 : _node$props56.xMark) || false;\n\n  if (!Object.prototype.hasOwnProperty.call(ctx._acroform.fonts, 'ZaDi')) {\n    var ref = ctx.ref({\n      Type: 'Font',\n      Subtype: 'Type1',\n      BaseFont: 'ZapfDingbats'\n    });\n    ctx._acroform.fonts.ZaDi = ref;\n    ref.end(null);\n  }\n\n  var normalAppearance = (_normalAppearance = {}, _defineProperty(_normalAppearance, onOption, getAppearance(ctx, xMark ? '8' : '4', width, height)), _defineProperty(_normalAppearance, offOption, getAppearance(ctx, xMark ? ' ' : '8', width, height)), _normalAppearance);\n  return clean(_objectSpread(_objectSpread({}, parseCommonFormOptions(node)), {}, {\n    backgroundColor: ((_node$props57 = node.props) === null || _node$props57 === void 0 ? void 0 : _node$props57.backgroundColor) || undefined,\n    borderColor: ((_node$props58 = node.props) === null || _node$props58 === void 0 ? void 0 : _node$props58.borderColor) || undefined,\n    parent: fieldSet || undefined,\n    value: \"/\".concat(((_node$props59 = node.props) === null || _node$props59 === void 0 ? void 0 : _node$props59.checked) === true ? onOption : offOption),\n    defaultValue: \"/\".concat(((_node$props60 = node.props) === null || _node$props60 === void 0 ? void 0 : _node$props60.checked) === true ? onOption : offOption),\n    AS: ((_node$props61 = node.props) === null || _node$props61 === void 0 ? void 0 : _node$props61.checked) === true ? onOption : offOption,\n    AP: {\n      N: normalAppearance,\n      D: normalAppearance\n    }\n  }));\n};\n\nvar renderTextInput = function renderTextInput(ctx, node, options) {\n  var _node$props62, _options$fieldSets;\n\n  if (!node.box) return;\n  var _node$box20 = node.box,\n      top = _node$box20.top,\n      left = _node$box20.left,\n      width = _node$box20.width,\n      height = _node$box20.height; // Element's name\n\n  var name = ((_node$props62 = node.props) === null || _node$props62 === void 0 ? void 0 : _node$props62.name) || '';\n  var fieldSetOptions = (_options$fieldSets = options.fieldSets) === null || _options$fieldSets === void 0 ? void 0 : _options$fieldSets.at(0);\n\n  if (!ctx._root.data.AcroForm) {\n    ctx.initForm();\n  }\n\n  ctx.formText(name, left, top, width, height, parseTextInputOptions(node, fieldSetOptions));\n};\n\nvar renderSelect = function renderSelect(ctx, node) {\n  var _node$props63;\n\n  if (!node.box) return;\n  var _node$box21 = node.box,\n      top = _node$box21.top,\n      left = _node$box21.left,\n      width = _node$box21.width,\n      height = _node$box21.height; // Element's name\n\n  var name = ((_node$props63 = node.props) === null || _node$props63 === void 0 ? void 0 : _node$props63.name) || '';\n\n  if (!ctx._root.data.AcroForm) {\n    ctx.initForm();\n  }\n\n  ctx.formCombo(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nvar renderFieldSet = function renderFieldSet(ctx, node, options) {\n  var _node$props64;\n\n  var name = ((_node$props64 = node.props) === null || _node$props64 === void 0 ? void 0 : _node$props64.name) || '';\n\n  if (!ctx._root.data.AcroForm) {\n    ctx.initForm();\n  }\n\n  var formField = ctx.formField(name);\n  var option = options;\n\n  if (!option.fieldSets) {\n    option.fieldSets = [formField];\n  } else {\n    option.fieldSets.push(formField);\n  }\n};\n\nvar cleanUpFieldSet = function cleanUpFieldSet(_ctx, _node, options) {\n  options.fieldSets.pop();\n};\n\nvar renderList = function renderList(ctx, node) {\n  if (!node.box) return;\n\n  var _ref5 = node.box || {},\n      top = _ref5.top,\n      left = _ref5.left,\n      width = _ref5.width,\n      height = _ref5.height; // Element's name\n\n\n  var name = 'name' in node.props ? node.props.name || '' : '';\n\n  if (!ctx._root.data.AcroForm) {\n    ctx.initForm();\n  }\n\n  ctx.formList(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nvar renderCheckbox = function renderCheckbox(ctx, node, options) {\n  var _node$props65, _options$fieldSets2;\n\n  if (!node.box) return;\n  var _node$box22 = node.box,\n      top = _node$box22.top,\n      left = _node$box22.left,\n      width = _node$box22.width,\n      height = _node$box22.height; // Element's name\n\n  var name = ((_node$props65 = node.props) === null || _node$props65 === void 0 ? void 0 : _node$props65.name) || '';\n  var fieldSetOptions = (_options$fieldSets2 = options.fieldSets) === null || _options$fieldSets2 === void 0 ? void 0 : _options$fieldSets2.at(0);\n\n  if (!ctx._root.data.AcroForm) {\n    ctx.initForm();\n  }\n\n  ctx.formCheckbox(name, left, top, width, height, parseCheckboxOptions(ctx, node, fieldSetOptions));\n};\n\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\n\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n\n  var children = node.children || [];\n\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n\n  children.forEach(renderChild);\n  ctx.restore();\n};\n\nvar renderFns = (_renderFns = {}, _defineProperty(_renderFns, P.Text, renderText), _defineProperty(_renderFns, P.Note, renderNote), _defineProperty(_renderFns, P.Image, renderImage), _defineProperty(_renderFns, P.FieldSet, renderFieldSet), _defineProperty(_renderFns, P.TextInput, renderTextInput), _defineProperty(_renderFns, P.Select, renderSelect), _defineProperty(_renderFns, P.Checkbox, renderCheckbox), _defineProperty(_renderFns, P.List, renderList), _defineProperty(_renderFns, P.Canvas, renderCanvas), _defineProperty(_renderFns, P.Svg, renderSvg), _defineProperty(_renderFns, P.Link, setLink), _renderFns);\n\nvar cleanUpFns = _defineProperty({}, P.FieldSet, cleanUpFieldSet);\n\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style11;\n\n  var overflowHidden = ((_node$style11 = node.style) === null || _node$style11 === void 0 ? void 0 : _node$style11.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  var cleanUpFn = cleanUpFns[node.type];\n  if (cleanUpFn) cleanUpFn(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  if (!node.box) return;\n  if (!node.props) return;\n\n  if ('bookmark' in node.props && node.props.bookmark) {\n    var bookmark = node.props.bookmark;\n    var title = bookmark.title,\n        parent = bookmark.parent,\n        expanded = bookmark.expanded,\n        zoom = bookmark.zoom,\n        fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\n\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\n\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map(),\n    fieldSets: []\n  };\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\n\nexport { render as default };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@react-pdf/render/lib/index.js"],"names":["P","isNil","matchPercent","absPath","parsePath","normalizePath","colorString","renderPath","ctx","node","d","props","path","KAPPA$3","Math","sqrt","renderRect","x","y","rx","ry","width","height","krx","kry","moveTo","lineTo","bezierCurveTo","closePath","renderLine$1","x1","x2","y1","y2","renderGroup","KAPPA$2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","number","n","round","Error","_renderGlyphs","encoded","positions","commands","scale","_fontSize","i","last","hadOffset","save","transform","page","fonts","_font","id","ref","addContent","addSegment","cur","hex","slice","join","advance","xAdvance","advanceWidth","push","flush","s","length","pos","xOffset","yOffset","restore","renderGlyphs","glyphs","unitsPerEm","font","advanceWidthScale","encodedGlyphs","encodeGlyphs","encodedPositions","map","yAdvance","renderRun$1","run","runAdvanceWidth","attributes","fontSize","color","opacity","fillColor","fillOpacity","type","fullName","error","console","log","translate","renderSpan","line","textAnchor","dominantBaseline","box","runs","ascent","xHeight","descent","capHeight","xTranslate","yTranslate","forEach","renderSvgText","children","span","lines","pairs","values","result","parsePoints","points","trim","replace","split","mappedValues","parseFloat","drawPolyline","p","renderPolyline","renderPolygon","renderImage$1","image","data","style","paddingTop","paddingLeft","warn","href","KAPPA$1","clipNode","top","left","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","rtr","min","ctr","rbr","cbr","rbl","cbl","rtl","ctl","clip","applySingleTransformation","origin","operation","value","scaleX","scaleY","angle","rotate","xAngle","yAngle","radx","PI","rady","tanx","tan","tany","Array","from","applyTransformations","propsTransform","undefined","operations","getPathBoundingBox","bounds","Infinity","l","j","getCircleBoundingBox","getEllipseBoundingBox","getLineBoundingBox","max","getRectBoundingBox","getPolylineBoundingBox","xValues","yValues","boundingBoxFns","Rect","Line","Path","Circle","Ellipse","Polygon","Polyline","getBoundingBox","boundingBoxFn","setStrokeWidth","lineWidth","strokeWidth","setStrokeColor","strokeColor","stroke","setOpacity","setFillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","strokeLinejoin","setLineCap","lineCap","strokeLinecap","setLineDash","strokeDasharray","dash","Number","hasLinearGradientFill","fill","LinearGradient","hasRadialGradientFill","RadialGradient","multiplyMatrices","m1","m2","a","b","c","e","f","transformGradient","grad","transforms","bbox","units","matrices","cos","sin","matrix","reduce","setTransform","setLinearGradientFill","gradient","gradientUnits","gradientTransform","m0","m3","m4","m5","linearGradient","stop","offset","stopColor","stopOpacity","setRadialGradientFill","fx","fy","radialGradient","setFillColor","setFill","draw","fillAndStroke","fillRule","noop","renderFns$1","Tspan","TextInstance","G","Text","Image","renderNode$1","renderFn","drawNode","clipPath","child","drawChildren","resolveAspectRatio","viewBox","preserveAspectRatio","meetOrSlice","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","moveToOrigin","renderSvg","black","parseColor","parsed","get","to","DEST_REGEXP","isSrcId$1","src","match","renderAttachment","attachment","fit","valign","renderAttachments","space","glyphForCodePoint","objectReplacement","attachmentAdvance","position","glyph","renderRun","link","goTo","renderBackground$1","rect","backgroundColor","renderDecorationLine","decorationLine","test","dist","step","stepCount","floor","remainingWidth","adjustment","cp1y","cp2y","renderLine","lineAscent","isLastRun","overflowRight","backgroundRect","decorationLines","renderBlock","block","renderText","blocks","initialY","offsetX","alignOffset","renderPage","dpi","userUnit","addPage","size","margin","renderNote","note","embedImage","_imageRegistry","openImage","obj","embed","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","percent","pyv","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","options","objectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","imageCache","Map","cacheKey","key","set","imageOpacity","JSON","stringify","source","renderImage","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","debugContent","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","debugPadding","debugMargin","marginLeft","marginTop","marginRight","marginBottom","debugText","roundedWidth","roundedHeight","text","debugOrigin","circle","renderDebug","debug","availableMethods","painter","acc","prop","renderCanvas","availableWidth","availableHeight","paint","KAPPA","clipBorderTop","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","fillBorderTop","borderTopColor","borderTopStyle","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","borderRightColor","borderRightStyle","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","borderBottomColor","borderBottomStyle","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","borderLeftColor","borderLeftStyle","shouldRenderBorders","renderBorders","drawBackground","nodeOpacity","renderBackground","hasBackground","isString","isSrcId","renderLink","isId","method","setLink","setDestination","addNamedDestination","clean","opt","Object","entries","pair","parseCommonFormOptions","required","noExport","readOnly","defaultValue","parseTextInputOptions","fieldSet","parent","multiline","password","noSpell","format","MaxLen","maxLength","parseSelectAndListFieldOptions","sort","edit","multiSelect","select","getAppearance","codepoint","appearance","Type","Subtype","BBox","Resources","ProcSet","Font","ZaDi","_acroform","initDeflate","write","end","parseCheckboxOptions","onOption","onState","offOption","offState","xMark","prototype","hasOwnProperty","call","BaseFont","normalAppearance","borderColor","checked","AS","AP","N","D","renderTextInput","name","fieldSetOptions","fieldSets","at","_root","AcroForm","initForm","formText","renderSelect","formCombo","renderFieldSet","formField","option","cleanUpFieldSet","_ctx","_node","pop","renderList","formList","renderCheckbox","formCheckbox","isRecursiveNode","Svg","renderChildren","renderChild","renderNode","renderFns","Note","FieldSet","TextInput","Select","Checkbox","List","Canvas","Link","cleanUpFns","overflowHidden","overflow","shouldRenderChildren","Page","cleanUpFn","addNodeBookmark","pageNumber","registry","bookmark","title","expanded","zoom","outline","instance","addItem","addBookmarks","root","pages","render","doc","default"],"mappings":"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","sourcesContent":["import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\n\nconst renderPath = (ctx, node) => {\n    const d = node.props?.d;\n    if (d)\n        ctx.path(node.props.d);\n};\n\nconst KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst renderRect = (ctx, node) => {\n    const x = node.props?.x || 0;\n    const y = node.props?.y || 0;\n    const rx = node.props?.rx || 0;\n    const ry = node.props?.ry || 0;\n    const width = node.props?.width || 0;\n    const height = node.props?.height || 0;\n    if (!width || !height)\n        return;\n    if (rx && ry) {\n        const krx = rx * KAPPA$3;\n        const kry = ry * KAPPA$3;\n        ctx.moveTo(x + rx, y);\n        ctx.lineTo(x - rx + width, y);\n        ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n        ctx.lineTo(x + width, y + height - ry);\n        ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n        ctx.lineTo(x + rx, y + height);\n        ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n        ctx.lineTo(x, y + ry);\n        ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n    }\n    else {\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y);\n        ctx.lineTo(x + width, y + height);\n        ctx.lineTo(x, y + height);\n    }\n    ctx.closePath();\n};\n\nconst renderLine$1 = (ctx, node) => {\n    const { x1, x2, y1, y2 } = node.props || {};\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n};\n\nconst renderGroup = () => {\n    // noop\n};\n\nconst KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst drawEllipse = (ctx, rx, ry, cx = 0, cy = 0) => {\n    const x = cx - rx;\n    const y = cy - ry;\n    const ox = rx * KAPPA$2;\n    const oy = ry * KAPPA$2;\n    const xe = x + rx * 2;\n    const ye = y + ry * 2;\n    const xm = x + rx;\n    const ym = y + ry;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n    ctx.closePath();\n};\nconst renderEllipse = (ctx, node) => {\n    const { cx, cy, rx, ry } = node.props || {};\n    drawEllipse(ctx, rx, ry, cx, cy);\n};\n\nconst renderCircle = (ctx, node) => {\n    const cx = node.props?.cx;\n    const cy = node.props?.cy;\n    const r = node.props?.r;\n    drawEllipse(ctx, r, r, cx, cy);\n};\n\n/* eslint-disable no-return-assign */\nconst number = (n) => {\n    if (n > -1e21 && n < 1e21) {\n        return Math.round(n * 1e6) / 1e6;\n    }\n    throw new Error(`unsupported number: ${n}`);\n};\nconst _renderGlyphs = (ctx, encoded, positions, x, y) => {\n    const commands = [];\n    const scale = ctx._fontSize / 1000;\n    let i;\n    let last = 0;\n    let hadOffset = false;\n    ctx.save();\n    // flip coordinate system\n    ctx.transform(1, 0, 0, -1, 0, ctx.page.height);\n    y = ctx.page.height - y;\n    // add current font to page if necessary\n    if (ctx.page.fonts[ctx._font.id] == null) {\n        ctx.page.fonts[ctx._font.id] = ctx._font.ref();\n    }\n    // begin the text object\n    ctx.addContent('BT');\n    // text position\n    ctx.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n    // font and font size\n    ctx.addContent(`/${ctx._font.id} ${number(ctx._fontSize)} Tf`);\n    // Adds a segment of text to the TJ command buffer\n    const addSegment = (cur) => {\n        if (last < cur) {\n            const hex = encoded.slice(last, cur).join('');\n            const advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n            commands.push(`<${hex}> ${number(-advance)}`);\n        }\n        return (last = cur);\n    };\n    // Flushes the current TJ commands to the output stream\n    const flush = (s) => {\n        addSegment(s);\n        if (commands.length > 0) {\n            ctx.addContent(`[${commands.join(' ')}] TJ`);\n            return (commands.length = 0);\n        }\n    };\n    for (i = 0; i < positions.length; i += 1) {\n        // If we have an x or y offset, we have to break out of the current TJ command\n        // so we can move the text position.\n        const pos = positions[i];\n        if (pos.xOffset || pos.yOffset) {\n            // Flush the current buffer\n            flush(i);\n            // Move the text position and flush just the current character\n            ctx.addContent(`1 0 0 1 ${number(x + pos.xOffset * scale)} ${number(y + pos.yOffset * scale)} Tm`);\n            flush(i + 1);\n            hadOffset = true;\n        }\n        else {\n            // If the last character had an offset, reset the text position\n            if (hadOffset) {\n                ctx.addContent(`1 0 0 1 ${number(x)} ${number(y)} Tm`);\n                hadOffset = false;\n            }\n            // Group segments that don't have any advance adjustments\n            if (pos.xAdvance - pos.advanceWidth !== 0) {\n                addSegment(i + 1);\n            }\n        }\n        x += pos.xAdvance * scale;\n    }\n    // Flush any remaining commands\n    flush(i);\n    // end the text object\n    ctx.addContent('ET');\n    // restore flipped coordinate system\n    return ctx.restore();\n};\nconst renderGlyphs = (ctx, glyphs, positions, x, y) => {\n    const scale = 1000 / ctx._fontSize;\n    const unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n    const advanceWidthScale = 1000 / unitsPerEm;\n    // Glyph encoding and positioning\n    const encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n    const encodedPositions = positions.map((pos, i) => ({\n        xAdvance: pos.xAdvance * scale,\n        yAdvance: pos.yAdvance * scale,\n        xOffset: pos.xOffset,\n        yOffset: pos.yOffset,\n        advanceWidth: glyphs[i].advanceWidth * advanceWidthScale,\n    }));\n    return _renderGlyphs(ctx, encodedGlyphs, encodedPositions, x, y);\n};\n\nconst renderRun$1 = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const runAdvanceWidth = run.xAdvance;\n    const font = run.attributes.font?.[0];\n    const { fontSize, color, opacity } = run.attributes;\n    if (color)\n        ctx.fillColor(color);\n    ctx.fillOpacity(opacity);\n    if (font) {\n        ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n    }\n    try {\n        renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    }\n    catch (error) {\n        console.log(error);\n    }\n    ctx.translate(runAdvanceWidth, 0);\n};\nconst renderSpan = (ctx, line, textAnchor, dominantBaseline) => {\n    ctx.save();\n    const x = line.box?.x || 0;\n    const y = line.box?.y || 0;\n    const font = line.runs[0]?.attributes.font?.[0];\n    const scale = line.runs[0]?.attributes?.scale || 1;\n    const width = line.xAdvance;\n    if (!font)\n        return;\n    const ascent = font.ascent * scale;\n    const xHeight = font.xHeight * scale;\n    const descent = font.descent * scale;\n    const capHeight = font.capHeight * scale;\n    let xTranslate = x;\n    let yTranslate = y;\n    switch (textAnchor) {\n        case 'middle':\n            xTranslate = x - width / 2;\n            break;\n        case 'end':\n            xTranslate = x - width;\n            break;\n        default:\n            xTranslate = x;\n            break;\n    }\n    switch (dominantBaseline) {\n        case 'middle':\n        case 'central':\n            yTranslate = y + capHeight / 2;\n            break;\n        case 'hanging':\n            yTranslate = y + capHeight;\n            break;\n        case 'mathematical':\n            yTranslate = y + xHeight;\n            break;\n        case 'text-after-edge':\n            yTranslate = y + descent;\n            break;\n        case 'text-before-edge':\n            yTranslate = y + ascent;\n            break;\n        default:\n            yTranslate = y;\n            break;\n    }\n    ctx.translate(xTranslate, yTranslate);\n    line.runs.forEach((run) => renderRun$1(ctx, run));\n    ctx.restore();\n};\nconst renderSvgText = (ctx, node) => {\n    const children = node.children;\n    children.forEach((span) => renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline));\n};\n\nconst pairs = (values) => {\n    const result = [];\n    for (let i = 0; i < values.length; i += 2) {\n        result.push([values[i], values[i + 1]]);\n    }\n    return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param points string ex. \"20,30 50,60\"\n * @returns points array ex. [[20, 30], [50, 60]]\n */\nconst parsePoints = (points) => {\n    let values = (points || '')\n        .trim()\n        .replace(/,/g, ' ')\n        .replace(/(\\d)-(\\d)/g, '$1 -$2')\n        .split(/\\s+/);\n    if (values.length % 2 !== 0) {\n        values = values.slice(0, -1);\n    }\n    const mappedValues = values.map(parseFloat);\n    return pairs(mappedValues);\n};\n\nconst drawPolyline = (ctx, points) => {\n    if (points.length > 0) {\n        ctx.moveTo(points[0][0], points[0][1]);\n        points.slice(1).forEach((p) => ctx.lineTo(p[0], p[1]));\n    }\n};\nconst renderPolyline = (ctx, node) => {\n    const points = parsePoints(node.props.points || '');\n    drawPolyline(ctx, points);\n};\n\nconst renderPolygon = (ctx, node) => {\n    const points = parsePoints(node.props.points || '');\n    drawPolyline(ctx, points);\n    ctx.closePath();\n};\n\nconst renderImage$1 = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.image?.data)\n        return;\n    const { x = 0, y = 0 } = node.props;\n    const { width, height, opacity } = node.style;\n    const paddingTop = node.box.paddingLeft || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    if (width === 0 || height === 0) {\n        console.warn(`Image with src '${node.props.href}' skipped due to invalid dimensions`);\n        return;\n    }\n    if (typeof width === 'string' || typeof height === 'string') {\n        console.warn(`Image with src '${node.props.href}' skipped due to percentage width or height`);\n        return;\n    }\n    ctx.save();\n    ctx\n        .fillOpacity(opacity || 1)\n        .image(node.image.data, x + paddingLeft, y + paddingTop, {\n        width,\n        height,\n    });\n    ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst clipNode = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.style)\n        return;\n    const { top, left, width, height } = node.box;\n    const { borderTopLeftRadius = 0, borderTopRightRadius = 0, borderBottomRightRadius = 0, borderBottomLeftRadius = 0, } = node.style;\n    // Border top\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA$1);\n    ctx.moveTo(left + rtr, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr);\n    // Border right\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA$1);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height);\n    // Border bottom\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA$1);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl);\n    // Border left\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA$1);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n    const { operation, value } = transform;\n    switch (operation) {\n        case 'scale': {\n            const [scaleX, scaleY] = value;\n            ctx.scale(scaleX, scaleY, { origin });\n            break;\n        }\n        case 'rotate': {\n            const [angle] = value;\n            ctx.rotate(angle, { origin });\n            break;\n        }\n        case 'translate': {\n            const [x, y = 0] = value;\n            ctx.translate(x, y, { origin });\n            break;\n        }\n        case 'skew': {\n            const [xAngle = 0, yAngle = 0] = value;\n            const radx = (xAngle * Math.PI) / 180;\n            const rady = (yAngle * Math.PI) / 180;\n            const tanx = Math.tan(radx);\n            const tany = Math.tan(rady);\n            let x = 0;\n            let y = 0;\n            if (origin != null) {\n                [x, y] = Array.from(origin);\n                const x1 = x + tanx * y;\n                const y1 = y + tany * x;\n                x -= x1;\n                y -= y1;\n            }\n            ctx.transform(1, tany, tanx, 1, x, y);\n            break;\n        }\n        case 'matrix': {\n            ctx.transform(...value);\n            break;\n        }\n        default: {\n            console.error(`Transform operation: '${operation}' doesn't supported`);\n        }\n    }\n};\nconst applyTransformations = (ctx, node) => {\n    if (!node.origin)\n        return;\n    const { props, style } = node;\n    const origin = [node.origin.left, node.origin.top];\n    const propsTransform = 'transform' in props ? props.transform : undefined;\n    const operations = style?.transform || propsTransform || [];\n    operations.forEach((operation) => {\n        applySingleTransformation(ctx, operation, origin);\n    });\n};\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nconst getPathBoundingBox = (node) => {\n    const path = normalizePath(absPath(parsePath(node.props?.d || '')));\n    if (!path.length)\n        return [0, 0, 0, 0];\n    const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = 0, l = path.length; i < l; i += 1) {\n        const points = path[i].slice(1);\n        for (let j = 0; j < points.length; j += 2) {\n            if (points[j + 0] < bounds[0])\n                bounds[0] = points[j + 0];\n            if (points[j + 1] < bounds[1])\n                bounds[1] = points[j + 1];\n            if (points[j + 0] > bounds[2])\n                bounds[2] = points[j + 0];\n            if (points[j + 1] > bounds[3])\n                bounds[3] = points[j + 1];\n        }\n    }\n    return bounds;\n};\nconst getCircleBoundingBox = (node) => {\n    const r = node.props?.r || 0;\n    const cx = node.props?.cx || 0;\n    const cy = node.props?.cy || 0;\n    return [cx - r, cy - r, cx + r, cy + r];\n};\nconst getEllipseBoundingBox = (node) => {\n    const cx = node.props?.cx || 0;\n    const cy = node.props?.cy || 0;\n    const rx = node.props?.rx || 0;\n    const ry = node.props?.ry || 0;\n    return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nconst getLineBoundingBox = (node) => {\n    const x1 = node.props?.x1 || 0;\n    const y1 = node.props?.y1 || 0;\n    const x2 = node.props?.x2 || 0;\n    const y2 = node.props?.y2 || 0;\n    return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2),\n    ];\n};\nconst getRectBoundingBox = (node) => {\n    const x = node.props?.x || 0;\n    const y = node.props?.y || 0;\n    const width = node.props?.width || 0;\n    const height = node.props?.height || 0;\n    return [x, y, x + width, y + height];\n};\nconst max = (values) => Math.max(-Infinity, ...values);\nconst min = (values) => Math.min(Infinity, ...values);\nconst getPolylineBoundingBox = (node) => {\n    const points = parsePoints(node.props?.points);\n    const xValues = points.map((p) => p[0]);\n    const yValues = points.map((p) => p[1]);\n    return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nconst boundingBoxFns = {\n    [P.Rect]: getRectBoundingBox,\n    [P.Line]: getLineBoundingBox,\n    [P.Path]: getPathBoundingBox,\n    [P.Circle]: getCircleBoundingBox,\n    [P.Ellipse]: getEllipseBoundingBox,\n    [P.Polygon]: getPolylineBoundingBox,\n    [P.Polyline]: getPolylineBoundingBox,\n};\nconst getBoundingBox = (node) => {\n    const boundingBoxFn = boundingBoxFns[node.type];\n    return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nconst setStrokeWidth = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeWidth' in node.props))\n        return;\n    const lineWidth = node.props.strokeWidth;\n    if (lineWidth)\n        ctx.lineWidth(lineWidth);\n};\nconst setStrokeColor = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('stroke' in node.props))\n        return;\n    const strokeColor = node.props.stroke;\n    if (strokeColor)\n        ctx.strokeColor(strokeColor);\n};\nconst setOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('opacity' in node.props))\n        return;\n    const opacity = node.props.opacity;\n    if (!isNil(opacity))\n        ctx.opacity(opacity);\n};\nconst setFillOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fillOpacity' in node.props))\n        return;\n    const fillOpacity = node.props.fillOpacity || null;\n    if (!isNil(fillOpacity))\n        ctx.fillOpacity(fillOpacity);\n};\nconst setStrokeOpacity = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeOpacity' in node.props))\n        return;\n    const strokeOpacity = node.props?.strokeOpacity;\n    if (!isNil(strokeOpacity))\n        ctx.strokeOpacity(strokeOpacity);\n};\nconst setLineJoin = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeLinejoin' in node.props))\n        return;\n    const lineJoin = node.props.strokeLinejoin;\n    if (lineJoin)\n        ctx.lineJoin(lineJoin);\n};\nconst setLineCap = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeLinecap' in node.props))\n        return;\n    const lineCap = node.props?.strokeLinecap;\n    if (lineCap)\n        ctx.lineCap(lineCap);\n};\nconst setLineDash = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('strokeDasharray' in node.props))\n        return;\n    const value = node.props?.strokeDasharray || null;\n    // @ts-expect-error check this works as expected\n    if (value)\n        ctx.dash(value.split(/[\\s,]+/).map(Number));\n};\nconst hasLinearGradientFill = (node) => {\n    if (!node.props)\n        return false;\n    if (!('fill' in node.props))\n        return false;\n    if (typeof node.props.fill === 'string')\n        return false;\n    return node.props.fill?.type === P.LinearGradient;\n};\nconst hasRadialGradientFill = (node) => {\n    if (!node.props)\n        return false;\n    if (!('fill' in node.props))\n        return false;\n    if (typeof node.props.fill === 'string')\n        return false;\n    return node.props.fill?.type === P.RadialGradient;\n};\nfunction multiplyMatrices(m1, m2) {\n    const a = m1[0] * m2[0] + m1[2] * m2[1];\n    const b = m1[1] * m2[0] + m1[3] * m2[1];\n    const c = m1[0] * m2[2] + m1[2] * m2[3];\n    const d = m1[1] * m2[2] + m1[3] * m2[3];\n    const e = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n    const f = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n    return [a, b, c, d, e, f];\n}\nconst transformGradient = (grad, transforms, bbox, units) => {\n    const matrices = transforms.map((transform) => {\n        switch (transform.operation) {\n            case 'scale': {\n                const value = transform.value;\n                return [value[0], 0, 0, value[1], 0, 0];\n            }\n            case 'translate': {\n                const value = transform.value;\n                let x = value[0] || 0;\n                let y = value[1] || 0;\n                if (units === 'objectBoundingBox') {\n                    x = (bbox[2] - bbox[0]) * x;\n                    y = (bbox[3] - bbox[1]) * y;\n                }\n                return [1, 0, 0, 1, x, y];\n            }\n            case 'rotate': {\n                const value = transform.value;\n                const cos = Math.cos(value[0]);\n                const sin = Math.sin(value[0]);\n                return [cos, sin, -sin, cos, 0, 0];\n            }\n            case 'skew': {\n                const value = transform.value;\n                return [1, Math.tan(value[0]), Math.tan(value[1]), 1, 0, 0];\n            }\n            case 'matrix': {\n                const value = transform.value;\n                let x = value[4] || 0;\n                let y = value[5] || 0;\n                if (units === 'objectBoundingBox') {\n                    x = (bbox[2] - bbox[0]) * x;\n                    y = (bbox[3] - bbox[1]) * y;\n                }\n                return [value[0], value[1], value[2], value[3], x, y];\n            }\n            default:\n                return [1, 0, 0, 1, 0, 0];\n        }\n    });\n    const matrix = matrices.reduce(multiplyMatrices, [1, 0, 0, 1, 0, 0]);\n    grad.setTransform(...matrix);\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nconst setLinearGradientFill = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const bbox = getBoundingBox(node);\n    const gradient = node.props?.fill;\n    if (!gradient)\n        return;\n    const units = gradient.props.gradientUnits || 'objectBoundingBox';\n    const transforms = gradient.props.gradientTransform || [];\n    let x1 = gradient.props.x1 || 0;\n    let y1 = gradient.props.y1 || 0;\n    let x2 = gradient.props.x2 || 1;\n    let y2 = gradient.props.y2 || 0;\n    if (units === 'objectBoundingBox') {\n        const m0 = bbox[2] - bbox[0];\n        const m3 = bbox[3] - bbox[1];\n        const m4 = bbox[0];\n        const m5 = bbox[1];\n        x1 = m0 * x1 + m4;\n        y1 = m3 * y1 + m5;\n        x2 = m0 * x2 + m4;\n        y2 = m3 * y2 + m5;\n    }\n    const grad = ctx.linearGradient(x1, y1, x2, y2);\n    transformGradient(grad, transforms, bbox, units);\n    gradient.children?.forEach((stop) => {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nconst setRadialGradientFill = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const bbox = getBoundingBox(node);\n    const gradient = node.props?.fill;\n    if (!gradient)\n        return;\n    const units = gradient.props.gradientUnits || 'objectBoundingBox';\n    const transforms = gradient.props.gradientTransform || [];\n    let r = gradient.props.r || 0.5;\n    let cx = gradient.props.cx || 0.5;\n    let cy = gradient.props.cy || 0.5;\n    let fx = gradient.props.fx || cx;\n    let fy = gradient.props.fy || cy;\n    if (units === 'objectBoundingBox') {\n        const m0 = bbox[2] - bbox[0];\n        const m3 = bbox[3] - bbox[1];\n        const m4 = bbox[0];\n        const m5 = bbox[1];\n        r = r * m0;\n        cx = m0 * cx + m4;\n        cy = m3 * cy + m5;\n        fx = m0 * fx + m4;\n        fy = m3 * fy + m5;\n    }\n    const grad = ctx.radialGradient(cx, cy, 0, fx, fy, r);\n    transformGradient(grad, transforms, bbox, units);\n    gradient.children?.forEach((stop) => {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\nconst setFillColor = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('fill' in node.props))\n        return;\n    const fillColor = node.props?.fill;\n    if (fillColor)\n        ctx.fillColor(fillColor);\n};\nconst setFill = (ctx, node) => {\n    if (hasLinearGradientFill(node))\n        return setLinearGradientFill(ctx, node);\n    if (hasRadialGradientFill(node))\n        return setRadialGradientFill(ctx, node);\n    return setFillColor(ctx, node);\n};\nconst draw = (ctx, node) => {\n    const props = node.props || {};\n    if ('fill' in props && 'stroke' in props && props.fill && props.stroke) {\n        ctx.fillAndStroke(props.fillRule);\n    }\n    else if ('fill' in props && props.fill) {\n        ctx.fill(props.fillRule);\n    }\n    else if ('stroke' in props && props.stroke) {\n        ctx.stroke();\n    }\n    else {\n        ctx.save();\n        ctx.opacity(0);\n        ctx.fill(null);\n        ctx.restore();\n    }\n};\nconst noop = () => { };\nconst renderFns$1 = {\n    [P.Tspan]: noop,\n    [P.TextInstance]: noop,\n    [P.Path]: renderPath,\n    [P.Rect]: renderRect,\n    [P.Line]: renderLine$1,\n    [P.G]: renderGroup,\n    [P.Text]: renderSvgText,\n    [P.Circle]: renderCircle,\n    [P.Image]: renderImage$1,\n    [P.Ellipse]: renderEllipse,\n    [P.Polygon]: renderPolygon,\n    [P.Polyline]: renderPolyline,\n};\nconst renderNode$1 = (ctx, node) => {\n    const renderFn = renderFns$1[node.type];\n    if (renderFn) {\n        renderFn(ctx, node);\n    }\n    else {\n        console.warn(`SVG node of type ${node.type} is not currently supported`);\n    }\n};\nconst drawNode = (ctx, node) => {\n    setLineCap(ctx, node);\n    setLineDash(ctx, node);\n    setLineJoin(ctx, node);\n    setStrokeWidth(ctx, node);\n    setStrokeColor(ctx, node);\n    setFill(ctx, node);\n    setStrokeOpacity(ctx, node);\n    setFillOpacity(ctx, node);\n    setOpacity(ctx, node);\n    applyTransformations(ctx, node);\n    renderNode$1(ctx, node);\n    draw(ctx, node);\n};\nconst clipPath = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('clipPath' in node.props))\n        return;\n    const value = node.props.clipPath;\n    if (value) {\n        const children = value.children || [];\n        children.forEach((child) => renderNode$1(ctx, child));\n        ctx.clip();\n    }\n};\nconst drawChildren = (ctx, node) => {\n    const children = node.children || [];\n    children.forEach((child) => {\n        ctx.save();\n        clipPath(ctx, child);\n        drawNode(ctx, child);\n        drawChildren(ctx, child);\n        ctx.restore();\n    });\n};\nconst resolveAspectRatio = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { width, height } = node.box;\n    const { viewBox, preserveAspectRatio } = node.props;\n    const { meetOrSlice = 'meet', align = 'xMidYMid' } = preserveAspectRatio || {};\n    if (viewBox == null || width == null || height == null)\n        return;\n    const x = viewBox?.minX || 0;\n    const y = viewBox?.minY || 0;\n    const logicalWidth = viewBox?.maxX || width;\n    const logicalHeight = viewBox?.maxY || height;\n    const logicalRatio = logicalWidth / logicalHeight;\n    const physicalRatio = width / height;\n    const scaleX = width / logicalWidth;\n    const scaleY = height / logicalHeight;\n    if (align === 'none') {\n        ctx.scale(scaleX, scaleY);\n        ctx.translate(-x, -y);\n        return;\n    }\n    if ((logicalRatio < physicalRatio && meetOrSlice === 'meet') ||\n        (logicalRatio >= physicalRatio && meetOrSlice === 'slice')) {\n        ctx.scale(scaleY, scaleY);\n        switch (align) {\n            case 'xMinYMin':\n            case 'xMinYMid':\n            case 'xMinYMax':\n                ctx.translate(-x, -y);\n                break;\n            case 'xMidYMin':\n            case 'xMidYMid':\n            case 'xMidYMax':\n                ctx.translate(-x - (logicalWidth - (width * logicalHeight) / height) / 2, -y);\n                break;\n            default:\n                ctx.translate(-x - (logicalWidth - (width * logicalHeight) / height), -y);\n        }\n    }\n    else {\n        ctx.scale(scaleX, scaleX);\n        switch (align) {\n            case 'xMinYMin':\n            case 'xMidYMin':\n            case 'xMaxYMin':\n                ctx.translate(-x, -y);\n                break;\n            case 'xMinYMid':\n            case 'xMidYMid':\n            case 'xMaxYMid':\n                ctx.translate(-x, -y - (logicalHeight - (height * logicalWidth) / width) / 2);\n                break;\n            default:\n                ctx.translate(-x, -y - (logicalHeight - (height * logicalWidth) / width));\n        }\n    }\n};\nconst moveToOrigin = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left } = node.box;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const paddingTop = node.box.paddingTop || 0;\n    ctx.translate(left + paddingLeft, top + paddingTop);\n};\nconst renderSvg = (ctx, node) => {\n    ctx.save();\n    clipNode(ctx, node);\n    moveToOrigin(ctx, node);\n    resolveAspectRatio(ctx, node);\n    drawChildren(ctx, node);\n    ctx.restore();\n};\n\nconst black = { value: '#000', opacity: 1 };\n// TODO: parse to number[] in layout to avoid this step\nconst parseColor = (hex) => {\n    if (!hex)\n        return black;\n    const parsed = colorString.get(hex);\n    if (!parsed)\n        return black;\n    const value = colorString.to.hex(parsed.value.slice(0, 3));\n    const opacity = parsed.value[3];\n    return { value, opacity };\n};\n\nconst DEST_REGEXP = /^#.+/;\nconst isSrcId$1 = (src) => src.match(DEST_REGEXP);\nconst renderAttachment = (ctx, attachment) => {\n    const { xOffset = 0, yOffset = 0, width, height, image } = attachment;\n    ctx.translate(-width + xOffset, -height + yOffset);\n    ctx.image(image, 0, 0, {\n        fit: [width, height],\n        align: 'center',\n        valign: 'bottom',\n    });\n};\nconst renderAttachments = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const font = run.attributes.font?.[0];\n    if (!font)\n        return;\n    ctx.save();\n    const space = font.glyphForCodePoint(0x20);\n    const objectReplacement = font.glyphForCodePoint(0xfffc);\n    let attachmentAdvance = 0;\n    for (let i = 0; i < run.glyphs.length; i += 1) {\n        const position = run.positions[i];\n        const glyph = run.glyphs[i];\n        attachmentAdvance += position.xAdvance || 0;\n        if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n            ctx.translate(attachmentAdvance, position.yOffset || 0);\n            renderAttachment(ctx, run.attributes.attachment);\n            run.glyphs[i] = space;\n            attachmentAdvance = 0;\n        }\n    }\n    ctx.restore();\n};\nconst renderRun = (ctx, run) => {\n    if (!run.glyphs)\n        return;\n    if (!run.positions)\n        return;\n    const font = run.attributes.font?.[0];\n    if (!font)\n        return;\n    const { fontSize, link } = run.attributes;\n    const color = parseColor(run.attributes.color);\n    const opacity = isNil(run.attributes.opacity)\n        ? color.opacity\n        : run.attributes.opacity;\n    const { height = 0, descent = 0, xAdvance = 0 } = run;\n    ctx.fillColor(color.value);\n    ctx.fillOpacity(opacity);\n    if (link) {\n        if (isSrcId$1(link)) {\n            ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n        }\n        else {\n            ctx.link(0, -height - descent, xAdvance, height, link);\n        }\n    }\n    renderAttachments(ctx, run);\n    ctx.font(font.type === 'STANDARD' ? font.fullName : font, fontSize);\n    try {\n        renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    }\n    catch (error) {\n        console.log(error);\n    }\n    ctx.translate(xAdvance, 0);\n};\nconst renderBackground$1 = (ctx, rect, backgroundColor) => {\n    const color = parseColor(backgroundColor);\n    ctx.save();\n    ctx.fillOpacity(color.opacity);\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill(color.value);\n    ctx.restore();\n};\nconst renderDecorationLine = (ctx, decorationLine) => {\n    ctx.save();\n    ctx.lineWidth(decorationLine.rect.height);\n    ctx.strokeOpacity(decorationLine.opacity);\n    if (/dashed/.test(decorationLine.style)) {\n        ctx.dash(3 * decorationLine.rect.height, {});\n    }\n    else if (/dotted/.test(decorationLine.style)) {\n        ctx.dash(decorationLine.rect.height, {});\n    }\n    if (/wavy/.test(decorationLine.style)) {\n        const dist = Math.max(2, decorationLine.rect.height);\n        let step = 1.1 * dist;\n        const stepCount = Math.floor(decorationLine.rect.width / (2 * step));\n        // Adjust step to fill entire width\n        const remainingWidth = decorationLine.rect.width - stepCount * 2 * step;\n        const adjustment = remainingWidth / stepCount / 2;\n        step += adjustment;\n        const cp1y = decorationLine.rect.y + dist;\n        const cp2y = decorationLine.rect.y - dist;\n        let { x } = decorationLine.rect;\n        ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n        for (let i = 0; i < stepCount; i += 1) {\n            ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, decorationLine.rect.y);\n            x += 2 * step;\n        }\n    }\n    else {\n        ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y);\n        ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y);\n        if (/double/.test(decorationLine.style)) {\n            ctx.moveTo(decorationLine.rect.x, decorationLine.rect.y + decorationLine.rect.height * 2);\n            ctx.lineTo(decorationLine.rect.x + decorationLine.rect.width, decorationLine.rect.y + decorationLine.rect.height * 2);\n        }\n    }\n    ctx.stroke(decorationLine.color);\n    ctx.restore();\n};\nconst renderLine = (ctx, line) => {\n    if (!line.box)\n        return;\n    const lineAscent = line.ascent || 0;\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y + lineAscent);\n    for (let i = 0; i < line.runs.length; i += 1) {\n        const run = line.runs[i];\n        const isLastRun = i === line.runs.length - 1;\n        if (run.attributes.backgroundColor) {\n            const xAdvance = run.xAdvance ?? 0;\n            const overflowRight = isLastRun ? line.overflowRight ?? 0 : 0;\n            const backgroundRect = {\n                x: 0,\n                y: -lineAscent,\n                height: line.box.height,\n                width: xAdvance - overflowRight,\n            };\n            renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n        }\n        renderRun(ctx, run);\n    }\n    ctx.restore();\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y);\n    if (line.decorationLines) {\n        for (let i = 0; i < line.decorationLines.length; i += 1) {\n            const decorationLine = line.decorationLines[i];\n            renderDecorationLine(ctx, decorationLine);\n        }\n    }\n    ctx.restore();\n};\nconst renderBlock = (ctx, block) => {\n    block.forEach((line) => {\n        renderLine(ctx, line);\n    });\n};\nconst renderText = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.lines)\n        return;\n    const { top, left } = node.box;\n    const blocks = [node.lines];\n    const paddingTop = node.box?.paddingTop || 0;\n    const paddingLeft = node.box?.paddingLeft || 0;\n    const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n    const offsetX = node.alignOffset || 0;\n    ctx.save();\n    ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n    blocks.forEach((block) => {\n        renderBlock(ctx, block);\n    });\n    ctx.restore();\n};\n\nconst renderPage = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { width, height } = node.box;\n    const dpi = node.props?.dpi || 72;\n    const userUnit = dpi / 72;\n    ctx.addPage({ size: [width, height], margin: 0, userUnit });\n};\n\nconst renderNote = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left } = node.box;\n    const value = node?.children?.[0].value || '';\n    const color = node.style?.backgroundColor;\n    ctx.note(left, top, 0, 0, value, { color });\n};\n\nconst embedImage = (ctx, node) => {\n    const src = node.image.data;\n    let image;\n    if (typeof src === 'string') {\n        image = ctx._imageRegistry[src];\n    }\n    if (!image) {\n        image = ctx.openImage(src);\n    }\n    if (!image.obj) {\n        image.embed(ctx);\n    }\n    return image;\n};\n\nconst isNumeric = (n) => {\n    return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n    const cr = cw / ch;\n    const ir = iw / ih;\n    const pxp = matchPercent(px ?? null);\n    const pyp = matchPercent(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        const height = ch;\n        const width = height * ir;\n        const yOffset = isNumeric(py) ? py : 0;\n        const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n        return { width, height, xOffset, yOffset };\n    }\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n};\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n    const width = iw;\n    const height = ih;\n    const pxp = matchPercent(px ?? null);\n    const pyp = matchPercent(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, xOffset, yOffset };\n};\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n    const ir = iw / ih;\n    const cr = cw / ch;\n    const pxp = matchPercent(px ?? null);\n    const pyp = matchPercent(py ?? null);\n    const pxv = pxp ? pxp.percent : 0.5;\n    const pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        const width = cw;\n        const height = width / ir;\n        const xOffset = isNumeric(px) ? px : 0;\n        const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n        return { width, height, yOffset, xOffset };\n    }\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n};\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n    const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n    const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    return containDimension.width < noneDimension.width\n        ? containDimension\n        : noneDimension;\n};\nconst applyFillObjectFit = (cw, ch, px, py) => {\n    return {\n        width: cw,\n        height: ch,\n        xOffset: matchPercent(px ?? null) ? 0 : px || 0,\n        yOffset: matchPercent(py ?? null) ? 0 : py || 0,\n    };\n};\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n    switch (type) {\n        case 'contain':\n            return applyContainObjectFit(cw, ch, iw, ih, px, py);\n        case 'cover':\n            return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n        case 'none':\n            return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n        case 'scale-down':\n            return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n        default:\n            return applyFillObjectFit(cw, ch, px, py);\n    }\n};\n\nconst drawImage = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    if (!node.image)\n        return;\n    const { left, top } = node.box;\n    const opacity = node.style?.opacity;\n    const objectFit = node.style?.objectFit;\n    const objectPositionX = node.style?.objectPositionX;\n    const objectPositionY = node.style?.objectPositionY;\n    const paddingTop = node.box.paddingTop || 0;\n    const paddingRight = node.box.paddingRight || 0;\n    const paddingBottom = node.box.paddingBottom || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const imageCache = options.imageCache || new Map();\n    const { width, height, xOffset, yOffset } = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY);\n    if (node.image.data) {\n        if (width !== 0 && height !== 0) {\n            const cacheKey = node.image.key;\n            const image = imageCache.get(cacheKey) || embedImage(ctx, node);\n            if (cacheKey)\n                imageCache.set(cacheKey, image);\n            const imageOpacity = isNil(opacity) ? 1 : opacity;\n            ctx\n                .fillOpacity(imageOpacity)\n                .image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n                width,\n                height,\n            });\n        }\n        else {\n            console.warn(`Image with src '${JSON.stringify(node.props.src || node.props.source)}' skipped due to invalid dimensions`);\n        }\n    }\n};\nconst renderImage = (ctx, node, options) => {\n    ctx.save();\n    clipNode(ctx, node);\n    drawImage(ctx, node, options);\n    ctx.restore();\n};\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n// TODO: Draw debug boxes using clipping to enhance quality\nconst debugContent = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height, paddingLeft = 0, paddingTop = 0, paddingRight = 0, paddingBottom = 0, borderLeftWidth = 0, borderTopWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    ctx\n        .fillColor(CONTENT_COLOR)\n        .opacity(0.5)\n        .rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth)\n        .fill();\n};\nconst debugPadding = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height, paddingLeft = 0, paddingTop = 0, paddingRight = 0, paddingBottom = 0, borderLeftWidth = 0, borderTopWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n    // Padding top\n    ctx\n        .rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop)\n        .fill();\n    // Padding left\n    ctx\n        .rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth)\n        .fill();\n    // Padding right\n    ctx\n        .rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth)\n        .fill();\n    // Padding bottom\n    ctx\n        .rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom)\n        .fill();\n};\nconst debugMargin = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height } = node.box;\n    const { marginLeft = 0, marginTop = 0, marginRight = 0, marginBottom = 0, } = node.box;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n    // Margin left\n    ctx\n        .rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom)\n        .fill();\n    // Margin right\n    ctx\n        .rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom)\n        .fill();\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n};\nconst debugText = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { left, top, width, height } = node.box;\n    const { marginLeft = 0, marginTop = 0, marginRight = 0, marginBottom = 0, } = node.box;\n    const roundedWidth = Math.round(width + marginLeft + marginRight);\n    const roundedHeight = Math.round(height + marginTop + marginBottom);\n    ctx\n        .fontSize(6)\n        .opacity(1)\n        .fillColor('black')\n        .text(`${roundedWidth} x ${roundedHeight}`, left - marginLeft, Math.max(top - marginTop - 4, 1), { width: Infinity });\n};\nconst debugOrigin = (ctx, node) => {\n    if (node.origin) {\n        ctx\n            .circle(node.origin.left, node.origin.top, 3)\n            .fill('red')\n            .circle(node.origin.left, node.origin.top, 5)\n            .stroke('red');\n    }\n};\nconst renderDebug = (ctx, node) => {\n    if (!node.props)\n        return;\n    if (!('debug' in node.props) || !node.props.debug)\n        return;\n    ctx.save();\n    debugContent(ctx, node);\n    debugPadding(ctx, node);\n    debugMargin(ctx, node);\n    debugText(ctx, node);\n    debugOrigin(ctx, node);\n    ctx.restore();\n};\n\nconst availableMethods = [\n    'dash',\n    'clip',\n    'save',\n    'path',\n    'fill',\n    'font',\n    'text',\n    'rect',\n    'scale',\n    'moveTo',\n    'lineTo',\n    'stroke',\n    'rotate',\n    'circle',\n    'lineCap',\n    'opacity',\n    'ellipse',\n    'polygon',\n    'restore',\n    'lineJoin',\n    'fontSize',\n    'fillColor',\n    'lineWidth',\n    'translate',\n    'miterLimit',\n    'strokeColor',\n    'fillOpacity',\n    'roundedRect',\n    'fillAndStroke',\n    'strokeOpacity',\n    'bezierCurveTo',\n    'quadraticCurveTo',\n    'linearGradient',\n    'radialGradient',\n];\nconst painter = (ctx) => {\n    const p = availableMethods.reduce((acc, prop) => ({\n        ...acc,\n        [prop]: (...args) => {\n            // @ts-expect-error ctx[prop] is a function\n            ctx[prop](...args);\n            return p;\n        },\n    }), {});\n    return p;\n};\nconst renderCanvas = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    const paddingTop = node.box.paddingTop || 0;\n    const paddingLeft = node.box.paddingLeft || 0;\n    const paddingRight = node.box.paddingRight || 0;\n    const paddingBottom = node.box.paddingBottom || 0;\n    const availableWidth = width - paddingLeft - paddingRight;\n    const availableHeight = height - paddingTop - paddingBottom;\n    if (!availableWidth || !availableHeight) {\n        console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n    }\n    ctx.save().translate(left + paddingLeft, top + paddingTop);\n    if (node.props.paint) {\n        node.props.paint(painter(ctx), availableWidth, availableHeight);\n    }\n    ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n    // Clip outer top border edge\n    ctx.moveTo(left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    const c0 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr);\n    // Move down in case the margin exceedes the radius\n    const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n    ctx.lineTo(left + width, topRightYCoord);\n    // Clip inner top right cap\n    ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n    // Ellipse coefficients inner top right cap\n    const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n    const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth);\n    // Clip inner top border edge\n    ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n    ctx.lineTo(left, topLeftYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    const c5 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border top cap joins\n    if (borderRightWidth) {\n        const trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        const trSlope = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n    const { top, left, width } = layout;\n    const { borderTopColor, borderTopWidth, borderTopStyle, borderRightWidth, borderLeftWidth, } = style;\n    const c0 = rtl * (1.0 - KAPPA);\n    const c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.strokeColor(borderTopColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n    if (borderTopStyle === 'dashed') {\n        ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n    }\n    else if (borderTopStyle === 'dotted') {\n        ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n    // Clip outer right border edge\n    ctx.moveTo(left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer bottom right cap\n    const c0 = rbr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    // Move left in case the margin exceedes the radius\n    const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n    ctx.lineTo(topBottomXCoord, top + height);\n    // Clip inner bottom right cap\n    ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n    // Ellipse coefficients inner bottom right cap\n    const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth));\n    // Clip inner right border edge\n    ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth));\n    // Ellipse coefficients inner top right cap\n    const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n    const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n    const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n    ctx.lineTo(topRightXCoord, top);\n    // Move right in case the margin exceedes the radius\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    const c5 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderTopWidth) {\n        const trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        const brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderRightColor, borderRightStyle, borderRightWidth, borderTopWidth, borderBottomWidth, } = style;\n    const c0 = rbr * (1.0 - KAPPA);\n    const c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    ctx.strokeColor(borderRightColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderRightStyle === 'dashed') {\n        ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n    }\n    else if (borderRightStyle === 'dotted') {\n        ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n    // Clip outer top border edge\n    ctx.moveTo(left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    const c0 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    // Move up in case the margin exceedes the radius\n    const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n    ctx.lineTo(left, bottomLeftYCoord);\n    // Clip inner bottom left cap\n    ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n    // Ellipse coefficients inner top right cap\n    const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner bottom left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth);\n    // Clip inner bottom border edge\n    ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth);\n    // Ellipse coefficients inner top left cap\n    const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n    ctx.lineTo(left + width, bottomRightYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer top left cap\n    const c5 = rbr * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border bottom cap joins\n    if (borderRightWidth) {\n        const brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        const trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n    const { top, left, width, height } = layout;\n    const { borderBottomColor, borderBottomStyle, borderBottomWidth, borderRightWidth, borderLeftWidth, } = style;\n    const c0 = rbl * (1.0 - KAPPA);\n    const c1 = rbr * (1.0 - KAPPA);\n    ctx.moveTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.strokeColor(borderBottomColor);\n    ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n    if (borderBottomStyle === 'dashed') {\n        ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n    }\n    else if (borderBottomStyle === 'dotted') {\n        ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n    const { top, left, width, height } = layout;\n    const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n    // Clip outer left border edge\n    ctx.moveTo(left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    const c0 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    // Move right in case the margin exceedes the radius\n    const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n    ctx.lineTo(topLeftCoordX, top);\n    // Clip inner top left cap\n    ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth));\n    // Clip inner left border edge\n    ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth));\n    // Ellipse coefficients inner bottom left cap\n    const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n    ctx.lineTo(bottomLeftXCoord, top + height);\n    // Move left in case the margin exceedes the radius\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    const c5 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderBottomWidth) {\n        const trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        const trSlope = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n    const { top, left, height } = layout;\n    const { borderLeftColor, borderLeftStyle, borderLeftWidth, borderTopWidth, borderBottomWidth, } = style;\n    const c0 = rbl * (1.0 - KAPPA);\n    const c1 = rtl * (1.0 - KAPPA);\n    ctx.moveTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n    ctx.strokeColor(borderLeftColor);\n    ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderLeftStyle === 'dashed') {\n        ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n    }\n    else if (borderLeftStyle === 'dotted') {\n        ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nconst shouldRenderBorders = (node) => node.box &&\n    (node.box.borderTopWidth ||\n        node.box.borderRightWidth ||\n        node.box.borderBottomWidth ||\n        node.box.borderLeftWidth);\nconst renderBorders = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!shouldRenderBorders(node))\n        return;\n    const { width, height, borderTopWidth = 0, borderLeftWidth = 0, borderRightWidth = 0, borderBottomWidth = 0, } = node.box;\n    const { opacity = 1, borderTopColor = 'black', borderTopStyle = 'solid', borderLeftColor = 'black', borderLeftStyle = 'solid', borderRightColor = 'black', borderRightStyle = 'solid', borderBottomColor = 'black', borderBottomStyle = 'solid', } = node.style;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderTopLeftRadius = node.style.borderTopLeftRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderTopRightRadius = node.style.borderTopRightRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderBottomLeftRadius = node.style.borderBottomLeftRadius || 0;\n    // @ts-expect-error this is always a number due to resolve border radius step\n    const borderBottomRightRadius = node.style.borderBottomRightRadius || 0;\n    const style = {\n        borderTopColor,\n        borderTopWidth,\n        borderTopStyle,\n        borderLeftColor,\n        borderLeftWidth,\n        borderLeftStyle,\n        borderRightColor,\n        borderRightWidth,\n        borderRightStyle,\n        borderBottomColor,\n        borderBottomWidth,\n        borderBottomStyle};\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    ctx.save();\n    ctx.strokeOpacity(opacity);\n    if (borderTopWidth) {\n        ctx.save();\n        clipBorderTop(ctx, node.box, style, rtr, rtl);\n        fillBorderTop(ctx, node.box, style, rtr, rtl);\n        ctx.restore();\n    }\n    if (borderRightWidth) {\n        ctx.save();\n        clipBorderRight(ctx, node.box, style, rtr, rbr);\n        fillBorderRight(ctx, node.box, style, rtr, rbr);\n        ctx.restore();\n    }\n    if (borderBottomWidth) {\n        ctx.save();\n        clipBorderBottom(ctx, node.box, style, rbl, rbr);\n        fillBorderBottom(ctx, node.box, style, rbl, rbr);\n        ctx.restore();\n    }\n    if (borderLeftWidth) {\n        ctx.save();\n        clipBorderLeft(ctx, node.box, style, rbl, rtl);\n        fillBorderLeft(ctx, node.box, style, rbl, rtl);\n        ctx.restore();\n    }\n    ctx.restore();\n};\n\nconst drawBackground = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    const color = parseColor(node.style.backgroundColor);\n    const nodeOpacity = isNil(node.style?.opacity) ? 1 : node.style.opacity;\n    const opacity = Math.min(color.opacity, nodeOpacity);\n    ctx\n        .fillOpacity(opacity)\n        .fillColor(color.value)\n        .rect(left, top, width, height)\n        .fill();\n};\nconst renderBackground = (ctx, node) => {\n    const hasBackground = !!node.box && !!node.style?.backgroundColor;\n    if (hasBackground) {\n        ctx.save();\n        clipNode(ctx, node);\n        drawBackground(ctx, node);\n        ctx.restore();\n    }\n};\n\nconst isString = (value) => typeof value === 'string';\nconst isSrcId = (value) => /^#.+/.test(value);\nconst renderLink = (ctx, node, src) => {\n    if (!src || !node.box)\n        return;\n    const isId = isSrcId(src);\n    const method = isId ? 'goTo' : 'link';\n    const value = isId ? src.slice(1) : src;\n    const { top, left, width, height } = node.box;\n    ctx[method](left, top, width, height, value);\n};\nconst setLink = (ctx, node) => {\n    const props = node.props || {};\n    if ('src' in props && isString(props.src))\n        return renderLink(ctx, node, props.src);\n    if ('href' in props && isString(props.href))\n        return renderLink(ctx, node, props.href);\n};\n\nconst setDestination = (ctx, node) => {\n    if (!node.box)\n        return;\n    if (!node.props)\n        return;\n    if ('id' in node.props) {\n        ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n    }\n};\n\nconst clean = (options) => {\n    const opt = { ...options };\n    // We need to ensure the elements are no present if not true\n    Object.entries(opt).forEach((pair) => {\n        if (!pair[1]) {\n            delete opt[pair[0]];\n        }\n    });\n    return opt;\n};\nconst parseCommonFormOptions = (node) => {\n    // Common Options\n    return {\n        required: node.props?.required || false,\n        noExport: node.props?.noExport || false,\n        readOnly: node.props?.readOnly || false,\n        value: node.props?.value || undefined,\n        defaultValue: node.props?.defaultValue || undefined,\n    };\n};\nconst parseTextInputOptions = (node, fieldSet) => {\n    return clean({\n        ...parseCommonFormOptions(node),\n        parent: fieldSet || undefined,\n        align: node.props?.align || 'left',\n        multiline: node.props?.multiline || undefined,\n        password: node.props?.password || false,\n        noSpell: node.props?.noSpell || false,\n        format: node.props?.format || undefined,\n        fontSize: node.props?.fontSize || undefined,\n        MaxLen: node.props?.maxLength || undefined,\n    });\n};\nconst parseSelectAndListFieldOptions = (node) => {\n    return clean({\n        ...parseCommonFormOptions(node),\n        sort: node.props?.sort || false,\n        edit: node.props?.edit || false,\n        multiSelect: node.props?.multiSelect || false,\n        noSpell: node.props?.noSpell || false,\n        select: node.props?.select || [''],\n    });\n};\nconst getAppearance = (ctx, codepoint, width, height) => {\n    const appearance = ctx.ref({\n        Type: 'XObject',\n        Subtype: 'Form',\n        BBox: [0, 0, width, height],\n        Resources: {\n            ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n            Font: {\n                ZaDi: ctx._acroform.fonts.ZaDi,\n            },\n        },\n    });\n    appearance.initDeflate();\n    appearance.write(`/Tx BMC\\nq\\n/ZaDi ${height * 0.8} Tf\\nBT\\n${width * 0.45} ${height / 4} Td (${codepoint}) Tj\\nET\\nQ\\nEMC`);\n    appearance.end(null);\n    return appearance;\n};\nconst parseCheckboxOptions = (ctx, node, fieldSet) => {\n    const { width, height } = node.box || {};\n    const onOption = node.props?.onState || 'Yes';\n    const offOption = node.props?.offState || 'Off';\n    const xMark = node.props?.xMark || false;\n    if (!Object.prototype.hasOwnProperty.call(ctx._acroform.fonts, 'ZaDi')) {\n        const ref = ctx.ref({\n            Type: 'Font',\n            Subtype: 'Type1',\n            BaseFont: 'ZapfDingbats',\n        });\n        ctx._acroform.fonts.ZaDi = ref;\n        ref.end(null);\n    }\n    const normalAppearance = {\n        [onOption]: getAppearance(ctx, xMark ? '8' : '4', width, height),\n        [offOption]: getAppearance(ctx, xMark ? ' ' : '8', width, height),\n    };\n    return clean({\n        ...parseCommonFormOptions(node),\n        backgroundColor: node.props?.backgroundColor || undefined,\n        borderColor: node.props?.borderColor || undefined,\n        parent: fieldSet || undefined,\n        value: `/${node.props?.checked === true ? onOption : offOption}`,\n        defaultValue: `/${node.props?.checked === true ? onOption : offOption}`,\n        AS: node.props?.checked === true ? onOption : offOption,\n        AP: { N: normalAppearance, D: normalAppearance },\n    });\n};\n\nconst renderTextInput = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    const fieldSetOptions = options.fieldSets?.at(0);\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formText(name, left, top, width, height, parseTextInputOptions(node, fieldSetOptions));\n};\n\nconst renderSelect = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formCombo(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nconst renderFieldSet = (ctx, node, options) => {\n    const name = node.props?.name || '';\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    const formField = ctx.formField(name);\n    const option = options;\n    if (!option.fieldSets) {\n        option.fieldSets = [formField];\n    }\n    else {\n        option.fieldSets.push(formField);\n    }\n};\nconst cleanUpFieldSet = (_ctx, _node, options) => {\n    options.fieldSets.pop();\n};\n\nconst renderList = (ctx, node) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box || {};\n    // Element's name\n    const name = ('name' in node.props ? node.props.name || '' : '');\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formList(name, left, top, width, height, parseSelectAndListFieldOptions(node));\n};\n\nconst renderCheckbox = (ctx, node, options) => {\n    if (!node.box)\n        return;\n    const { top, left, width, height } = node.box;\n    // Element's name\n    const name = node.props?.name || '';\n    const fieldSetOptions = options.fieldSets?.at(0);\n    if (!ctx._root.data.AcroForm) {\n        ctx.initForm();\n    }\n    ctx.formCheckbox(name, left, top, width, height, parseCheckboxOptions(ctx, node, fieldSetOptions));\n};\n\nconst isRecursiveNode = (node) => node.type !== P.Text && node.type !== P.Svg;\nconst renderChildren = (ctx, node, options) => {\n    ctx.save();\n    if (node.box) {\n        ctx.translate(node.box.left, node.box.top);\n    }\n    const children = node.children || [];\n    const renderChild = (child) => renderNode(ctx, child, options);\n    children.forEach(renderChild);\n    ctx.restore();\n};\nconst renderFns = {\n    [P.Text]: renderText,\n    [P.Note]: renderNote,\n    [P.Image]: renderImage,\n    [P.FieldSet]: renderFieldSet,\n    [P.TextInput]: renderTextInput,\n    [P.Select]: renderSelect,\n    [P.Checkbox]: renderCheckbox,\n    [P.List]: renderList,\n    [P.Canvas]: renderCanvas,\n    [P.Svg]: renderSvg,\n    [P.Link]: setLink,\n};\nconst cleanUpFns = {\n    [P.FieldSet]: cleanUpFieldSet,\n};\nconst renderNode = (ctx, node, options) => {\n    const overflowHidden = node.style?.overflow === 'hidden';\n    const shouldRenderChildren = isRecursiveNode(node);\n    if (node.type === P.Page)\n        renderPage(ctx, node);\n    ctx.save();\n    if (overflowHidden)\n        clipNode(ctx, node);\n    applyTransformations(ctx, node);\n    renderBackground(ctx, node);\n    renderBorders(ctx, node);\n    const renderFn = renderFns[node.type];\n    if (renderFn)\n        renderFn(ctx, node, options);\n    if (shouldRenderChildren)\n        renderChildren(ctx, node, options);\n    const cleanUpFn = cleanUpFns[node.type];\n    if (cleanUpFn)\n        cleanUpFn(ctx, node, options);\n    setDestination(ctx, node);\n    renderDebug(ctx, node);\n    ctx.restore();\n};\n\nconst addNodeBookmark = (ctx, node, pageNumber, registry) => {\n    if (!node.box)\n        return;\n    if (!node.props)\n        return;\n    if ('bookmark' in node.props && node.props.bookmark) {\n        const bookmark = node.props.bookmark;\n        const { title, parent, expanded, zoom, fit } = bookmark;\n        const outline = registry[parent] || ctx.outline;\n        const top = bookmark.top || node.box.top;\n        const left = bookmark.left || node.box.left;\n        const instance = outline.addItem(title, {\n            pageNumber,\n            expanded,\n            top,\n            left,\n            zoom,\n            fit,\n        });\n        registry[bookmark.ref] = instance;\n    }\n    if (!node.children)\n        return;\n    node.children.forEach((child) => addNodeBookmark(ctx, child, pageNumber, registry));\n};\nconst addBookmarks = (ctx, root) => {\n    const registry = {};\n    const pages = root.children || [];\n    pages.forEach((page, i) => {\n        addNodeBookmark(ctx, page, i, registry);\n    });\n};\n\nconst render = (ctx, doc) => {\n    const pages = doc.children || [];\n    const options = { imageCache: new Map(), fieldSets: [] };\n    pages.forEach((page) => renderNode(ctx, page, options));\n    addBookmarks(ctx, doc);\n    ctx.end();\n    return ctx;\n};\n\nexport { render as default };\n"]},"metadata":{},"sourceType":"module"}