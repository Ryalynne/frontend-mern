{"ast":null,"code":"import _classCallCheck from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as r from \"restructure\";\n\nvar ImageData = /*#__PURE__*/function () {\n  function ImageData() {\n    _classCallCheck(this, ImageData);\n  }\n\n  _createClass(ImageData, [{\n    key: \"decode\",\n    value: function decode(stream) {\n      var buffer = stream.buffer.slice(stream.pos);\n      var length = 0;\n      var i = buffer.indexOf(0xff);\n\n      while (i !== -1) {\n        length = i;\n        var nextByte = buffer[length + 1];\n        var comesRestart = nextByte >= 0xd0 && nextByte <= 0xd7;\n        if (nextByte !== 0x00 && !comesRestart) break;\n        i = buffer.indexOf(0xff, i + 1);\n      }\n\n      stream.pos += length;\n      return buffer.slice(0, length);\n    }\n  }]);\n\n  return ImageData;\n}();\n\nvar SOSComponentSpecification = new r.Struct({\n  scanComponentSelector: r.uint8,\n  entropyCodingTable: new r.Buffer(1)\n});\nvar SOSMarker = {\n  name: function name() {\n    return \"SOS\";\n  },\n  length: r.uint16be,\n  numberOfImageComponents: r.uint8,\n  componentSpecifications: new r.Array(SOSComponentSpecification, function (parent) {\n    return parent.numberOfImageComponents;\n  }),\n  startOfSpectral: r.uint8,\n  endOfSpectral: r.uint8,\n  successiveApproximationBit: new r.Buffer(1),\n  data: new ImageData()\n};\nexport default SOSMarker;","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/jay-peg/src/markers/sos.js"],"names":["r","ImageData","stream","buffer","slice","pos","length","i","indexOf","nextByte","comesRestart","SOSComponentSpecification","Struct","scanComponentSelector","uint8","entropyCodingTable","Buffer","SOSMarker","name","uint16be","numberOfImageComponents","componentSpecifications","Array","parent","startOfSpectral","endOfSpectral","successiveApproximationBit","data"],"mappings":";;AAAA,OAAO,KAAKA,CAAZ,MAAmB,aAAnB;;IAEMC,S;;;;;;;WACJ,gBAAOC,MAAP,EAAe;AACb,UAAMC,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBF,MAAM,CAACG,GAA3B,CAAf;AAEA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,OAAP,CAAe,IAAf,CAAR;;AAEA,aAAOD,CAAC,KAAK,CAAC,CAAd,EAAiB;AACfD,QAAAA,MAAM,GAAGC,CAAT;AAEA,YAAME,QAAQ,GAAGN,MAAM,CAACG,MAAM,GAAG,CAAV,CAAvB;AACA,YAAMI,YAAY,GAAGD,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,IAArD;AAEA,YAAIA,QAAQ,KAAK,IAAb,IAAqB,CAACC,YAA1B,EAAwC;AAExCH,QAAAA,CAAC,GAAGJ,MAAM,CAACK,OAAP,CAAe,IAAf,EAAqBD,CAAC,GAAG,CAAzB,CAAJ;AACD;;AAEDL,MAAAA,MAAM,CAACG,GAAP,IAAcC,MAAd;AAEA,aAAOH,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgBE,MAAhB,CAAP;AACD;;;;;;AAGH,IAAMK,yBAAyB,GAAG,IAAIX,CAAC,CAACY,MAAN,CAAa;AAC7CC,EAAAA,qBAAqB,EAAEb,CAAC,CAACc,KADoB;AAE7CC,EAAAA,kBAAkB,EAAE,IAAIf,CAAC,CAACgB,MAAN,CAAa,CAAb;AAFyB,CAAb,CAAlC;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AAAA,WAAM,KAAN;AAAA,GADU;AAEhBZ,EAAAA,MAAM,EAAEN,CAAC,CAACmB,QAFM;AAGhBC,EAAAA,uBAAuB,EAAEpB,CAAC,CAACc,KAHX;AAIhBO,EAAAA,uBAAuB,EAAE,IAAIrB,CAAC,CAACsB,KAAN,CACvBX,yBADuB,EAEvB,UAACY,MAAD;AAAA,WAAYA,MAAM,CAACH,uBAAnB;AAAA,GAFuB,CAJT;AAQhBI,EAAAA,eAAe,EAAExB,CAAC,CAACc,KARH;AAShBW,EAAAA,aAAa,EAAEzB,CAAC,CAACc,KATD;AAUhBY,EAAAA,0BAA0B,EAAE,IAAI1B,CAAC,CAACgB,MAAN,CAAa,CAAb,CAVZ;AAWhBW,EAAAA,IAAI,EAAE,IAAI1B,SAAJ;AAXU,CAAlB;AAcA,eAAegB,SAAf","sourcesContent":["import * as r from \"restructure\";\n\nclass ImageData {\n  decode(stream) {\n    const buffer = stream.buffer.slice(stream.pos);\n\n    let length = 0;\n    let i = buffer.indexOf(0xff);\n\n    while (i !== -1) {\n      length = i;\n\n      const nextByte = buffer[length + 1];\n      const comesRestart = nextByte >= 0xd0 && nextByte <= 0xd7;\n\n      if (nextByte !== 0x00 && !comesRestart) break;\n\n      i = buffer.indexOf(0xff, i + 1);\n    }\n\n    stream.pos += length;\n\n    return buffer.slice(0, length);\n  }\n}\n\nconst SOSComponentSpecification = new r.Struct({\n  scanComponentSelector: r.uint8,\n  entropyCodingTable: new r.Buffer(1),\n});\n\nconst SOSMarker = {\n  name: () => \"SOS\",\n  length: r.uint16be,\n  numberOfImageComponents: r.uint8,\n  componentSpecifications: new r.Array(\n    SOSComponentSpecification,\n    (parent) => parent.numberOfImageComponents,\n  ),\n  startOfSpectral: r.uint8,\n  endOfSpectral: r.uint8,\n  successiveApproximationBit: new r.Buffer(1),\n  data: new ImageData(),\n};\n\nexport default SOSMarker;\n"]},"metadata":{},"sourceType":"module"}