{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Printing\\\\EmployeePDF.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\"; // Styles for PDF\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    padding: 20\n  },\n  header: {\n    fontSize: 18,\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontWeight: \"bold\"\n  },\n  table: {\n    display: \"table\",\n    width: \"100%\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: \"#000\",\n    marginBottom: 10\n  },\n  tableRow: {\n    flexDirection: \"row\"\n  },\n  tableCell: {\n    flex: 1,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 10\n  }\n}); // User PDF Document Component\n\nconst EmployeePDF = _ref => {\n  let {\n    users\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.header,\n        children: \"Employee Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableRow,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.salary ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            })}` : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}; // ✅ Make sure to export correctly\n\n\n_c = EmployeePDF;\nexport default EmployeePDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeePDF\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Printing/EmployeePDF.js"],"names":["React","Page","Text","View","Document","StyleSheet","styles","create","page","padding","header","fontSize","textAlign","marginBottom","fontWeight","table","display","width","borderStyle","borderWidth","borderColor","tableRow","flexDirection","tableCell","flex","EmployeePDF","users","map","user","id","full_name","email","Job_Title","salary","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Styles for PDF\r\nconst styles = StyleSheet.create({\r\n  page: { padding: 20 },\r\n  header: {\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontWeight: \"bold\",\r\n  },\r\n  table: {\r\n    display: \"table\",\r\n    width: \"100%\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n    marginBottom: 10,\r\n  },\r\n  tableRow: { flexDirection: \"row\" },\r\n  tableCell: {\r\n    flex: 1,\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    padding: 5,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\n// User PDF Document Component\r\nconst EmployeePDF = ({ users }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <Text style={styles.header}>Employee Report</Text>\r\n      <View style={styles.table}>\r\n        <View style={styles.tableRow}>\r\n          <Text style={styles.tableCell}>ID</Text>\r\n          <Text style={styles.tableCell}>Full Name</Text>\r\n          <Text style={styles.tableCell}>Email</Text>\r\n          <Text style={styles.tableCell}>Job Title</Text>\r\n          <Text style={styles.tableCell}>Salary</Text>\r\n        </View>\r\n        {users.map((user) => (\r\n          <View style={styles.tableRow} key={user.id}>\r\n            <Text style={styles.tableCell}>{user.id}</Text>\r\n            <Text style={styles.tableCell}>{user.full_name}</Text>\r\n            <Text style={styles.tableCell}>{user.email}</Text>\r\n            <Text style={styles.tableCell}>{user.Job_Title}</Text>\r\n            <Text style={styles.tableCell}>\r\n              {user.salary\r\n                ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                    minimumFractionDigits: 2,\r\n                  })}`\r\n                : \"\"}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\n// ✅ Make sure to export correctly\r\nexport default EmployeePDF;\r\n"]},"metadata":{},"sourceType":"module"}