{"ast":null,"code":"var isBigEndian = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12;\n\nvar swap = function swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nvar swap32 = function swap32(array) {\n  var len = array.length;\n\n  for (var i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nvar swap32LE = function swap32LE(array) {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/unicode-trie/swap.js"],"names":["isBigEndian","Uint8Array","Uint32Array","buffer","swap","b","n","m","i","swap32","array","len","length","swap32LE","module","exports"],"mappings":"AAAA,IAAMA,WAAW,GAAI,IAAIC,UAAJ,CAAe,IAAIC,WAAJ,CAAgB,CAAC,UAAD,CAAhB,EAA8BC,MAA7C,EAAqD,CAArD,MAA4D,IAAjF;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAa;AACxB,MAAIC,CAAC,GAAGH,CAAC,CAACC,CAAD,CAAT;AACAD,EAAAA,CAAC,CAACC,CAAD,CAAD,GAAOD,CAAC,CAACE,CAAD,CAAR;AACAF,EAAAA,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAP;AACD,CAJD;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAlB;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,GAApB,EAAyBH,CAAC,IAAI,CAA9B,EAAiC;AAC/BJ,IAAAA,IAAI,CAACM,KAAD,EAAQF,CAAR,EAAWA,CAAC,GAAG,CAAf,CAAJ;AACAJ,IAAAA,IAAI,CAACM,KAAD,EAAQF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,CAAJ;AACD;AACF,CAND;;AAQA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAAH,KAAK,EAAI;AACxB,MAAIV,WAAJ,EAAiB;AACfS,IAAAA,MAAM,CAACC,KAAD,CAAN;AACD;AACF,CAJD;;AAMAI,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,QAAQ,EAAEA;AADK,CAAjB","sourcesContent":["const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n"]},"metadata":{},"sourceType":"script"}