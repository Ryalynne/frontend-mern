{"ast":null,"code":"import _classCallCheck from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as r from \"restructure\";\nimport { readUInt8, readUInt16BE, readUInt16LE, readUInt32BE, readUInt32LE, uint8ArrayToHexString, uint8ArrayToString, readInt32BE, readInt32LE } from \"./utils.js\";\nvar tags = {\n  ifd: {\n    \"010e\": \"imageDescription\",\n    \"010f\": \"make\",\n    \"011a\": \"xResolution\",\n    \"011b\": \"yResolution\",\n    \"011c\": \"planarConfiguration\",\n    \"012d\": \"transferFunction\",\n    \"013b\": \"artist\",\n    \"013e\": \"whitePoint\",\n    \"013f\": \"primaryChromaticities\",\n    \"0100\": \"imageWidth\",\n    \"0101\": \"imageHeight\",\n    \"0102\": \"bitsPerSample\",\n    \"0103\": \"compression\",\n    \"0106\": \"photometricInterpretation\",\n    \"0110\": \"model\",\n    \"0111\": \"stripOffsets\",\n    \"0112\": \"orientation\",\n    \"0115\": \"samplesPerPixel\",\n    \"0116\": \"rowsPerStrip\",\n    \"0117\": \"stripByteCounts\",\n    \"0128\": \"resolutionUnit\",\n    \"0131\": \"software\",\n    \"0132\": \"dateTime\",\n    \"0201\": \"jpegInterchangeFormat\",\n    \"0202\": \"jpegInterchangeFormatLength\",\n    \"0211\": \"ycbCrCoefficients\",\n    \"0212\": \"ycbCrSubSampling\",\n    \"0213\": \"ycbCrPositioning\",\n    \"0214\": \"referenceBlackWhite\",\n    \"829a\": \"exposureTime\",\n    \"829d\": \"fNumber\",\n    \"920a\": \"focalLength\",\n    \"927c\": \"makerNote\",\n    8298: \"copyright\",\n    8769: \"exifIFDPointer\",\n    8822: \"exposureProgram\",\n    8824: \"spectralSensitivity\",\n    8825: \"gpsInfoIFDPointer\",\n    8827: \"photographicSensitivity\",\n    8828: \"oecf\",\n    8830: \"sensitivityType\",\n    8831: \"standardOutputSensitivity\",\n    8832: \"recommendedExposureIndex\",\n    8833: \"isoSpeed\",\n    8834: \"isoSpeedLatitudeyyy\",\n    8835: \"isoSpeedLatitudezzz\",\n    9000: \"exifVersion\",\n    9003: \"dateTimeOriginal\",\n    9004: \"dateTimeDigitized\",\n    9101: \"componentsConfiguration\",\n    9102: \"compressedBitsPerPixel\",\n    9201: \"shutterSpeedValue\",\n    9202: \"apertureValue\",\n    9203: \"brightnessValue\",\n    9204: \"exposureBiasValue\",\n    9205: \"maxApertureValue\",\n    9206: \"subjectDistance\",\n    9207: \"meteringMode\",\n    9208: \"lightSource\",\n    9209: \"flash\",\n    9214: \"subjectArea\",\n    9286: \"userComment\",\n    9290: \"subSecTime\",\n    9291: \"subSecTimeOriginal\",\n    9292: \"subSecTimeDigitized\",\n    a000: \"flashpixVersion\",\n    a001: \"colorSpace\",\n    a002: \"pixelXDimension\",\n    a003: \"pixelYDimension\",\n    a004: \"relatedSoundFile\",\n    a005: \"interoperabilityIFDPointer\",\n    a20b: \"flashEnergy\",\n    a20c: \"spatialFrequencyResponse\",\n    a20e: \"focalPlaneXResolution\",\n    a20f: \"focalPlaneYResolution\",\n    a40a: \"sharpness\",\n    a40b: \"deviceSettingDescription\",\n    a40c: \"subjectDistanceRange\",\n    a210: \"focalPlaneResolutionUnit\",\n    a214: \"subjectLocation\",\n    a215: \"exposureIndex\",\n    a217: \"sensingMethod\",\n    a300: \"fileSource\",\n    a301: \"sceneType\",\n    a302: \"cfaPattern\",\n    a401: \"customRendered\",\n    a402: \"exposureMode\",\n    a403: \"whiteBalance\",\n    a404: \"digitalZoomRatio\",\n    a405: \"focalLengthIn35mmFilm\",\n    a406: \"sceneCaptureType\",\n    a407: \"gainControl\",\n    a408: \"contrast\",\n    a409: \"saturation\",\n    a420: \"imageUniqueID\",\n    a430: \"cameraOwnerName\",\n    a431: \"bodySerialNumber\",\n    a432: \"lensSpecification\",\n    a433: \"lensMake\",\n    a434: \"lensModel\",\n    a435: \"lensSerialNumber\",\n    a500: \"gamma\"\n  },\n  gps: {\n    \"0000\": \"gpsVersionID\",\n    \"0001\": \"gpsLatitudeRef\",\n    \"0002\": \"gpsLatitude\",\n    \"0003\": \"gpsLongitudeRef\",\n    \"0004\": \"gpsLongitude\",\n    \"0005\": \"gpsAltitudeRef\",\n    \"0006\": \"gpsAltitude\",\n    \"0007\": \"gpsTimeStamp\",\n    \"0008\": \"gpsSatellites\",\n    \"0009\": \"gpsStatus\",\n    \"000a\": \"gpsMeasureMode\",\n    \"000b\": \"gpsDOP\",\n    \"000c\": \"gpsSpeedRef\",\n    \"000d\": \"gpsSpeed\",\n    \"000e\": \"gpsTrackRef\",\n    \"000f\": \"gpsTrack\",\n    \"0010\": \"gpsImgDirectionRef\",\n    \"0011\": \"gpsImgDirection\",\n    \"0012\": \"gpsMapDatum\",\n    \"0013\": \"gpsDestLatitudeRef\",\n    \"0014\": \"gpsDestLatitude\",\n    \"0015\": \"gpsDestLongitudeRef\",\n    \"0016\": \"gpsDestLongitude\",\n    \"0017\": \"gpsDestBearingRef\",\n    \"0018\": \"gpsDestBearing\",\n    \"0019\": \"gpsDestDistanceRef\",\n    \"001a\": \"gpsDestDistance\",\n    \"001b\": \"gpsProcessingMethod\",\n    \"001c\": \"gpsAreaInformation\",\n    \"001d\": \"gpsDateStamp\",\n    \"001e\": \"gpsDifferential\",\n    \"001f\": \"gpsHPositioningError\"\n  }\n};\n\nvar IDFEntries = /*#__PURE__*/function () {\n  function IDFEntries(bigEndian) {\n    _classCallCheck(this, IDFEntries);\n\n    this.bigEndian = bigEndian;\n    this.bytes = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8];\n  }\n\n  _createClass(IDFEntries, [{\n    key: \"_getTagValue\",\n    value: function _getTagValue(dataValue, dataFormat, componentsNumber) {\n      switch (dataFormat) {\n        case 2:\n          return dataValue.toString(\"ascii\").replace(/\\0+$/, \"\");\n\n        case 129:\n          return dataValue.toString(\"utf8\").replace(/\\0+$/, \"\");\n\n        case 7:\n          return \"0x\" + dataValue.toString(\"hex\");\n\n        default:\n          return this._getTagValueForNumericalData(dataValue, dataFormat, componentsNumber);\n      }\n    }\n  }, {\n    key: \"_getTagValueForNumericalData\",\n    value: function _getTagValueForNumericalData(dataValue, dataFormat, componentsNumber) {\n      var tagValue = [];\n      var componentsBytes = this.bytes[dataFormat];\n\n      for (var i = 0; i < componentsNumber; i += 1) {\n        tagValue.push(this._getSingleTagValueForNumericalData(dataValue, dataFormat, i * componentsBytes));\n      }\n\n      return tagValue.length === 1 ? tagValue[0] : tagValue;\n    }\n  }, {\n    key: \"_getSingleTagValueForNumericalData\",\n    value: function _getSingleTagValueForNumericalData(dataValue, dataFormat, pos) {\n      var _this = this;\n\n      var uint16 = function uint16(pos) {\n        return _this.bigEndian ? readUInt16BE(dataValue, pos) : readUInt16LE(dataValue, pos);\n      };\n\n      var uint32 = function uint32(pos) {\n        return _this.bigEndian ? readUInt32BE(dataValue, pos) : readUInt32LE(dataValue, pos);\n      };\n\n      var int32 = function int32(pos) {\n        return _this.bigEndian ? readInt32BE(dataValue, pos) : readInt32LE(dataValue, pos);\n      };\n\n      switch (dataFormat) {\n        case 1:\n          return readUInt8(dataValue, pos);\n\n        case 3:\n          return uint16(pos);\n\n        case 4:\n          return uint32(pos);\n\n        case 5:\n          return uint32(pos) / uint32(pos + 4);\n\n        case 9:\n          return int32(pos);\n\n        case 10:\n          {\n            return int32(pos) / int32(pos + 4);\n          }\n      }\n    }\n  }, {\n    key: \"_decodeIDFEntries\",\n    value: function _decodeIDFEntries(buffer, tags, offset) {\n      var _this2 = this;\n\n      var log = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var pos = 2 + offset;\n      var entries = {};\n\n      var uint16 = function uint16(pos) {\n        return _this2.bigEndian ? readUInt16BE(buffer, pos) : readUInt16LE(buffer, pos);\n      };\n\n      var uint32 = function uint32(pos) {\n        return _this2.bigEndian ? readUInt32BE(buffer, pos) : readUInt32LE(buffer, pos);\n      };\n\n      var numberOfEntries = uint16(offset);\n\n      for (var i = 0; i < numberOfEntries; i++) {\n        var tagAddress = buffer.slice(pos, pos + 2);\n        var dataFormat = uint16(pos + 2);\n        var componentsNumber = uint32(pos + 4);\n        var componentsBytes = this.bytes[dataFormat];\n        var dataLength = componentsNumber * componentsBytes;\n        var dataValue = buffer.slice(pos + 8, pos + 12);\n\n        if (dataLength > 4) {\n          var dataOffset = this.bigEndian ? readUInt32BE(dataValue, 0) : readUInt32LE(dataValue, 0);\n          dataValue = buffer.slice(dataOffset, dataOffset + dataLength);\n        }\n\n        var tagValue = this._getTagValue(dataValue, dataFormat, componentsNumber);\n\n        var tagNumber = this.bigEndian ? uint8ArrayToHexString(tagAddress) : uint8ArrayToHexString(tagAddress.reverse());\n        var tagName = tags[tagNumber];\n        entries[tagName] = tagValue;\n        pos += 12;\n      }\n\n      return entries;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var buffer = stream.buffer.slice(stream.pos - 8);\n      var offsetToFirstIFD = parent.offsetToFirstIFD;\n\n      if (offsetToFirstIFD > buffer.length) {\n        stream.pos += parent.parent.length - 16;\n        return {};\n      }\n\n      var entries = this._decodeIDFEntries(buffer, tags.ifd, offsetToFirstIFD);\n\n      var exifIFDPointer = entries.exifIFDPointer,\n          gpsInfoIFDPointer = entries.gpsInfoIFDPointer;\n\n      if (exifIFDPointer) {\n        entries.subExif = this._decodeIDFEntries(buffer, tags.ifd, exifIFDPointer);\n      }\n\n      if (gpsInfoIFDPointer) {\n        var gps = gpsInfoIFDPointer;\n        entries.gpsInfo = this._decodeIDFEntries(buffer, tags.gps, gps, true);\n      }\n\n      stream.pos += parent.parent.length - 16;\n      return entries;\n    }\n  }]);\n\n  return IDFEntries;\n}();\n\nvar IFDData = function IFDData(bigEndian) {\n  var uint16 = bigEndian ? r.uint16be : r.uint16le;\n  var uint32 = bigEndian ? r.uint32be : r.uint32le;\n  return new r.Struct({\n    fortyTwo: uint16,\n    offsetToFirstIFD: uint32,\n    entries: new IDFEntries(bigEndian)\n  });\n};\n\nvar TIFFHeader = /*#__PURE__*/function () {\n  function TIFFHeader() {\n    _classCallCheck(this, TIFFHeader);\n  }\n\n  _createClass(TIFFHeader, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var byteOrder = uint8ArrayToString(stream.buffer.slice(stream.pos, stream.pos + 2));\n      var bigEndian = byteOrder === \"MM\";\n      stream.pos += 2;\n      var data = IFDData(bigEndian).decode(stream, parent);\n      return data.entries;\n    }\n  }]);\n\n  return TIFFHeader;\n}();\n\nvar EXIFMarker = {\n  name: function name() {\n    return \"EXIF\";\n  },\n  length: r.uint16be,\n  identifier: new r.String(6),\n  entries: new TIFFHeader()\n};\nexport default EXIFMarker;","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/jay-peg/src/markers/exif.js"],"names":["r","readUInt8","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","uint8ArrayToHexString","uint8ArrayToString","readInt32BE","readInt32LE","tags","ifd","a000","a001","a002","a003","a004","a005","a20b","a20c","a20e","a20f","a40a","a40b","a40c","a210","a214","a215","a217","a300","a301","a302","a401","a402","a403","a404","a405","a406","a407","a408","a409","a420","a430","a431","a432","a433","a434","a435","a500","gps","IDFEntries","bigEndian","bytes","dataValue","dataFormat","componentsNumber","toString","replace","_getTagValueForNumericalData","tagValue","componentsBytes","i","push","_getSingleTagValueForNumericalData","length","pos","uint16","uint32","int32","buffer","offset","log","entries","numberOfEntries","tagAddress","slice","dataLength","dataOffset","_getTagValue","tagNumber","reverse","tagName","stream","parent","offsetToFirstIFD","_decodeIDFEntries","exifIFDPointer","gpsInfoIFDPointer","subExif","gpsInfo","IFDData","uint16be","uint16le","uint32be","uint32le","Struct","fortyTwo","TIFFHeader","byteOrder","data","decode","EXIFMarker","name","identifier","String"],"mappings":"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","sourcesContent":["import * as r from \"restructure\";\nimport {\n  readUInt8,\n  readUInt16BE,\n  readUInt16LE,\n  readUInt32BE,\n  readUInt32LE,\n  uint8ArrayToHexString,\n  uint8ArrayToString,\n  readInt32BE,\n  readInt32LE,\n} from \"./utils.js\";\n\nconst tags = {\n  ifd: {\n    \"010e\": \"imageDescription\",\n    \"010f\": \"make\",\n    \"011a\": \"xResolution\",\n    \"011b\": \"yResolution\",\n    \"011c\": \"planarConfiguration\",\n    \"012d\": \"transferFunction\",\n    \"013b\": \"artist\",\n    \"013e\": \"whitePoint\",\n    \"013f\": \"primaryChromaticities\",\n    \"0100\": \"imageWidth\",\n    \"0101\": \"imageHeight\",\n    \"0102\": \"bitsPerSample\",\n    \"0103\": \"compression\",\n    \"0106\": \"photometricInterpretation\",\n    \"0110\": \"model\",\n    \"0111\": \"stripOffsets\",\n    \"0112\": \"orientation\",\n    \"0115\": \"samplesPerPixel\",\n    \"0116\": \"rowsPerStrip\",\n    \"0117\": \"stripByteCounts\",\n    \"0128\": \"resolutionUnit\",\n    \"0131\": \"software\",\n    \"0132\": \"dateTime\",\n    \"0201\": \"jpegInterchangeFormat\",\n    \"0202\": \"jpegInterchangeFormatLength\",\n    \"0211\": \"ycbCrCoefficients\",\n    \"0212\": \"ycbCrSubSampling\",\n    \"0213\": \"ycbCrPositioning\",\n    \"0214\": \"referenceBlackWhite\",\n    \"829a\": \"exposureTime\",\n    \"829d\": \"fNumber\",\n    \"920a\": \"focalLength\",\n    \"927c\": \"makerNote\",\n    8298: \"copyright\",\n    8769: \"exifIFDPointer\",\n    8822: \"exposureProgram\",\n    8824: \"spectralSensitivity\",\n    8825: \"gpsInfoIFDPointer\",\n    8827: \"photographicSensitivity\",\n    8828: \"oecf\",\n    8830: \"sensitivityType\",\n    8831: \"standardOutputSensitivity\",\n    8832: \"recommendedExposureIndex\",\n    8833: \"isoSpeed\",\n    8834: \"isoSpeedLatitudeyyy\",\n    8835: \"isoSpeedLatitudezzz\",\n    9000: \"exifVersion\",\n    9003: \"dateTimeOriginal\",\n    9004: \"dateTimeDigitized\",\n    9101: \"componentsConfiguration\",\n    9102: \"compressedBitsPerPixel\",\n    9201: \"shutterSpeedValue\",\n    9202: \"apertureValue\",\n    9203: \"brightnessValue\",\n    9204: \"exposureBiasValue\",\n    9205: \"maxApertureValue\",\n    9206: \"subjectDistance\",\n    9207: \"meteringMode\",\n    9208: \"lightSource\",\n    9209: \"flash\",\n    9214: \"subjectArea\",\n    9286: \"userComment\",\n    9290: \"subSecTime\",\n    9291: \"subSecTimeOriginal\",\n    9292: \"subSecTimeDigitized\",\n    a000: \"flashpixVersion\",\n    a001: \"colorSpace\",\n    a002: \"pixelXDimension\",\n    a003: \"pixelYDimension\",\n    a004: \"relatedSoundFile\",\n    a005: \"interoperabilityIFDPointer\",\n    a20b: \"flashEnergy\",\n    a20c: \"spatialFrequencyResponse\",\n    a20e: \"focalPlaneXResolution\",\n    a20f: \"focalPlaneYResolution\",\n    a40a: \"sharpness\",\n    a40b: \"deviceSettingDescription\",\n    a40c: \"subjectDistanceRange\",\n    a210: \"focalPlaneResolutionUnit\",\n    a214: \"subjectLocation\",\n    a215: \"exposureIndex\",\n    a217: \"sensingMethod\",\n    a300: \"fileSource\",\n    a301: \"sceneType\",\n    a302: \"cfaPattern\",\n    a401: \"customRendered\",\n    a402: \"exposureMode\",\n    a403: \"whiteBalance\",\n    a404: \"digitalZoomRatio\",\n    a405: \"focalLengthIn35mmFilm\",\n    a406: \"sceneCaptureType\",\n    a407: \"gainControl\",\n    a408: \"contrast\",\n    a409: \"saturation\",\n    a420: \"imageUniqueID\",\n    a430: \"cameraOwnerName\",\n    a431: \"bodySerialNumber\",\n    a432: \"lensSpecification\",\n    a433: \"lensMake\",\n    a434: \"lensModel\",\n    a435: \"lensSerialNumber\",\n    a500: \"gamma\",\n  },\n  gps: {\n    \"0000\": \"gpsVersionID\",\n    \"0001\": \"gpsLatitudeRef\",\n    \"0002\": \"gpsLatitude\",\n    \"0003\": \"gpsLongitudeRef\",\n    \"0004\": \"gpsLongitude\",\n    \"0005\": \"gpsAltitudeRef\",\n    \"0006\": \"gpsAltitude\",\n    \"0007\": \"gpsTimeStamp\",\n    \"0008\": \"gpsSatellites\",\n    \"0009\": \"gpsStatus\",\n    \"000a\": \"gpsMeasureMode\",\n    \"000b\": \"gpsDOP\",\n    \"000c\": \"gpsSpeedRef\",\n    \"000d\": \"gpsSpeed\",\n    \"000e\": \"gpsTrackRef\",\n    \"000f\": \"gpsTrack\",\n    \"0010\": \"gpsImgDirectionRef\",\n    \"0011\": \"gpsImgDirection\",\n    \"0012\": \"gpsMapDatum\",\n    \"0013\": \"gpsDestLatitudeRef\",\n    \"0014\": \"gpsDestLatitude\",\n    \"0015\": \"gpsDestLongitudeRef\",\n    \"0016\": \"gpsDestLongitude\",\n    \"0017\": \"gpsDestBearingRef\",\n    \"0018\": \"gpsDestBearing\",\n    \"0019\": \"gpsDestDistanceRef\",\n    \"001a\": \"gpsDestDistance\",\n    \"001b\": \"gpsProcessingMethod\",\n    \"001c\": \"gpsAreaInformation\",\n    \"001d\": \"gpsDateStamp\",\n    \"001e\": \"gpsDifferential\",\n    \"001f\": \"gpsHPositioningError\",\n  },\n};\n\nclass IDFEntries {\n  constructor(bigEndian) {\n    this.bigEndian = bigEndian;\n    this.bytes = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8];\n  }\n\n  _getTagValue(dataValue, dataFormat, componentsNumber) {\n    switch (dataFormat) {\n      case 2:\n        return dataValue.toString(\"ascii\").replace(/\\0+$/, \"\");\n      case 129:\n        return dataValue.toString(\"utf8\").replace(/\\0+$/, \"\");\n      case 7:\n        return \"0x\" + dataValue.toString(\"hex\");\n      default:\n        return this._getTagValueForNumericalData(dataValue, dataFormat, componentsNumber);\n    }\n  }\n\n  _getTagValueForNumericalData(dataValue, dataFormat, componentsNumber) {\n    const tagValue = [];\n    const componentsBytes = this.bytes[dataFormat];\n    for (let i = 0; i < componentsNumber; i += 1) {\n      tagValue.push(this._getSingleTagValueForNumericalData(dataValue, dataFormat, i * componentsBytes));\n    }\n    return tagValue.length === 1 ? tagValue[0] : tagValue;\n  }\n\n  _getSingleTagValueForNumericalData(dataValue, dataFormat, pos) {\n    const uint16 = (pos) =>\n      this.bigEndian\n        ? readUInt16BE(dataValue, pos)\n        : readUInt16LE(dataValue, pos);\n\n    const uint32 = (pos) =>\n      this.bigEndian\n        ? readUInt32BE(dataValue, pos)\n        : readUInt32LE(dataValue, pos);\n\n    const int32 = (pos) =>\n      this.bigEndian\n        ? readInt32BE(dataValue, pos)\n        : readInt32LE(dataValue, pos);\n\n    switch (dataFormat) {\n      case 1:\n        return readUInt8(dataValue, pos)\n      case 3:\n        return uint16(pos);\n      case 4:\n        return uint32(pos);\n      case 5:\n        return uint32(pos) / uint32(pos + 4);\n      case 9:\n        return int32(pos);\n      case 10: {\n        return int32(pos) / int32(pos + 4);\n      }\n    }\n  }\n\n  _decodeIDFEntries(buffer, tags, offset, log = false) {\n    let pos = 2 + offset;\n\n    const entries = {};\n\n    const uint16 = (pos) =>\n      this.bigEndian ? readUInt16BE(buffer, pos) : readUInt16LE(buffer, pos);\n\n    const uint32 = (pos) =>\n      this.bigEndian ? readUInt32BE(buffer, pos) : readUInt32LE(buffer, pos);\n\n    const numberOfEntries = uint16(offset);\n\n    for (let i = 0; i < numberOfEntries; i++) {\n      const tagAddress = buffer.slice(pos, pos + 2);\n      const dataFormat = uint16(pos + 2);\n      const componentsNumber = uint32(pos + 4);\n      const componentsBytes = this.bytes[dataFormat];\n      const dataLength = componentsNumber * componentsBytes;\n\n      let dataValue = buffer.slice(pos + 8, pos + 12);\n\n      if (dataLength > 4) {\n        const dataOffset = this.bigEndian\n          ? readUInt32BE(dataValue, 0)\n          : readUInt32LE(dataValue, 0);\n\n        dataValue = buffer.slice(dataOffset, dataOffset + dataLength);\n      }\n\n      const tagValue = this._getTagValue(dataValue, dataFormat, componentsNumber);\n\n      const tagNumber = this.bigEndian\n        ? uint8ArrayToHexString(tagAddress)\n        : uint8ArrayToHexString(tagAddress.reverse());\n\n      const tagName = tags[tagNumber];\n\n      entries[tagName] = tagValue;\n\n      pos += 12;\n    }\n\n    return entries;\n  }\n\n  decode(stream, parent) {\n    const buffer = stream.buffer.slice(stream.pos - 8);\n    const offsetToFirstIFD = parent.offsetToFirstIFD;\n\n    if (offsetToFirstIFD > buffer.length) {\n      stream.pos += parent.parent.length - 16;\n      return {};\n    }\n\n    const entries = this._decodeIDFEntries(buffer, tags.ifd, offsetToFirstIFD);\n    const { exifIFDPointer, gpsInfoIFDPointer } = entries;\n\n    if (exifIFDPointer) {\n      entries.subExif = this._decodeIDFEntries(\n        buffer,\n        tags.ifd,\n        exifIFDPointer,\n      );\n    }\n\n    if (gpsInfoIFDPointer) {\n      const gps = gpsInfoIFDPointer;\n      entries.gpsInfo = this._decodeIDFEntries(buffer, tags.gps, gps, true);\n    }\n\n    stream.pos += parent.parent.length - 16;\n\n    return entries;\n  }\n}\n\nconst IFDData = (bigEndian) => {\n  const uint16 = bigEndian ? r.uint16be : r.uint16le;\n  const uint32 = bigEndian ? r.uint32be : r.uint32le;\n\n  return new r.Struct({\n    fortyTwo: uint16,\n    offsetToFirstIFD: uint32,\n    entries: new IDFEntries(bigEndian),\n  });\n};\n\nclass TIFFHeader {\n  decode(stream, parent) {\n    const byteOrder = uint8ArrayToString(\n      stream.buffer.slice(stream.pos, stream.pos + 2),\n    );\n\n    const bigEndian = byteOrder === \"MM\";\n\n    stream.pos += 2;\n\n    const data = IFDData(bigEndian).decode(stream, parent);\n\n    return data.entries;\n  }\n}\n\nconst EXIFMarker = {\n  name: () => \"EXIF\",\n  length: r.uint16be,\n  identifier: new r.String(6),\n  entries: new TIFFHeader(),\n};\n\nexport default EXIFMarker;\n"]},"metadata":{},"sourceType":"module"}