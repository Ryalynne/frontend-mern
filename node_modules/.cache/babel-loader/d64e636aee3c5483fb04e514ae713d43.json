{"ast":null,"code":"import _classCallCheck from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\n\nvar StringT = /*#__PURE__*/function (_Base) {\n  _inherits(StringT, _Base);\n\n  var _super = _createSuper(StringT);\n\n  function StringT(length) {\n    var _this;\n\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n\n    _classCallCheck(this, StringT);\n\n    _this = _super.call(this);\n    _this.length = length;\n    _this.encoding = encoding;\n    return _this;\n  }\n\n  _createClass(StringT, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var length, pos;\n      var encoding = this.encoding;\n\n      if (typeof encoding === 'function') {\n        encoding = encoding.call(parent, parent) || 'ascii';\n      }\n\n      var width = encodingWidth(encoding);\n\n      if (this.length != null) {\n        length = utils.resolveLength(this.length, stream, parent);\n      } else {\n        var buffer;\n        buffer = stream.buffer;\n        length = stream.length;\n        pos = stream.pos;\n\n        while (pos < length - width + 1 && (buffer[pos] !== 0x00 || width === 2 && buffer[pos + 1] !== 0x00)) {\n          pos += width;\n        }\n\n        length = pos - stream.pos;\n      }\n\n      var string = stream.readString(length, encoding);\n\n      if (this.length == null && stream.pos < stream.length) {\n        stream.pos += width;\n      }\n\n      return string;\n    }\n  }, {\n    key: \"size\",\n    value: function size(val, parent) {\n      // Use the defined value if no value was given\n      if (val === undefined || val === null) {\n        return utils.resolveLength(this.length, null, parent);\n      }\n\n      var encoding = this.encoding;\n\n      if (typeof encoding === 'function') {\n        encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n      }\n\n      if (encoding === 'utf16be') {\n        encoding = 'utf16le';\n      }\n\n      var size = byteLength(val, encoding);\n\n      if (this.length instanceof NumberT) {\n        size += this.length.size();\n      }\n\n      if (this.length == null) {\n        size += encodingWidth(encoding);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, val, parent) {\n      var encoding = this.encoding;\n\n      if (typeof encoding === 'function') {\n        encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n      }\n\n      if (this.length instanceof NumberT) {\n        this.length.encode(stream, byteLength(val, encoding));\n      }\n\n      stream.writeString(val, encoding);\n\n      if (this.length == null) {\n        return encodingWidth(encoding) == 2 ? stream.writeUInt16LE(0x0000) : stream.writeUInt8(0x00);\n      }\n    }\n  }]);\n\n  return StringT;\n}(Base);\n\nfunction encodingWidth(encoding) {\n  switch (encoding) {\n    case 'ascii':\n    case 'utf8':\n      // utf8 is a byte-based encoding for zero-term string\n      return 1;\n\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf-16be':\n    case 'utf-16le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return 2;\n\n    default:\n      //TODO: assume all other encodings are 1-byters\n      //throw new Error('Unknown encoding ' + encoding);\n      return 1;\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n\n    case 'utf8':\n      var len = 0;\n\n      for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          var c2 = string.charCodeAt(++i);\n\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n\n      return len;\n\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport { StringT as String };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/node_modules/restructure/src/String.js"],"names":["Base","Number","NumberT","utils","StringT","length","encoding","stream","parent","pos","call","width","encodingWidth","resolveLength","buffer","string","readString","val","undefined","size","byteLength","encode","writeString","writeUInt16LE","writeUInt8","len","i","c","charCodeAt","c2","Error","String"],"mappings":"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","sourcesContent":["import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n    let width = encodingWidth(encoding);\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length - width + 1) &&\n        (buffer[pos] !== 0x00 ||\n        (width === 2 && buffer[pos+1] !== 0x00)\n        )) {\n        pos += width;\n      }\n\n      length = pos - stream.pos;\n    }\n\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos+=width;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (val === undefined || val === null) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size += encodingWidth(encoding);\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return encodingWidth(encoding) == 2 ?\n        stream.writeUInt16LE(0x0000) :\n        stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction encodingWidth(encoding) {\n  switch(encoding) {\n    case 'ascii':\n    case 'utf8': // utf8 is a byte-based encoding for zero-term string\n      return 1;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf-16be':\n    case 'utf-16le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return 2;\n    default:\n      //TODO: assume all other encodings are 1-byters\n      //throw new Error('Unknown encoding ' + encoding);\n      return 1;\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n"]},"metadata":{},"sourceType":"module"}