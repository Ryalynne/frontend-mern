{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${isDarkMode ? \"is-dark\" : \"is-light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-brand\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-item\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `title is-4 ${isDarkMode ? \"has-text-white\" : \"has-text-black\"}`,\n          children: \"MERN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-start\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/JobTitleList\",\n          className: _ref => {\n            let {\n              isActive\n            } = _ref;\n            return isActive ? \"navbar-item is-active\" : \"navbar-item\";\n          },\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/SalaryList\",\n          className: _ref2 => {\n            let {\n              isActive\n            } = _ref2;\n            return isActive ? \"navbar-item is-active\" : \"navbar-item\";\n          },\n          children: \"Job Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          className: _ref3 => {\n            let {\n              isActive\n            } = _ref3;\n            return isActive ? \"navbar-item is-active\" : \"navbar-item\";\n          },\n          children: \"Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-end mt-3 mr-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-small is-primary is-light\",\n          onClick: toggleTheme,\n          children: isDarkMode ? \"  Light Mode\" : \" Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"X19l+XQxfs/NBL0ht2VREPaS1+w=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Navbar.js"],"names":["useState","NavLink","Link","Navbar","isDarkMode","setIsDarkMode","toggleTheme","prevMode","isActive"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,kBAA9B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAEE,QAAD,IAAc,CAACA,QAAhB,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,UAASH,UAAU,GAAG,SAAH,GAAe,UAAW,EAA9D;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAA,+BACE;AACE,UAAA,SAAS,EAAG,cACVA,UAAU,GAAG,gBAAH,GAAsB,gBACjC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,OAAD;AACE,UAAA,EAAE,EAAC,eADL;AAEE,UAAA,SAAS,EAAE;AAAA,gBAAC;AAAEI,cAAAA;AAAF,aAAD;AAAA,mBACTA,QAAQ,GAAG,uBAAH,GAA6B,aAD5B;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,OAAD;AACE,UAAA,EAAE,EAAC,aADL;AAEE,UAAA,SAAS,EAAE;AAAA,gBAAC;AAAEA,cAAAA;AAAF,aAAD;AAAA,mBACTA,QAAQ,GAAG,uBAAH,GAA6B,aAD5B;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,OAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,SAAS,EAAE;AAAA,gBAAC;AAAEA,cAAAA;AAAF,aAAD;AAAA,mBACTA,QAAQ,GAAG,uBAAH,GAA6B,aAD5B;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,qCADZ;AAEE,UAAA,OAAO,EAAEF,WAFX;AAAA,oBAIGF,UAAU,GAAG,cAAH,GAAoB;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA1DD;;GAAMD,M;;KAAAA,M;AA4DN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <nav className={`navbar ${isDarkMode ? \"is-dark\" : \"is-light\"}`}>\r\n      <div className=\"navbar-brand\">\r\n        <Link to=\"/\" className=\"navbar-item\">\r\n          <h1\r\n            className={`title is-4 ${\r\n              isDarkMode ? \"has-text-white\" : \"has-text-black\"\r\n            }`}\r\n          >\r\n            MERN\r\n          </h1>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <NavLink\r\n            to=\"/JobTitleList\"\r\n            className={({ isActive }) =>\r\n              isActive ? \"navbar-item is-active\" : \"navbar-item\"\r\n            }\r\n          >\r\n            Job Title\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/SalaryList\"\r\n            className={({ isActive }) =>\r\n              isActive ? \"navbar-item is-active\" : \"navbar-item\"\r\n            }\r\n          >\r\n            Job Position\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/\"\r\n            className={({ isActive }) =>\r\n              isActive ? \"navbar-item is-active\" : \"navbar-item\"\r\n            }\r\n          >\r\n            Employee\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"navbar-end mt-3 mr-5\">\r\n          <button\r\n            className=\"button is-small is-primary is-light\"\r\n            onClick={toggleTheme}\r\n          >\r\n            {isDarkMode ? \"  Light Mode\" : \" Dark Mode\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}