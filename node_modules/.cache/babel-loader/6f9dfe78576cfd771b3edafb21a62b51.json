{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Printing\\\\SalaryPDF.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document } from \"@react-pdf/renderer\";\nimport styles from \"./styles\"; // Import shared styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SalaryPDF = _ref => {\n  let {\n    salaries\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.header,\n        children: \"Salary Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableHeader,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Salary ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Position / Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), salaries.map((user, index) => /*#__PURE__*/_jsxDEV(View, {\n          style: [styles.tableRow, index % 2 !== 0 ? styles.tableRowAlternate : null // Alternate row colors\n          ],\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.salaryCell,\n            children: user.salary ? parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            }) : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = SalaryPDF;\nexport default SalaryPDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryPDF\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Printing/SalaryPDF.js"],"names":["React","Page","Text","View","Document","styles","SalaryPDF","salaries","page","header","table","tableHeader","tableHeaderCell","map","user","index","tableRow","tableRowAlternate","tableCell","id","Job_Title","position","salaryCell","salary","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,QAA2C,qBAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAA+B;;;;AAE/B,MAAMC,SAAS,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAChB,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAEF,MAAM,CAACG,IAA9B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA,gCAEE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,WAApB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEN,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAUGL,QAAQ,CAACM,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLV,MAAM,CAACW,QADF,EAELD,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBV,MAAM,CAACY,iBAAzB,GAA6C,IAFxC,CAE8C;AAF9C,WADT;AAAA,kCAOE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA,sBAAgCJ,IAAI,CAACK;AAArC;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEd,MAAM,CAACa,SAApB;AAAA,sBAAgCJ,IAAI,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEf,MAAM,CAACa,SAApB;AAAA,sBAAgCJ,IAAI,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEhB,MAAM,CAACiB,UAApB;AAAA,sBACGR,IAAI,CAACS,MAAL,GACGC,UAAU,CAACV,IAAI,CAACS,MAAN,CAAV,CAAwBE,cAAxB,CAAuC,OAAvC,EAAgD;AAC9CC,cAAAA,qBAAqB,EAAE;AADuB,aAAhD,CADH,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAKOZ,IAAI,CAACK,EALZ;AAAA;AAAA;AAAA;AAAA,gBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,CAAlB;;KAAMb,S;AAuCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document } from \"@react-pdf/renderer\";\r\nimport styles from \"./styles\"; // Import shared styles\r\n\r\nconst SalaryPDF = ({ salaries }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <Text style={styles.header}>Salary Report</Text>\r\n      <View style={styles.table}>\r\n        {/* Table Header */}\r\n        <View style={styles.tableHeader}>\r\n          <Text style={styles.tableHeaderCell}>Salary ID</Text>\r\n          <Text style={styles.tableHeaderCell}>Job Title</Text>\r\n          <Text style={styles.tableHeaderCell}>Position / Level</Text>\r\n          <Text style={styles.tableHeaderCell}>Salary</Text>\r\n        </View>\r\n\r\n        {/* Table Data */}\r\n        {salaries.map((user, index) => (\r\n          <View\r\n            style={[\r\n              styles.tableRow,\r\n              index % 2 !== 0 ? styles.tableRowAlternate : null, // Alternate row colors\r\n            ]}\r\n            key={user.id}\r\n          >\r\n            <Text style={styles.tableCell}>{user.id}</Text>\r\n            <Text style={styles.tableCell}>{user.Job_Title}</Text>\r\n            <Text style={styles.tableCell}>{user.position}</Text>\r\n            <Text style={styles.salaryCell}>\r\n              {user.salary\r\n                ? parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                    minimumFractionDigits: 2,\r\n                  })\r\n                : \"N/A\"}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default SalaryPDF;\r\n"]},"metadata":{},"sourceType":"module"}